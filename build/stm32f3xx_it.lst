ARM GAS  /tmp/ccVrJcUz.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	NMI_Handler:
  26              	.LFB130:
  27              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Src/stm32f3xx_it.c ****   * @attention
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f3xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f3xx_it.c ****   *
  12:Src/stm32f3xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f3xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f3xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f3xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f3xx_it.c ****   *
  17:Src/stm32f3xx_it.c ****   ******************************************************************************
  18:Src/stm32f3xx_it.c ****   */
  19:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f3xx_it.c **** 
  21:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f3xx_it.c **** #include "main.h"
  23:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  24:Src/stm32f3xx_it.c **** 
  25:Src/stm32f3xx_it.c **** volatile int mystick;
  26:Src/stm32f3xx_it.c **** 
  27:Src/stm32f3xx_it.c **** volatile int mycount = 0; //this count times the button is clicked
  28:Src/stm32f3xx_it.c **** 
  29:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  30:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  31:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccVrJcUz.s 			page 2


  32:Src/stm32f3xx_it.c **** 
  33:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  34:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  35:Src/stm32f3xx_it.c **** 
  36:Src/stm32f3xx_it.c **** /* USER CODE END TD */
  37:Src/stm32f3xx_it.c **** 
  38:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  39:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  40:Src/stm32f3xx_it.c **** 
  41:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  44:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  45:Src/stm32f3xx_it.c **** 
  46:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  47:Src/stm32f3xx_it.c **** 
  48:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  49:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  50:Src/stm32f3xx_it.c **** 
  51:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  52:Src/stm32f3xx_it.c **** 
  53:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  54:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  55:Src/stm32f3xx_it.c **** 
  56:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  57:Src/stm32f3xx_it.c **** 
  58:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  59:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  60:Src/stm32f3xx_it.c **** 
  61:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  62:Src/stm32f3xx_it.c **** 
  63:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  64:Src/stm32f3xx_it.c **** 
  65:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  66:Src/stm32f3xx_it.c **** 
  67:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  68:Src/stm32f3xx_it.c **** 
  69:Src/stm32f3xx_it.c **** /******************************************************************************/
  70:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  71:Src/stm32f3xx_it.c **** /******************************************************************************/
  72:Src/stm32f3xx_it.c **** /**
  73:Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
  74:Src/stm32f3xx_it.c ****   */
  75:Src/stm32f3xx_it.c **** void NMI_Handler(void)
  76:Src/stm32f3xx_it.c **** {
  28              		.loc 1 76 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE130:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
ARM GAS  /tmp/ccVrJcUz.s 			page 3


  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv4-sp-d16
  45              	HardFault_Handler:
  46              	.LFB131:
  77:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  78:Src/stm32f3xx_it.c **** 
  79:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  80:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  81:Src/stm32f3xx_it.c **** 
  82:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Src/stm32f3xx_it.c **** }
  84:Src/stm32f3xx_it.c **** 
  85:Src/stm32f3xx_it.c **** /**
  86:Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Src/stm32f3xx_it.c ****   */
  88:Src/stm32f3xx_it.c **** void HardFault_Handler(void)
  89:Src/stm32f3xx_it.c **** {
  47              		.loc 1 89 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE131:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	MemManage_Handler:
  67              	.LFB132:
  90:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Src/stm32f3xx_it.c **** 
  92:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Src/stm32f3xx_it.c ****   while (1)
  94:Src/stm32f3xx_it.c ****   {
  95:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Src/stm32f3xx_it.c ****   }
  98:Src/stm32f3xx_it.c **** }
  99:Src/stm32f3xx_it.c **** 
 100:Src/stm32f3xx_it.c **** /**
 101:Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
 102:Src/stm32f3xx_it.c ****   */
 103:Src/stm32f3xx_it.c **** void MemManage_Handler(void)
 104:Src/stm32f3xx_it.c **** {
  68              		.loc 1 104 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccVrJcUz.s 			page 4


  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE132:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	BusFault_Handler:
  88              	.LFB133:
 105:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Src/stm32f3xx_it.c **** 
 107:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Src/stm32f3xx_it.c ****   while (1)
 109:Src/stm32f3xx_it.c ****   {
 110:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Src/stm32f3xx_it.c ****   }
 113:Src/stm32f3xx_it.c **** }
 114:Src/stm32f3xx_it.c **** 
 115:Src/stm32f3xx_it.c **** /**
 116:Src/stm32f3xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 117:Src/stm32f3xx_it.c ****   */
 118:Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 119:Src/stm32f3xx_it.c **** {
  89              		.loc 1 119 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE133:
 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv4-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB134:
 120:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Src/stm32f3xx_it.c **** 
 122:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Src/stm32f3xx_it.c ****   while (1)
 124:Src/stm32f3xx_it.c ****   {
 125:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Src/stm32f3xx_it.c ****   }
 128:Src/stm32f3xx_it.c **** }
ARM GAS  /tmp/ccVrJcUz.s 			page 5


 129:Src/stm32f3xx_it.c **** 
 130:Src/stm32f3xx_it.c **** /**
 131:Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Src/stm32f3xx_it.c ****   */
 133:Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 134:Src/stm32f3xx_it.c **** {
 110              		.loc 1 134 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE134:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv4-sp-d16
 129              	SVC_Handler:
 130              	.LFB135:
 135:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Src/stm32f3xx_it.c **** 
 137:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Src/stm32f3xx_it.c ****   while (1)
 139:Src/stm32f3xx_it.c ****   {
 140:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Src/stm32f3xx_it.c ****   }
 143:Src/stm32f3xx_it.c **** }
 144:Src/stm32f3xx_it.c **** 
 145:Src/stm32f3xx_it.c **** /**
 146:Src/stm32f3xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 147:Src/stm32f3xx_it.c ****   */
 148:Src/stm32f3xx_it.c **** void SVC_Handler(void)
 149:Src/stm32f3xx_it.c **** {
 131              		.loc 1 149 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE135:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv4-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB136:
ARM GAS  /tmp/ccVrJcUz.s 			page 6


 150:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 151:Src/stm32f3xx_it.c **** 
 152:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 153:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 154:Src/stm32f3xx_it.c **** 
 155:Src/stm32f3xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 156:Src/stm32f3xx_it.c **** }
 157:Src/stm32f3xx_it.c **** 
 158:Src/stm32f3xx_it.c **** /**
 159:Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 160:Src/stm32f3xx_it.c ****   */
 161:Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 162:Src/stm32f3xx_it.c **** {
 150              		.loc 1 162 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE136:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv4-sp-d16
 167              	PendSV_Handler:
 168              	.LFB137:
 163:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 164:Src/stm32f3xx_it.c **** 
 165:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 166:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 167:Src/stm32f3xx_it.c **** 
 168:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 169:Src/stm32f3xx_it.c **** }
 170:Src/stm32f3xx_it.c **** 
 171:Src/stm32f3xx_it.c **** /**
 172:Src/stm32f3xx_it.c ****   * @brief This function handles Pendable request for system service.
 173:Src/stm32f3xx_it.c ****   */
 174:Src/stm32f3xx_it.c **** void PendSV_Handler(void)
 175:Src/stm32f3xx_it.c **** {
 169              		.loc 1 175 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE137:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
ARM GAS  /tmp/ccVrJcUz.s 			page 7


 184              		.fpu fpv4-sp-d16
 186              	SysTick_Handler:
 187              	.LFB138:
 176:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 177:Src/stm32f3xx_it.c **** 
 178:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 179:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 180:Src/stm32f3xx_it.c **** 
 181:Src/stm32f3xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 182:Src/stm32f3xx_it.c **** }
 183:Src/stm32f3xx_it.c **** 
 184:Src/stm32f3xx_it.c **** /**
 185:Src/stm32f3xx_it.c ****   * @brief This function handles System tick timer.
 186:Src/stm32f3xx_it.c ****   */
 187:Src/stm32f3xx_it.c **** 
 188:Src/stm32f3xx_it.c **** //stick handler
 189:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
 190:Src/stm32f3xx_it.c **** {
 188              		.loc 1 190 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 190 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 191:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 192:Src/stm32f3xx_it.c ****   mystick++;
 198              		.loc 1 192 0
 199 0002 034A     		ldr	r2, .L15
 200 0004 1368     		ldr	r3, [r2]
 201 0006 0133     		adds	r3, r3, #1
 202 0008 1360     		str	r3, [r2]
 193:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 194:Src/stm32f3xx_it.c ****   HAL_IncTick();
 203              		.loc 1 194 0
 204 000a FFF7FEFF 		bl	HAL_IncTick
 205              	.LVL0:
 206 000e 08BD     		pop	{r3, pc}
 207              	.L16:
 208              		.align	2
 209              	.L15:
 210 0010 00000000 		.word	mystick
 211              		.cfi_endproc
 212              	.LFE138:
 214              		.global	mycount
 215              		.comm	mystick,4,4
 216              		.section	.bss.mycount,"aw",%nobits
 217              		.align	2
 220              	mycount:
 221 0000 00000000 		.space	4
 222              		.text
 223              	.Letext0:
 224              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 225              		.file 3 "/usr/include/newlib/sys/_stdint.h"
ARM GAS  /tmp/ccVrJcUz.s 			page 8


 226              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 227              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 228              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccVrJcUz.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
     /tmp/ccVrJcUz.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccVrJcUz.s:25     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccVrJcUz.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccVrJcUz.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccVrJcUz.s:59     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccVrJcUz.s:66     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccVrJcUz.s:80     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccVrJcUz.s:87     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccVrJcUz.s:101    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccVrJcUz.s:108    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccVrJcUz.s:122    .text.SVC_Handler:0000000000000000 $t
     /tmp/ccVrJcUz.s:129    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/ccVrJcUz.s:141    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccVrJcUz.s:148    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccVrJcUz.s:160    .text.PendSV_Handler:0000000000000000 $t
     /tmp/ccVrJcUz.s:167    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/ccVrJcUz.s:179    .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccVrJcUz.s:186    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccVrJcUz.s:210    .text.SysTick_Handler:0000000000000010 $d
                            *COM*:0000000000000004 mystick
     /tmp/ccVrJcUz.s:220    .bss.mycount:0000000000000000 mycount
     /tmp/ccVrJcUz.s:217    .bss.mycount:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
