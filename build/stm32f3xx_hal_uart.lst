ARM GAS  /tmp/cc7iiXFd.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	UART_EndTxTransfer:
  25              	.LFB176:
  26              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @file    stm32f3xx_hal_uart.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   [..]
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART interrupts handling:
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
ARM GAS  /tmp/cc7iiXFd.s 			page 2


  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     ==================================
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
ARM GAS  /tmp/cc7iiXFd.s 			page 3


  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @attention
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * All rights reserved.</center></h2>
ARM GAS  /tmp/cc7iiXFd.s 			page 4


 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #include "stm32f3xx_hal.h"
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup STM32F3xx_HAL_Driver
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/cc7iiXFd.s 			page 5


 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** ===============================================================================
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in asynchronous mode.
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Baud Rate
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Word Length
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Stop Bit
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Hardware flow control
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Receiver/transmitter modes
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Over Sampling Method
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) One-Bit Sampling Method
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) data logical level inversion
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX and TX pins swap
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX overrun detection disabling
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA disabling on RX error
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) MSB first on communication line
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) auto Baud rate detection
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     are available in reference manual).
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   following table.
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc7iiXFd.s 			page 6


 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Table 1. UART frame format.
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/cc7iiXFd.s 			page 7


 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART instance */
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
ARM GAS  /tmp/cc7iiXFd.s 			page 8


 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart             UART handle.
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/cc7iiXFd.s 			page 9


 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the LIN UART instance */
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
ARM GAS  /tmp/cc7iiXFd.s 			page 10


 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart        UART handle.
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the wake up method parameter */
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc7iiXFd.s 			page 11


 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/cc7iiXFd.s 			page 12


 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  /tmp/cc7iiXFd.s 			page 13


 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Register a User UART Callback
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart uart handle
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This parameter can be one of the following values:
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (pCallback == NULL)
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
ARM GAS  /tmp/cc7iiXFd.s 			page 14


 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
ARM GAS  /tmp/cc7iiXFd.s 			page 15


 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     status =  HAL_ERROR;
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return status;
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart uart handle
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This parameter can be one of the following values:
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
ARM GAS  /tmp/cc7iiXFd.s 			page 16


 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc7iiXFd.s 			page 17


 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     status =  HAL_ERROR;
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return status;
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### IO operation functions #####
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and Half duplex data transfers.
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) There are two mode of transfer:
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            after finishing transfer.
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The end of the data processing will be indicated through the
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            using DMA mode.
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Blocking mode API's are :
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive()
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
ARM GAS  /tmp/cc7iiXFd.s 			page 18


 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Abort()
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         Errors are handled as follows :
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 provided through pData.
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart   UART handle.
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
ARM GAS  /tmp/cc7iiXFd.s 			page 19


1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint8_t  *pdata8bits;
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *pdata16bits;
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart;
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = NULL;
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = pData;
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = NULL;
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (pdata8bits == NULL)
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata16bits++;
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata8bits++;
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/cc7iiXFd.s 			page 20


1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 available through pData.
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart   UART handle.
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint8_t  *pdata8bits;
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *pdata16bits;
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask;
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart;
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize  = Size;
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
ARM GAS  /tmp/cc7iiXFd.s 			page 21


1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = NULL;
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = pData;
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = NULL;
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* as long as data have to be received */
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (pdata8bits == NULL)
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata16bits++;
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata8bits++;
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount--;
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 provided through pData.
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/cc7iiXFd.s 			page 22


1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR       = NULL;
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 available through pData.
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
ARM GAS  /tmp/cc7iiXFd.s 			page 23


1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize  = Size;
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxISR       = NULL;
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 provided through pData.
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
ARM GAS  /tmp/cc7iiXFd.s 			page 24


1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA error callback */
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA abort callback */
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Set error code to DMA */
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Restore huart->gState to ready */
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_ERROR;
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in the UART CR3 register */
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  /tmp/cc7iiXFd.s 			page 25


1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the parity bit (MSB position).
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 available through pData.
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA error callback */
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA abort callback */
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the DMA channel */
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Set error code to DMA */
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
ARM GAS  /tmp/cc7iiXFd.s 			page 26


1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Restore huart->gState to ready */
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_ERROR;
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in the UART CR3 register */
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/cc7iiXFd.s 			page 27


1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/cc7iiXFd.s 			page 28


1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
ARM GAS  /tmp/cc7iiXFd.s 			page 29


1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  /tmp/cc7iiXFd.s 			page 30


1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc7iiXFd.s 			page 31


1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx transfer counter */
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
ARM GAS  /tmp/cc7iiXFd.s 			page 32


1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Rx transfer counter */
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable interrupts */
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      before any call to DMA Abort functions */
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmarx != NULL)
ARM GAS  /tmp/cc7iiXFd.s 			page 33


1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
ARM GAS  /tmp/cc7iiXFd.s 			page 34


1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (abortcplt == 1U)
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear ISR function pointers */
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxISR = NULL;
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR = NULL;
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset errorCode */
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Discard the received data */
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Abort complete callback */
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
ARM GAS  /tmp/cc7iiXFd.s 			page 35


1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable interrupts */
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Tx transfer counter */
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount = 0U;
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear TxISR function pointers */
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR = NULL;
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx transfer counter */
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear TxISR function pointers */
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR = NULL;
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
ARM GAS  /tmp/cc7iiXFd.s 			page 36


1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Rx transfer counter */
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount = 0U;
2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear RxISR function pointer */
ARM GAS  /tmp/cc7iiXFd.s 			page 37


2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Discard the received data */
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Rx transfer counter */
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RxISR function pointer */
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
ARM GAS  /tmp/cc7iiXFd.s 			page 38


2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorflags;
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorcode;
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If no error occurs */
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == 0U)
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (huart->RxISR != NULL)
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxISR(huart);
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If some errors occur */
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((errorflags != 0U)
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc7iiXFd.s 			page 39


2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (huart->RxISR != NULL)
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->RxISR(huart);
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           - Receiver Timeout error in Reception
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           - Overrun error in Reception
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           - any error occurs in DMA mode reception
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       */
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Abort DMA RX */
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
ARM GAS  /tmp/cc7iiXFd.s 			page 40


2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           else
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Call user error callback */
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /*Call registered error callback*/
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->ErrorCallback(huart);
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /*Call legacy weak error callback*/
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         else
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Call user error callback */
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /*Call registered error callback*/
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCallback(huart);
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /*Call legacy weak error callback*/
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error is notified to user through user error callback */
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /*Call registered error callback*/
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCallback(huart);
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /*Call legacy weak error callback*/
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } /* End if some error occurs */
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->WakeupCallback(huart);
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
ARM GAS  /tmp/cc7iiXFd.s 			page 41


2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->TxISR != NULL)
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR(huart);
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  /tmp/cc7iiXFd.s 			page 42


2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART error callback.
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc7iiXFd.s 			page 43


2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART control functions
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
ARM GAS  /tmp/cc7iiXFd.s 			page 44


2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the USART RTOEN bit */
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  /tmp/cc7iiXFd.s 			page 45


2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the USART RTOEN bit */
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  /tmp/cc7iiXFd.s 			page 46


2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status.
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
ARM GAS  /tmp/cc7iiXFd.s 			page 47


2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Transmit break characters.
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Send break characters */
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides functions allowing to :
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle state.
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle error code
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Return the UART handle state.
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL state
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  /tmp/cc7iiXFd.s 			page 48


2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1;
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp2;
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp1 = huart->gState;
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval UART Error Code
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval none
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init the UART Callback settings */
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  /tmp/cc7iiXFd.s 			page 49


2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg;
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t brrtemp;
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * to huart->Init.StopBits value */
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg |= huart->Init.OneBitSampling;
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
ARM GAS  /tmp/cc7iiXFd.s 			page 50


2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
2793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
2795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       ret = HAL_ERROR;
2799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
2807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
2811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
ARM GAS  /tmp/cc7iiXFd.s 			page 51


2826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
2832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       ret = HAL_ERROR;
2836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear ISR function pointers */
2841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxISR = NULL;
2842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxISR = NULL;
2843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return ret;
2845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure data inversion */
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
ARM GAS  /tmp/cc7iiXFd.s 			page 52


2883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Check the UART Idle State.
2923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart;
2929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tickstart = HAL_GetTick();
2935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
2938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until TEACK flag is set */
ARM GAS  /tmp/cc7iiXFd.s 			page 53


2940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
2941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout occurred */
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until REACK flag is set */
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
2952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout occurred */
2954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART State */
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart     UART handle.
2970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
2971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
2972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Tickstart Tick start value
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout   Timeout duration
2974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
2978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check for the Timeout */
2983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
2984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
2986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
2995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
ARM GAS  /tmp/cc7iiXFd.s 			page 54


2997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
3003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
3006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
3014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Process Unlocked */
3015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
3018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
3019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
3020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
3029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  27              		.loc 1 3032 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
3033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  33              		.loc 1 3034 0
  34 0000 0268     		ldr	r2, [r0]
  35 0002 1368     		ldr	r3, [r2]
  36 0004 23F0C003 		bic	r3, r3, #192
  37 0008 1360     		str	r3, [r2]
3035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  38              		.loc 1 3037 0
  39 000a 2023     		movs	r3, #32
  40 000c 4367     		str	r3, [r0, #116]
  41 000e 7047     		bx	lr
  42              		.cfi_endproc
ARM GAS  /tmp/cc7iiXFd.s 			page 55


  43              	.LFE176:
  45              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  50              		.fpu fpv4-sp-d16
  52              	UART_EndRxTransfer:
  53              	.LFB177:
3038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
3044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  54              		.loc 1 3047 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
3048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  60              		.loc 1 3049 0
  61 0000 0268     		ldr	r2, [r0]
  62 0002 1368     		ldr	r3, [r2]
  63 0004 23F49073 		bic	r3, r3, #288
  64 0008 1360     		str	r3, [r2]
3050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  65              		.loc 1 3050 0
  66 000a 0268     		ldr	r2, [r0]
  67 000c 9368     		ldr	r3, [r2, #8]
  68 000e 23F00103 		bic	r3, r3, #1
  69 0012 9360     		str	r3, [r2, #8]
3051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  70              		.loc 1 3053 0
  71 0014 2023     		movs	r3, #32
  72 0016 8367     		str	r3, [r0, #120]
3054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxISR = NULL;
  73              		.loc 1 3056 0
  74 0018 0023     		movs	r3, #0
  75 001a 0366     		str	r3, [r0, #96]
  76 001c 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE177:
  80              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  81              		.align	1
  82              		.syntax unified
  83              		.thumb
ARM GAS  /tmp/cc7iiXFd.s 			page 56


  84              		.thumb_func
  85              		.fpu fpv4-sp-d16
  87              	UART_TxISR_8BIT:
  88              	.LFB188:
3057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
3070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
3073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
3076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Circular mode */
3082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
3083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/cc7iiXFd.s 			page 57


3110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
3122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
3125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
3132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART communication error callback.
ARM GAS  /tmp/cc7iiXFd.s 			page 58


3167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
3182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
3190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered error callback*/
3197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCallback(huart);
3198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak error callback*/
3200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
3214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
3215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered error callback*/
3218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCallback(huart);
3219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak error callback*/
3221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  /tmp/cc7iiXFd.s 			page 59


3224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
3245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
3250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
3251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
3253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort complete callback */
3266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
ARM GAS  /tmp/cc7iiXFd.s 			page 60


3281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
3294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
3300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
3302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
3308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort complete callback */
3317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
ARM GAS  /tmp/cc7iiXFd.s 			page 61


3338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
3366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
3371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  /tmp/cc7iiXFd.s 			page 62


  89              		.loc 1 3394 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
  94              	.LVL2:
3395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  95              		.loc 1 3396 0
  96 0000 436F     		ldr	r3, [r0, #116]
  97 0002 212B     		cmp	r3, #33
  98 0004 00D0     		beq	.L6
  99              	.L3:
 100 0006 7047     		bx	lr
 101              	.L6:
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 102              		.loc 1 3398 0
 103 0008 B0F85230 		ldrh	r3, [r0, #82]
 104 000c 9BB2     		uxth	r3, r3
 105 000e 73B1     		cbz	r3, .L7
3399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
3407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 106              		.loc 1 3408 0
 107 0010 0368     		ldr	r3, [r0]
 108 0012 C26C     		ldr	r2, [r0, #76]
 109 0014 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 110 0016 1A85     		strh	r2, [r3, #40]	@ movhi
3409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pTxBuffPtr++;
 111              		.loc 1 3409 0
 112 0018 C36C     		ldr	r3, [r0, #76]
 113 001a 0133     		adds	r3, r3, #1
 114 001c C364     		str	r3, [r0, #76]
3410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 115              		.loc 1 3410 0
 116 001e B0F85230 		ldrh	r3, [r0, #82]
 117 0022 9BB2     		uxth	r3, r3
 118 0024 013B     		subs	r3, r3, #1
 119 0026 9BB2     		uxth	r3, r3
 120 0028 A0F85230 		strh	r3, [r0, #82]	@ movhi
3411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 121              		.loc 1 3413 0
 122 002c EBE7     		b	.L3
 123              	.L7:
3401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 124              		.loc 1 3401 0
 125 002e 0268     		ldr	r2, [r0]
ARM GAS  /tmp/cc7iiXFd.s 			page 63


 126 0030 1368     		ldr	r3, [r2]
 127 0032 23F08003 		bic	r3, r3, #128
 128 0036 1360     		str	r3, [r2]
3404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 129              		.loc 1 3404 0
 130 0038 0268     		ldr	r2, [r0]
 131 003a 1368     		ldr	r3, [r2]
 132 003c 43F04003 		orr	r3, r3, #64
 133 0040 1360     		str	r3, [r2]
 134 0042 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE188:
 138              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	UART_TxISR_16BIT:
 146              	.LFB189:
3414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 147              		.loc 1 3423 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152              	.LVL3:
3424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *tmp;
3425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 153              		.loc 1 3427 0
 154 0000 436F     		ldr	r3, [r0, #116]
 155 0002 212B     		cmp	r3, #33
 156 0004 00D0     		beq	.L11
 157              	.L8:
 158 0006 7047     		bx	lr
 159              	.L11:
3428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 160              		.loc 1 3429 0
 161 0008 B0F85230 		ldrh	r3, [r0, #82]
 162 000c 9BB2     		uxth	r3, r3
 163 000e 83B1     		cbz	r3, .L12
3430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
3433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc7iiXFd.s 			page 64


3434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
3438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 164              		.loc 1 3439 0
 165 0010 C36C     		ldr	r3, [r0, #76]
 166              	.LVL4:
3440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 167              		.loc 1 3440 0
 168 0012 0268     		ldr	r2, [r0]
 169 0014 1B88     		ldrh	r3, [r3]
 170              	.LVL5:
 171 0016 C3F30803 		ubfx	r3, r3, #0, #9
 172 001a 1385     		strh	r3, [r2, #40]	@ movhi
 173              	.LVL6:
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 174              		.loc 1 3441 0
 175 001c C36C     		ldr	r3, [r0, #76]
 176 001e 0233     		adds	r3, r3, #2
 177 0020 C364     		str	r3, [r0, #76]
3442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 178              		.loc 1 3442 0
 179 0022 B0F85230 		ldrh	r3, [r0, #82]
 180 0026 9BB2     		uxth	r3, r3
 181 0028 013B     		subs	r3, r3, #1
 182 002a 9BB2     		uxth	r3, r3
 183 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
3443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 184              		.loc 1 3445 0
 185 0030 E9E7     		b	.L8
 186              	.L12:
3432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 187              		.loc 1 3432 0
 188 0032 0268     		ldr	r2, [r0]
 189 0034 1368     		ldr	r3, [r2]
 190 0036 23F08003 		bic	r3, r3, #128
 191 003a 1360     		str	r3, [r2]
3435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 192              		.loc 1 3435 0
 193 003c 0268     		ldr	r2, [r0]
 194 003e 1368     		ldr	r3, [r2]
 195 0040 43F04003 		orr	r3, r3, #64
 196 0044 1360     		str	r3, [r2]
 197 0046 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE189:
 201              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 202              		.align	1
 203              		.weak	HAL_UART_MspInit
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc7iiXFd.s 			page 65


 209              	HAL_UART_MspInit:
 210              	.LFB135:
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 211              		.loc 1 650 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216              	.LVL7:
 217 0000 7047     		bx	lr
 218              		.cfi_endproc
 219              	.LFE135:
 221              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 222              		.align	1
 223              		.weak	HAL_UART_MspDeInit
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu fpv4-sp-d16
 229              	HAL_UART_MspDeInit:
 230              	.LFB136:
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 231              		.loc 1 665 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL8:
 237 0000 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE136:
 241              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 242              		.align	1
 243              		.global	HAL_UART_DeInit
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 247              		.fpu fpv4-sp-d16
 249              	HAL_UART_DeInit:
 250              	.LFB134:
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 251              		.loc 1 605 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              	.LVL9:
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 256              		.loc 1 607 0
 257 0000 C0B1     		cbz	r0, .L17
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 258              		.loc 1 605 0
 259 0002 38B5     		push	{r3, r4, r5, lr}
 260              	.LCFI0:
 261              		.cfi_def_cfa_offset 16
 262              		.cfi_offset 3, -16
 263              		.cfi_offset 4, -12
 264              		.cfi_offset 5, -8
ARM GAS  /tmp/cc7iiXFd.s 			page 66


 265              		.cfi_offset 14, -4
 266 0004 0446     		mov	r4, r0
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 267              		.loc 1 615 0
 268 0006 2423     		movs	r3, #36
 269 0008 4367     		str	r3, [r0, #116]
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 270              		.loc 1 617 0
 271 000a 0268     		ldr	r2, [r0]
 272 000c 1368     		ldr	r3, [r2]
 273 000e 23F00103 		bic	r3, r3, #1
 274 0012 1360     		str	r3, [r2]
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 275              		.loc 1 619 0
 276 0014 0368     		ldr	r3, [r0]
 277 0016 0025     		movs	r5, #0
 278 0018 1D60     		str	r5, [r3]
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 279              		.loc 1 620 0
 280 001a 0368     		ldr	r3, [r0]
 281 001c 5D60     		str	r5, [r3, #4]
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 282              		.loc 1 621 0
 283 001e 0368     		ldr	r3, [r0]
 284 0020 9D60     		str	r5, [r3, #8]
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 285              		.loc 1 632 0
 286 0022 FFF7FEFF 		bl	HAL_UART_MspDeInit
 287              	.LVL10:
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 288              		.loc 1 635 0
 289 0026 E567     		str	r5, [r4, #124]
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 290              		.loc 1 636 0
 291 0028 6567     		str	r5, [r4, #116]
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 292              		.loc 1 637 0
 293 002a A567     		str	r5, [r4, #120]
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 294              		.loc 1 639 0
 295 002c 84F87050 		strb	r5, [r4, #112]
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 296              		.loc 1 641 0
 297 0030 2846     		mov	r0, r5
 298 0032 38BD     		pop	{r3, r4, r5, pc}
 299              	.LVL11:
 300              	.L17:
 301              	.LCFI1:
 302              		.cfi_def_cfa_offset 0
 303              		.cfi_restore 3
 304              		.cfi_restore 4
 305              		.cfi_restore 5
 306              		.cfi_restore 14
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 307              		.loc 1 609 0
 308 0034 0120     		movs	r0, #1
 309              	.LVL12:
ARM GAS  /tmp/cc7iiXFd.s 			page 67


 310 0036 7047     		bx	lr
 311              		.cfi_endproc
 312              	.LFE134:
 314              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 315              		.align	1
 316              		.global	HAL_UART_Transmit_IT
 317              		.syntax unified
 318              		.thumb
 319              		.thumb_func
 320              		.fpu fpv4-sp-d16
 322              	HAL_UART_Transmit_IT:
 323              	.LFB139:
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 324              		.loc 1 1175 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 329              	.LVL13:
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 330              		.loc 1 1177 0
 331 0000 436F     		ldr	r3, [r0, #116]
 332 0002 202B     		cmp	r3, #32
 333 0004 01D0     		beq	.L30
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 334              		.loc 1 1213 0
 335 0006 0220     		movs	r0, #2
 336              	.LVL14:
 337 0008 7047     		bx	lr
 338              	.LVL15:
 339              	.L30:
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 340              		.loc 1 1179 0
 341 000a 39B3     		cbz	r1, .L27
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 342              		.loc 1 1179 0 is_stmt 0 discriminator 1
 343 000c 42B3     		cbz	r2, .L28
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 344              		.loc 1 1184 0 is_stmt 1
 345 000e 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 346 0012 012B     		cmp	r3, #1
 347 0014 26D0     		beq	.L29
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 348              		.loc 1 1184 0 is_stmt 0 discriminator 2
 349 0016 0123     		movs	r3, #1
 350 0018 80F87030 		strb	r3, [r0, #112]
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
 351              		.loc 1 1186 0 is_stmt 1 discriminator 2
 352 001c C164     		str	r1, [r0, #76]
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 353              		.loc 1 1187 0 discriminator 2
 354 001e A0F85020 		strh	r2, [r0, #80]	@ movhi
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR       = NULL;
 355              		.loc 1 1188 0 discriminator 2
 356 0022 A0F85220 		strh	r2, [r0, #82]	@ movhi
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 357              		.loc 1 1189 0 discriminator 2
ARM GAS  /tmp/cc7iiXFd.s 			page 68


 358 0026 0023     		movs	r3, #0
 359 0028 4366     		str	r3, [r0, #100]
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 360              		.loc 1 1191 0 discriminator 2
 361 002a C367     		str	r3, [r0, #124]
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 362              		.loc 1 1192 0 discriminator 2
 363 002c 2123     		movs	r3, #33
 364 002e 4367     		str	r3, [r0, #116]
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 365              		.loc 1 1195 0 discriminator 2
 366 0030 8368     		ldr	r3, [r0, #8]
 367 0032 B3F5805F 		cmp	r3, #4096
 368 0036 0BD0     		beq	.L31
 369              	.L24:
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 370              		.loc 1 1201 0
 371 0038 0B4B     		ldr	r3, .L32
 372 003a 4366     		str	r3, [r0, #100]
 373              	.L25:
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 374              		.loc 1 1204 0
 375 003c 0023     		movs	r3, #0
 376 003e 80F87030 		strb	r3, [r0, #112]
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 377              		.loc 1 1207 0
 378 0042 0168     		ldr	r1, [r0]
 379              	.LVL16:
 380 0044 0A68     		ldr	r2, [r1]
 381              	.LVL17:
 382 0046 42F08002 		orr	r2, r2, #128
 383 004a 0A60     		str	r2, [r1]
 384              	.LVL18:
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 385              		.loc 1 1209 0
 386 004c 1846     		mov	r0, r3
 387              	.LVL19:
 388 004e 7047     		bx	lr
 389              	.LVL20:
 390              	.L31:
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 391              		.loc 1 1195 0 discriminator 1
 392 0050 0369     		ldr	r3, [r0, #16]
 393 0052 002B     		cmp	r3, #0
 394 0054 F0D1     		bne	.L24
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 395              		.loc 1 1197 0
 396 0056 054B     		ldr	r3, .L32+4
 397 0058 4366     		str	r3, [r0, #100]
 398 005a EFE7     		b	.L25
 399              	.L27:
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 400              		.loc 1 1181 0
 401 005c 0120     		movs	r0, #1
 402              	.LVL21:
 403 005e 7047     		bx	lr
 404              	.LVL22:
ARM GAS  /tmp/cc7iiXFd.s 			page 69


 405              	.L28:
 406 0060 0120     		movs	r0, #1
 407              	.LVL23:
 408 0062 7047     		bx	lr
 409              	.LVL24:
 410              	.L29:
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 411              		.loc 1 1184 0
 412 0064 0220     		movs	r0, #2
 413              	.LVL25:
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 414              		.loc 1 1215 0
 415 0066 7047     		bx	lr
 416              	.L33:
 417              		.align	2
 418              	.L32:
 419 0068 00000000 		.word	UART_TxISR_8BIT
 420 006c 00000000 		.word	UART_TxISR_16BIT
 421              		.cfi_endproc
 422              	.LFE139:
 424              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 425              		.align	1
 426              		.global	HAL_UART_Receive_IT
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu fpv4-sp-d16
 432              	HAL_UART_Receive_IT:
 433              	.LFB140:
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 434              		.loc 1 1228 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 0, uses_anonymous_args = 0
 438              		@ link register save eliminated.
 439              	.LVL26:
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 440              		.loc 1 1230 0
 441 0000 836F     		ldr	r3, [r0, #120]
 442 0002 202B     		cmp	r3, #32
 443 0004 01D0     		beq	.L49
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 444              		.loc 1 1272 0
 445 0006 0220     		movs	r0, #2
 446              	.LVL27:
 447 0008 7047     		bx	lr
 448              	.LVL28:
 449              	.L49:
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 450              		.loc 1 1232 0
 451 000a 0029     		cmp	r1, #0
 452 000c 58D0     		beq	.L46
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 453              		.loc 1 1232 0 is_stmt 0 discriminator 1
 454 000e 002A     		cmp	r2, #0
 455 0010 58D0     		beq	.L47
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc7iiXFd.s 			page 70


 456              		.loc 1 1237 0 is_stmt 1
 457 0012 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 458 0016 012B     		cmp	r3, #1
 459 0018 56D0     		beq	.L48
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 460              		.loc 1 1237 0 is_stmt 0 discriminator 2
 461 001a 0123     		movs	r3, #1
 462 001c 80F87030 		strb	r3, [r0, #112]
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize  = Size;
 463              		.loc 1 1239 0 is_stmt 1 discriminator 2
 464 0020 4165     		str	r1, [r0, #84]
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 465              		.loc 1 1240 0 discriminator 2
 466 0022 A0F85820 		strh	r2, [r0, #88]	@ movhi
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxISR       = NULL;
 467              		.loc 1 1241 0 discriminator 2
 468 0026 A0F85A20 		strh	r2, [r0, #90]	@ movhi
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 469              		.loc 1 1242 0 discriminator 2
 470 002a 0023     		movs	r3, #0
 471 002c 0366     		str	r3, [r0, #96]
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 472              		.loc 1 1245 0 discriminator 2
 473 002e 8368     		ldr	r3, [r0, #8]
 474 0030 B3F5805F 		cmp	r3, #4096
 475 0034 06D0     		beq	.L50
 476 0036 A3B9     		cbnz	r3, .L39
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 477              		.loc 1 1245 0 is_stmt 0 discriminator 5
 478 0038 0369     		ldr	r3, [r0, #16]
 479 003a 73B9     		cbnz	r3, .L40
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 480              		.loc 1 1245 0 discriminator 7
 481 003c FF23     		movs	r3, #255
 482 003e A0F85C30 		strh	r3, [r0, #92]	@ movhi
 483 0042 14E0     		b	.L38
 484              	.L50:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 485              		.loc 1 1245 0 discriminator 1
 486 0044 0369     		ldr	r3, [r0, #16]
 487 0046 23B9     		cbnz	r3, .L37
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 488              		.loc 1 1245 0 discriminator 3
 489 0048 40F2FF13 		movw	r3, #511
 490 004c A0F85C30 		strh	r3, [r0, #92]	@ movhi
 491 0050 0DE0     		b	.L38
 492              	.L37:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 493              		.loc 1 1245 0 discriminator 4
 494 0052 FF23     		movs	r3, #255
 495 0054 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 496 0058 09E0     		b	.L38
 497              	.L40:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 498              		.loc 1 1245 0 discriminator 8
 499 005a 7F23     		movs	r3, #127
 500 005c A0F85C30 		strh	r3, [r0, #92]	@ movhi
ARM GAS  /tmp/cc7iiXFd.s 			page 71


 501 0060 05E0     		b	.L38
 502              	.L39:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 503              		.loc 1 1245 0 discriminator 6
 504 0062 B3F1805F 		cmp	r3, #268435456
 505 0066 1BD0     		beq	.L51
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 506              		.loc 1 1245 0 discriminator 10
 507 0068 0023     		movs	r3, #0
 508 006a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 509              	.L38:
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 510              		.loc 1 1247 0 is_stmt 1
 511 006e 0023     		movs	r3, #0
 512 0070 C367     		str	r3, [r0, #124]
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 513              		.loc 1 1248 0
 514 0072 2223     		movs	r3, #34
 515 0074 8367     		str	r3, [r0, #120]
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 516              		.loc 1 1251 0
 517 0076 0268     		ldr	r2, [r0]
 518              	.LVL29:
 519 0078 9368     		ldr	r3, [r2, #8]
 520 007a 43F00103 		orr	r3, r3, #1
 521 007e 9360     		str	r3, [r2, #8]
 522              	.LVL30:
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 523              		.loc 1 1254 0
 524 0080 8368     		ldr	r3, [r0, #8]
 525 0082 B3F5805F 		cmp	r3, #4096
 526 0086 15D0     		beq	.L52
 527              	.L43:
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 528              		.loc 1 1260 0
 529 0088 104B     		ldr	r3, .L53
 530 008a 0366     		str	r3, [r0, #96]
 531              	.L44:
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 532              		.loc 1 1263 0
 533 008c 0023     		movs	r3, #0
 534 008e 80F87030 		strb	r3, [r0, #112]
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 535              		.loc 1 1266 0
 536 0092 0168     		ldr	r1, [r0]
 537              	.LVL31:
 538 0094 0A68     		ldr	r2, [r1]
 539 0096 42F49072 		orr	r2, r2, #288
 540 009a 0A60     		str	r2, [r1]
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 541              		.loc 1 1268 0
 542 009c 1846     		mov	r0, r3
 543              	.LVL32:
 544 009e 7047     		bx	lr
 545              	.LVL33:
 546              	.L51:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc7iiXFd.s 			page 72


 547              		.loc 1 1245 0 discriminator 9
 548 00a0 0369     		ldr	r3, [r0, #16]
 549 00a2 1BB9     		cbnz	r3, .L42
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 550              		.loc 1 1245 0 is_stmt 0 discriminator 11
 551 00a4 7F23     		movs	r3, #127
 552 00a6 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 553 00aa E0E7     		b	.L38
 554              	.L42:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 555              		.loc 1 1245 0 discriminator 12
 556 00ac 3F23     		movs	r3, #63
 557 00ae A0F85C30 		strh	r3, [r0, #92]	@ movhi
 558 00b2 DCE7     		b	.L38
 559              	.LVL34:
 560              	.L52:
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 561              		.loc 1 1254 0 is_stmt 1 discriminator 1
 562 00b4 0369     		ldr	r3, [r0, #16]
 563 00b6 002B     		cmp	r3, #0
 564 00b8 E6D1     		bne	.L43
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 565              		.loc 1 1256 0
 566 00ba 054B     		ldr	r3, .L53+4
 567 00bc 0366     		str	r3, [r0, #96]
 568 00be E5E7     		b	.L44
 569              	.LVL35:
 570              	.L46:
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 571              		.loc 1 1234 0
 572 00c0 0120     		movs	r0, #1
 573              	.LVL36:
 574 00c2 7047     		bx	lr
 575              	.LVL37:
 576              	.L47:
 577 00c4 0120     		movs	r0, #1
 578              	.LVL38:
 579 00c6 7047     		bx	lr
 580              	.LVL39:
 581              	.L48:
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 582              		.loc 1 1237 0
 583 00c8 0220     		movs	r0, #2
 584              	.LVL40:
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 585              		.loc 1 1274 0
 586 00ca 7047     		bx	lr
 587              	.L54:
 588              		.align	2
 589              	.L53:
 590 00cc 00000000 		.word	UART_RxISR_8BIT
 591 00d0 00000000 		.word	UART_RxISR_16BIT
 592              		.cfi_endproc
 593              	.LFE140:
 595              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 596              		.align	1
 597              		.global	HAL_UART_Transmit_DMA
ARM GAS  /tmp/cc7iiXFd.s 			page 73


 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu fpv4-sp-d16
 603              	HAL_UART_Transmit_DMA:
 604              	.LFB141:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 605              		.loc 1 1287 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              	.LVL41:
 610 0000 10B5     		push	{r4, lr}
 611              	.LCFI2:
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 4, -8
 614              		.cfi_offset 14, -4
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 615              		.loc 1 1289 0
 616 0002 446F     		ldr	r4, [r0, #116]
 617 0004 202C     		cmp	r4, #32
 618 0006 01D0     		beq	.L63
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 619              		.loc 1 1346 0
 620 0008 0220     		movs	r0, #2
 621              	.LVL42:
 622 000a 10BD     		pop	{r4, pc}
 623              	.LVL43:
 624              	.L63:
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 625              		.loc 1 1291 0
 626 000c 0029     		cmp	r1, #0
 627 000e 3CD0     		beq	.L59
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 628              		.loc 1 1291 0 is_stmt 0 discriminator 1
 629 0010 002A     		cmp	r2, #0
 630 0012 3CD0     		beq	.L60
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 631              		.loc 1 1296 0 is_stmt 1
 632 0014 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 633 0018 012B     		cmp	r3, #1
 634 001a 3AD0     		beq	.L61
 635 001c 1346     		mov	r3, r2
 636 001e 0446     		mov	r4, r0
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 637              		.loc 1 1296 0 is_stmt 0 discriminator 2
 638 0020 0122     		movs	r2, #1
 639              	.LVL44:
 640 0022 80F87020 		strb	r2, [r0, #112]
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
 641              		.loc 1 1298 0 is_stmt 1 discriminator 2
 642 0026 C164     		str	r1, [r0, #76]
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 643              		.loc 1 1299 0 discriminator 2
 644 0028 A0F85030 		strh	r3, [r0, #80]	@ movhi
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 645              		.loc 1 1300 0 discriminator 2
ARM GAS  /tmp/cc7iiXFd.s 			page 74


 646 002c A0F85230 		strh	r3, [r0, #82]	@ movhi
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 647              		.loc 1 1302 0 discriminator 2
 648 0030 0022     		movs	r2, #0
 649 0032 C267     		str	r2, [r0, #124]
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 650              		.loc 1 1303 0 discriminator 2
 651 0034 2122     		movs	r2, #33
 652 0036 4267     		str	r2, [r0, #116]
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 653              		.loc 1 1305 0 discriminator 2
 654 0038 826E     		ldr	r2, [r0, #104]
 655 003a 8AB1     		cbz	r2, .L57
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 656              		.loc 1 1308 0
 657 003c 1649     		ldr	r1, .L65
 658              	.LVL45:
 659 003e 9162     		str	r1, [r2, #40]
 660              	.LVL46:
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 661              		.loc 1 1311 0
 662 0040 826E     		ldr	r2, [r0, #104]
 663 0042 1649     		ldr	r1, .L65+4
 664 0044 D162     		str	r1, [r2, #44]
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 665              		.loc 1 1314 0
 666 0046 826E     		ldr	r2, [r0, #104]
 667 0048 1549     		ldr	r1, .L65+8
 668 004a 1163     		str	r1, [r2, #48]
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 669              		.loc 1 1317 0
 670 004c 826E     		ldr	r2, [r0, #104]
 671 004e 0021     		movs	r1, #0
 672 0050 5163     		str	r1, [r2, #52]
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 673              		.loc 1 1320 0
 674 0052 0268     		ldr	r2, [r0]
 675 0054 2832     		adds	r2, r2, #40
 676 0056 C16C     		ldr	r1, [r0, #76]
 677 0058 806E     		ldr	r0, [r0, #104]
 678              	.LVL47:
 679 005a FFF7FEFF 		bl	HAL_DMA_Start_IT
 680              	.LVL48:
 681 005e 58B9     		cbnz	r0, .L64
 682              	.L57:
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 683              		.loc 1 1334 0
 684 0060 2368     		ldr	r3, [r4]
 685 0062 4022     		movs	r2, #64
 686 0064 1A62     		str	r2, [r3, #32]
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 687              		.loc 1 1336 0
 688 0066 0020     		movs	r0, #0
 689 0068 84F87000 		strb	r0, [r4, #112]
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 690              		.loc 1 1340 0
 691 006c 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc7iiXFd.s 			page 75


 692 006e 9368     		ldr	r3, [r2, #8]
 693 0070 43F08003 		orr	r3, r3, #128
 694 0074 9360     		str	r3, [r2, #8]
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 695              		.loc 1 1342 0
 696 0076 10BD     		pop	{r4, pc}
 697              	.LVL49:
 698              	.L64:
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 699              		.loc 1 1323 0
 700 0078 1023     		movs	r3, #16
 701 007a E367     		str	r3, [r4, #124]
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 702              		.loc 1 1325 0
 703 007c 0023     		movs	r3, #0
 704 007e 84F87030 		strb	r3, [r4, #112]
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 705              		.loc 1 1328 0
 706 0082 2023     		movs	r3, #32
 707 0084 6367     		str	r3, [r4, #116]
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 708              		.loc 1 1330 0
 709 0086 0120     		movs	r0, #1
 710 0088 10BD     		pop	{r4, pc}
 711              	.LVL50:
 712              	.L59:
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 713              		.loc 1 1293 0
 714 008a 0120     		movs	r0, #1
 715              	.LVL51:
 716 008c 10BD     		pop	{r4, pc}
 717              	.LVL52:
 718              	.L60:
 719 008e 0120     		movs	r0, #1
 720              	.LVL53:
 721 0090 10BD     		pop	{r4, pc}
 722              	.LVL54:
 723              	.L61:
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 724              		.loc 1 1296 0
 725 0092 0220     		movs	r0, #2
 726              	.LVL55:
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 727              		.loc 1 1348 0
 728 0094 10BD     		pop	{r4, pc}
 729              	.L66:
 730 0096 00BF     		.align	2
 731              	.L65:
 732 0098 00000000 		.word	UART_DMATransmitCplt
 733 009c 00000000 		.word	UART_DMATxHalfCplt
 734 00a0 00000000 		.word	UART_DMAError
 735              		.cfi_endproc
 736              	.LFE141:
 738              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 739              		.align	1
 740              		.global	HAL_UART_Receive_DMA
 741              		.syntax unified
ARM GAS  /tmp/cc7iiXFd.s 			page 76


 742              		.thumb
 743              		.thumb_func
 744              		.fpu fpv4-sp-d16
 746              	HAL_UART_Receive_DMA:
 747              	.LFB142:
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 748              		.loc 1 1363 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 0, uses_anonymous_args = 0
 752              	.LVL56:
 753 0000 10B5     		push	{r4, lr}
 754              	.LCFI3:
 755              		.cfi_def_cfa_offset 8
 756              		.cfi_offset 4, -8
 757              		.cfi_offset 14, -4
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 758              		.loc 1 1365 0
 759 0002 846F     		ldr	r4, [r0, #120]
 760 0004 202C     		cmp	r4, #32
 761 0006 01D0     		beq	.L75
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 762              		.loc 1 1424 0
 763 0008 0220     		movs	r0, #2
 764              	.LVL57:
 765 000a 10BD     		pop	{r4, pc}
 766              	.LVL58:
 767              	.L75:
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 768              		.loc 1 1367 0
 769 000c 0029     		cmp	r1, #0
 770 000e 41D0     		beq	.L71
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 771              		.loc 1 1367 0 is_stmt 0 discriminator 1
 772 0010 002A     		cmp	r2, #0
 773 0012 41D0     		beq	.L72
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 774              		.loc 1 1372 0 is_stmt 1
 775 0014 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 776 0018 012B     		cmp	r3, #1
 777 001a 3FD0     		beq	.L73
 778 001c 1346     		mov	r3, r2
 779 001e 0446     		mov	r4, r0
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 780              		.loc 1 1372 0 is_stmt 0 discriminator 2
 781 0020 0122     		movs	r2, #1
 782              	.LVL59:
 783 0022 80F87020 		strb	r2, [r0, #112]
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 784              		.loc 1 1374 0 is_stmt 1 discriminator 2
 785 0026 4165     		str	r1, [r0, #84]
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 786              		.loc 1 1375 0 discriminator 2
 787 0028 A0F85830 		strh	r3, [r0, #88]	@ movhi
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 788              		.loc 1 1377 0 discriminator 2
 789 002c 0022     		movs	r2, #0
ARM GAS  /tmp/cc7iiXFd.s 			page 77


 790 002e C267     		str	r2, [r0, #124]
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 791              		.loc 1 1378 0 discriminator 2
 792 0030 2222     		movs	r2, #34
 793 0032 8267     		str	r2, [r0, #120]
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 794              		.loc 1 1380 0 discriminator 2
 795 0034 C26E     		ldr	r2, [r0, #108]
 796 0036 8AB1     		cbz	r2, .L69
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 797              		.loc 1 1383 0
 798 0038 1949     		ldr	r1, .L77
 799              	.LVL60:
 800 003a 9162     		str	r1, [r2, #40]
 801              	.LVL61:
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 802              		.loc 1 1386 0
 803 003c C26E     		ldr	r2, [r0, #108]
 804 003e 1949     		ldr	r1, .L77+4
 805 0040 D162     		str	r1, [r2, #44]
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 806              		.loc 1 1389 0
 807 0042 C26E     		ldr	r2, [r0, #108]
 808 0044 1849     		ldr	r1, .L77+8
 809 0046 1163     		str	r1, [r2, #48]
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 810              		.loc 1 1392 0
 811 0048 C26E     		ldr	r2, [r0, #108]
 812 004a 0021     		movs	r1, #0
 813 004c 5163     		str	r1, [r2, #52]
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 814              		.loc 1 1395 0
 815 004e 0168     		ldr	r1, [r0]
 816 0050 426D     		ldr	r2, [r0, #84]
 817 0052 2431     		adds	r1, r1, #36
 818 0054 C06E     		ldr	r0, [r0, #108]
 819              	.LVL62:
 820 0056 FFF7FEFF 		bl	HAL_DMA_Start_IT
 821              	.LVL63:
 822 005a 90B9     		cbnz	r0, .L76
 823              	.L69:
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 824              		.loc 1 1408 0
 825 005c 0020     		movs	r0, #0
 826 005e 84F87000 		strb	r0, [r4, #112]
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 827              		.loc 1 1411 0
 828 0062 2268     		ldr	r2, [r4]
 829 0064 1368     		ldr	r3, [r2]
 830 0066 43F48073 		orr	r3, r3, #256
 831 006a 1360     		str	r3, [r2]
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 832              		.loc 1 1414 0
 833 006c 2268     		ldr	r2, [r4]
 834 006e 9368     		ldr	r3, [r2, #8]
 835 0070 43F00103 		orr	r3, r3, #1
 836 0074 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/cc7iiXFd.s 			page 78


1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 837              		.loc 1 1418 0
 838 0076 2268     		ldr	r2, [r4]
 839 0078 9368     		ldr	r3, [r2, #8]
 840 007a 43F04003 		orr	r3, r3, #64
 841 007e 9360     		str	r3, [r2, #8]
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 842              		.loc 1 1420 0
 843 0080 10BD     		pop	{r4, pc}
 844              	.LVL64:
 845              	.L76:
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 846              		.loc 1 1398 0
 847 0082 1023     		movs	r3, #16
 848 0084 E367     		str	r3, [r4, #124]
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 849              		.loc 1 1400 0
 850 0086 0023     		movs	r3, #0
 851 0088 84F87030 		strb	r3, [r4, #112]
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 852              		.loc 1 1403 0
 853 008c 2023     		movs	r3, #32
 854 008e 6367     		str	r3, [r4, #116]
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 855              		.loc 1 1405 0
 856 0090 0120     		movs	r0, #1
 857 0092 10BD     		pop	{r4, pc}
 858              	.LVL65:
 859              	.L71:
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 860              		.loc 1 1369 0
 861 0094 0120     		movs	r0, #1
 862              	.LVL66:
 863 0096 10BD     		pop	{r4, pc}
 864              	.LVL67:
 865              	.L72:
 866 0098 0120     		movs	r0, #1
 867              	.LVL68:
 868 009a 10BD     		pop	{r4, pc}
 869              	.LVL69:
 870              	.L73:
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 871              		.loc 1 1372 0
 872 009c 0220     		movs	r0, #2
 873              	.LVL70:
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 874              		.loc 1 1426 0
 875 009e 10BD     		pop	{r4, pc}
 876              	.L78:
 877              		.align	2
 878              	.L77:
 879 00a0 00000000 		.word	UART_DMAReceiveCplt
 880 00a4 00000000 		.word	UART_DMARxHalfCplt
 881 00a8 00000000 		.word	UART_DMAError
 882              		.cfi_endproc
 883              	.LFE142:
 885              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
ARM GAS  /tmp/cc7iiXFd.s 			page 79


 886              		.align	1
 887              		.global	HAL_UART_DMAPause
 888              		.syntax unified
 889              		.thumb
 890              		.thumb_func
 891              		.fpu fpv4-sp-d16
 893              	HAL_UART_DMAPause:
 894              	.LFB143:
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 895              		.loc 1 1434 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
 898              		@ frame_needed = 0, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900              	.LVL71:
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 901              		.loc 1 1435 0
 902 0000 416F     		ldr	r1, [r0, #116]
 903              	.LVL72:
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 904              		.loc 1 1436 0
 905 0002 826F     		ldr	r2, [r0, #120]
 906              	.LVL73:
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 907              		.loc 1 1438 0
 908 0004 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 909 0008 012B     		cmp	r3, #1
 910 000a 2CD0     		beq	.L83
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 911              		.loc 1 1434 0 discriminator 2
 912 000c 10B4     		push	{r4}
 913              	.LCFI4:
 914              		.cfi_def_cfa_offset 4
 915              		.cfi_offset 4, -4
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 916              		.loc 1 1438 0 discriminator 2
 917 000e 0123     		movs	r3, #1
 918 0010 80F87030 		strb	r3, [r0, #112]
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 919              		.loc 1 1440 0 discriminator 2
 920 0014 0368     		ldr	r3, [r0]
 921 0016 9C68     		ldr	r4, [r3, #8]
 922 0018 14F0800F 		tst	r4, #128
 923 001c 01D0     		beq	.L81
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 924              		.loc 1 1440 0 is_stmt 0 discriminator 1
 925 001e 2129     		cmp	r1, #33
 926 0020 0DD0     		beq	.L88
 927              	.LVL74:
 928              	.L81:
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 929              		.loc 1 1446 0 is_stmt 1
 930 0022 0368     		ldr	r3, [r0]
 931 0024 9968     		ldr	r1, [r3, #8]
 932 0026 11F0400F 		tst	r1, #64
 933 002a 01D0     		beq	.L82
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
ARM GAS  /tmp/cc7iiXFd.s 			page 80


 934              		.loc 1 1446 0 is_stmt 0 discriminator 1
 935 002c 222A     		cmp	r2, #34
 936 002e 0BD0     		beq	.L89
 937              	.LVL75:
 938              	.L82:
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 939              		.loc 1 1457 0 is_stmt 1
 940 0030 0023     		movs	r3, #0
 941 0032 80F87030 		strb	r3, [r0, #112]
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 942              		.loc 1 1459 0
 943 0036 1846     		mov	r0, r3
 944              	.LVL76:
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 945              		.loc 1 1460 0
 946 0038 5DF8044B 		ldr	r4, [sp], #4
 947              	.LCFI5:
 948              		.cfi_remember_state
 949              		.cfi_restore 4
 950              		.cfi_def_cfa_offset 0
 951 003c 7047     		bx	lr
 952              	.LVL77:
 953              	.L88:
 954              	.LCFI6:
 955              		.cfi_restore_state
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 956              		.loc 1 1444 0
 957 003e 9968     		ldr	r1, [r3, #8]
 958              	.LVL78:
 959 0040 21F08001 		bic	r1, r1, #128
 960 0044 9960     		str	r1, [r3, #8]
 961 0046 ECE7     		b	.L81
 962              	.L89:
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 963              		.loc 1 1450 0
 964 0048 1A68     		ldr	r2, [r3]
 965              	.LVL79:
 966 004a 22F48072 		bic	r2, r2, #256
 967 004e 1A60     		str	r2, [r3]
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 968              		.loc 1 1451 0
 969 0050 0268     		ldr	r2, [r0]
 970 0052 9368     		ldr	r3, [r2, #8]
 971 0054 23F00103 		bic	r3, r3, #1
 972 0058 9360     		str	r3, [r2, #8]
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 973              		.loc 1 1454 0
 974 005a 0268     		ldr	r2, [r0]
 975 005c 9368     		ldr	r3, [r2, #8]
 976 005e 23F04003 		bic	r3, r3, #64
 977 0062 9360     		str	r3, [r2, #8]
 978 0064 E4E7     		b	.L82
 979              	.LVL80:
 980              	.L83:
 981              	.LCFI7:
 982              		.cfi_def_cfa_offset 0
 983              		.cfi_restore 4
ARM GAS  /tmp/cc7iiXFd.s 			page 81


1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 984              		.loc 1 1438 0
 985 0066 0220     		movs	r0, #2
 986              	.LVL81:
 987 0068 7047     		bx	lr
 988              		.cfi_endproc
 989              	.LFE143:
 991              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 992              		.align	1
 993              		.global	HAL_UART_DMAResume
 994              		.syntax unified
 995              		.thumb
 996              		.thumb_func
 997              		.fpu fpv4-sp-d16
 999              	HAL_UART_DMAResume:
 1000              	.LFB144:
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 1001              		.loc 1 1468 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              		@ link register save eliminated.
 1006              	.LVL82:
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1007              		.loc 1 1469 0
 1008 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 1009 0004 012B     		cmp	r3, #1
 1010 0006 26D0     		beq	.L94
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1011              		.loc 1 1469 0 is_stmt 0 discriminator 2
 1012 0008 0123     		movs	r3, #1
 1013 000a 80F87030 		strb	r3, [r0, #112]
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1014              		.loc 1 1471 0 is_stmt 1 discriminator 2
 1015 000e 436F     		ldr	r3, [r0, #116]
 1016 0010 212B     		cmp	r3, #33
 1017 0012 07D0     		beq	.L95
 1018              	.L92:
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1019              		.loc 1 1476 0
 1020 0014 836F     		ldr	r3, [r0, #120]
 1021 0016 222B     		cmp	r3, #34
 1022 0018 0AD0     		beq	.L96
 1023              	.L93:
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1024              		.loc 1 1489 0
 1025 001a 0023     		movs	r3, #0
 1026 001c 80F87030 		strb	r3, [r0, #112]
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1027              		.loc 1 1491 0
 1028 0020 1846     		mov	r0, r3
 1029              	.LVL83:
 1030 0022 7047     		bx	lr
 1031              	.LVL84:
 1032              	.L95:
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1033              		.loc 1 1474 0
ARM GAS  /tmp/cc7iiXFd.s 			page 82


 1034 0024 0268     		ldr	r2, [r0]
 1035 0026 9368     		ldr	r3, [r2, #8]
 1036 0028 43F08003 		orr	r3, r3, #128
 1037 002c 9360     		str	r3, [r2, #8]
 1038 002e F1E7     		b	.L92
 1039              	.L96:
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1040              		.loc 1 1479 0
 1041 0030 0368     		ldr	r3, [r0]
 1042 0032 0822     		movs	r2, #8
 1043 0034 1A62     		str	r2, [r3, #32]
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1044              		.loc 1 1482 0
 1045 0036 0268     		ldr	r2, [r0]
 1046 0038 1368     		ldr	r3, [r2]
 1047 003a 43F48073 		orr	r3, r3, #256
 1048 003e 1360     		str	r3, [r2]
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1049              		.loc 1 1483 0
 1050 0040 0268     		ldr	r2, [r0]
 1051 0042 9368     		ldr	r3, [r2, #8]
 1052 0044 43F00103 		orr	r3, r3, #1
 1053 0048 9360     		str	r3, [r2, #8]
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1054              		.loc 1 1486 0
 1055 004a 0268     		ldr	r2, [r0]
 1056 004c 9368     		ldr	r3, [r2, #8]
 1057 004e 43F04003 		orr	r3, r3, #64
 1058 0052 9360     		str	r3, [r2, #8]
 1059 0054 E1E7     		b	.L93
 1060              	.L94:
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1061              		.loc 1 1469 0
 1062 0056 0220     		movs	r0, #2
 1063              	.LVL85:
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1064              		.loc 1 1492 0
 1065 0058 7047     		bx	lr
 1066              		.cfi_endproc
 1067              	.LFE144:
 1069              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1070              		.align	1
 1071              		.global	HAL_UART_DMAStop
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1075              		.fpu fpv4-sp-d16
 1077              	HAL_UART_DMAStop:
 1078              	.LFB145:
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1079              		.loc 1 1500 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              	.LVL86:
 1084 0000 38B5     		push	{r3, r4, r5, lr}
 1085              	.LCFI8:
ARM GAS  /tmp/cc7iiXFd.s 			page 83


 1086              		.cfi_def_cfa_offset 16
 1087              		.cfi_offset 3, -16
 1088              		.cfi_offset 4, -12
 1089              		.cfi_offset 5, -8
 1090              		.cfi_offset 14, -4
 1091 0002 0446     		mov	r4, r0
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1092              		.loc 1 1508 0
 1093 0004 416F     		ldr	r1, [r0, #116]
 1094              	.LVL87:
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1095              		.loc 1 1509 0
 1096 0006 856F     		ldr	r5, [r0, #120]
 1097              	.LVL88:
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1098              		.loc 1 1512 0
 1099 0008 0368     		ldr	r3, [r0]
 1100 000a 9A68     		ldr	r2, [r3, #8]
 1101 000c 12F0800F 		tst	r2, #128
 1102 0010 01D0     		beq	.L98
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1103              		.loc 1 1512 0 is_stmt 0 discriminator 1
 1104 0012 2129     		cmp	r1, #33
 1105 0014 08D0     		beq	.L105
 1106              	.LVL89:
 1107              	.L98:
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1108              		.loc 1 1536 0 is_stmt 1
 1109 0016 2368     		ldr	r3, [r4]
 1110 0018 9A68     		ldr	r2, [r3, #8]
 1111 001a 12F0400F 		tst	r2, #64
 1112 001e 30D0     		beq	.L102
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1113              		.loc 1 1536 0 is_stmt 0 discriminator 1
 1114 0020 222D     		cmp	r5, #34
 1115 0022 17D0     		beq	.L106
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1116              		.loc 1 1559 0 is_stmt 1
 1117 0024 0020     		movs	r0, #0
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1118              		.loc 1 1560 0
 1119 0026 38BD     		pop	{r3, r4, r5, pc}
 1120              	.LVL90:
 1121              	.L105:
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1122              		.loc 1 1515 0
 1123 0028 9A68     		ldr	r2, [r3, #8]
 1124 002a 22F08002 		bic	r2, r2, #128
 1125 002e 9A60     		str	r2, [r3, #8]
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1126              		.loc 1 1518 0
 1127 0030 806E     		ldr	r0, [r0, #104]
 1128              	.LVL91:
 1129 0032 10B1     		cbz	r0, .L99
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1130              		.loc 1 1520 0
 1131 0034 FFF7FEFF 		bl	HAL_DMA_Abort
ARM GAS  /tmp/cc7iiXFd.s 			page 84


 1132              	.LVL92:
 1133 0038 18B9     		cbnz	r0, .L107
 1134              	.L99:
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1135              		.loc 1 1532 0
 1136 003a 2046     		mov	r0, r4
 1137 003c FFF7FEFF 		bl	UART_EndTxTransfer
 1138              	.LVL93:
 1139 0040 E9E7     		b	.L98
 1140              	.L107:
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1141              		.loc 1 1522 0
 1142 0042 A06E     		ldr	r0, [r4, #104]
 1143 0044 FFF7FEFF 		bl	HAL_DMA_GetError
 1144              	.LVL94:
 1145 0048 2028     		cmp	r0, #32
 1146 004a F6D1     		bne	.L99
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1147              		.loc 1 1525 0
 1148 004c 1023     		movs	r3, #16
 1149 004e E367     		str	r3, [r4, #124]
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 1150              		.loc 1 1527 0
 1151 0050 0320     		movs	r0, #3
 1152 0052 38BD     		pop	{r3, r4, r5, pc}
 1153              	.LVL95:
 1154              	.L106:
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1155              		.loc 1 1539 0
 1156 0054 9A68     		ldr	r2, [r3, #8]
 1157 0056 22F04002 		bic	r2, r2, #64
 1158 005a 9A60     		str	r2, [r3, #8]
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1159              		.loc 1 1542 0
 1160 005c E06E     		ldr	r0, [r4, #108]
 1161 005e 10B1     		cbz	r0, .L101
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1162              		.loc 1 1544 0
 1163 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 1164              	.LVL96:
 1165 0064 20B9     		cbnz	r0, .L108
 1166              	.L101:
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1167              		.loc 1 1556 0
 1168 0066 2046     		mov	r0, r4
 1169 0068 FFF7FEFF 		bl	UART_EndRxTransfer
 1170              	.LVL97:
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1171              		.loc 1 1559 0
 1172 006c 0020     		movs	r0, #0
 1173 006e 38BD     		pop	{r3, r4, r5, pc}
 1174              	.LVL98:
 1175              	.L108:
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1176              		.loc 1 1546 0
 1177 0070 E06E     		ldr	r0, [r4, #108]
 1178 0072 FFF7FEFF 		bl	HAL_DMA_GetError
ARM GAS  /tmp/cc7iiXFd.s 			page 85


 1179              	.LVL99:
 1180 0076 2028     		cmp	r0, #32
 1181 0078 F5D1     		bne	.L101
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1182              		.loc 1 1549 0
 1183 007a 1023     		movs	r3, #16
 1184 007c E367     		str	r3, [r4, #124]
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 1185              		.loc 1 1551 0
 1186 007e 0320     		movs	r0, #3
 1187 0080 38BD     		pop	{r3, r4, r5, pc}
 1188              	.LVL100:
 1189              	.L102:
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1190              		.loc 1 1559 0
 1191 0082 0020     		movs	r0, #0
 1192 0084 38BD     		pop	{r3, r4, r5, pc}
 1193              		.cfi_endproc
 1194              	.LFE145:
 1196              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1197              		.align	1
 1198              		.global	HAL_UART_Abort
 1199              		.syntax unified
 1200              		.thumb
 1201              		.thumb_func
 1202              		.fpu fpv4-sp-d16
 1204              	HAL_UART_Abort:
 1205              	.LFB146:
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1206              		.loc 1 1575 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210              	.LVL101:
 1211 0000 10B5     		push	{r4, lr}
 1212              	.LCFI9:
 1213              		.cfi_def_cfa_offset 8
 1214              		.cfi_offset 4, -8
 1215              		.cfi_offset 14, -4
 1216 0002 0446     		mov	r4, r0
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1217              		.loc 1 1577 0
 1218 0004 0268     		ldr	r2, [r0]
 1219 0006 1368     		ldr	r3, [r2]
 1220 0008 23F4F073 		bic	r3, r3, #480
 1221 000c 1360     		str	r3, [r2]
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1222              		.loc 1 1578 0
 1223 000e 0268     		ldr	r2, [r0]
 1224 0010 9368     		ldr	r3, [r2, #8]
 1225 0012 23F00103 		bic	r3, r3, #1
 1226 0016 9360     		str	r3, [r2, #8]
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1227              		.loc 1 1581 0
 1228 0018 0368     		ldr	r3, [r0]
 1229 001a 9A68     		ldr	r2, [r3, #8]
 1230 001c 12F0800F 		tst	r2, #128
ARM GAS  /tmp/cc7iiXFd.s 			page 86


 1231 0020 0BD0     		beq	.L110
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1232              		.loc 1 1583 0
 1233 0022 9A68     		ldr	r2, [r3, #8]
 1234 0024 22F08002 		bic	r2, r2, #128
 1235 0028 9A60     		str	r2, [r3, #8]
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1236              		.loc 1 1586 0
 1237 002a 836E     		ldr	r3, [r0, #104]
 1238 002c 2BB1     		cbz	r3, .L110
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1239              		.loc 1 1590 0
 1240 002e 0022     		movs	r2, #0
 1241 0030 5A63     		str	r2, [r3, #52]
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1242              		.loc 1 1592 0
 1243 0032 806E     		ldr	r0, [r0, #104]
 1244              	.LVL102:
 1245 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1246              	.LVL103:
 1247 0038 10BB     		cbnz	r0, .L114
 1248              	.L110:
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1249              		.loc 1 1606 0
 1250 003a 2368     		ldr	r3, [r4]
 1251 003c 9A68     		ldr	r2, [r3, #8]
 1252 003e 12F0400F 		tst	r2, #64
 1253 0042 0BD0     		beq	.L112
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1254              		.loc 1 1608 0
 1255 0044 9A68     		ldr	r2, [r3, #8]
 1256 0046 22F04002 		bic	r2, r2, #64
 1257 004a 9A60     		str	r2, [r3, #8]
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1258              		.loc 1 1611 0
 1259 004c E36E     		ldr	r3, [r4, #108]
 1260 004e 2BB1     		cbz	r3, .L112
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1261              		.loc 1 1615 0
 1262 0050 0022     		movs	r2, #0
 1263 0052 5A63     		str	r2, [r3, #52]
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1264              		.loc 1 1617 0
 1265 0054 E06E     		ldr	r0, [r4, #108]
 1266 0056 FFF7FEFF 		bl	HAL_DMA_Abort
 1267              	.LVL104:
 1268 005a D0B9     		cbnz	r0, .L115
 1269              	.L112:
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1270              		.loc 1 1631 0
 1271 005c 0020     		movs	r0, #0
 1272 005e A4F85200 		strh	r0, [r4, #82]	@ movhi
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1273              		.loc 1 1632 0
 1274 0062 A4F85A00 		strh	r0, [r4, #90]	@ movhi
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1275              		.loc 1 1635 0
ARM GAS  /tmp/cc7iiXFd.s 			page 87


 1276 0066 2368     		ldr	r3, [r4]
 1277 0068 0F22     		movs	r2, #15
 1278 006a 1A62     		str	r2, [r3, #32]
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1279              		.loc 1 1639 0
 1280 006c 2268     		ldr	r2, [r4]
 1281 006e 9369     		ldr	r3, [r2, #24]
 1282 0070 43F00803 		orr	r3, r3, #8
 1283 0074 9361     		str	r3, [r2, #24]
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1284              		.loc 1 1642 0
 1285 0076 2023     		movs	r3, #32
 1286 0078 6367     		str	r3, [r4, #116]
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1287              		.loc 1 1643 0
 1288 007a A367     		str	r3, [r4, #120]
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1289              		.loc 1 1645 0
 1290 007c E067     		str	r0, [r4, #124]
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1291              		.loc 1 1648 0
 1292 007e 10BD     		pop	{r4, pc}
 1293              	.LVL105:
 1294              	.L114:
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1295              		.loc 1 1594 0
 1296 0080 A06E     		ldr	r0, [r4, #104]
 1297 0082 FFF7FEFF 		bl	HAL_DMA_GetError
 1298              	.LVL106:
 1299 0086 2028     		cmp	r0, #32
 1300 0088 D7D1     		bne	.L110
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1301              		.loc 1 1597 0
 1302 008a 1023     		movs	r3, #16
 1303 008c E367     		str	r3, [r4, #124]
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 1304              		.loc 1 1599 0
 1305 008e 0320     		movs	r0, #3
 1306 0090 10BD     		pop	{r4, pc}
 1307              	.LVL107:
 1308              	.L115:
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1309              		.loc 1 1619 0
 1310 0092 E06E     		ldr	r0, [r4, #108]
 1311 0094 FFF7FEFF 		bl	HAL_DMA_GetError
 1312              	.LVL108:
 1313 0098 2028     		cmp	r0, #32
 1314 009a DFD1     		bne	.L112
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1315              		.loc 1 1622 0
 1316 009c 1023     		movs	r3, #16
 1317 009e E367     		str	r3, [r4, #124]
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 1318              		.loc 1 1624 0
 1319 00a0 0320     		movs	r0, #3
 1320 00a2 10BD     		pop	{r4, pc}
 1321              		.cfi_endproc
ARM GAS  /tmp/cc7iiXFd.s 			page 88


 1322              	.LFE146:
 1324              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1325              		.align	1
 1326              		.global	HAL_UART_AbortTransmit
 1327              		.syntax unified
 1328              		.thumb
 1329              		.thumb_func
 1330              		.fpu fpv4-sp-d16
 1332              	HAL_UART_AbortTransmit:
 1333              	.LFB147:
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1334              		.loc 1 1663 0
 1335              		.cfi_startproc
 1336              		@ args = 0, pretend = 0, frame = 0
 1337              		@ frame_needed = 0, uses_anonymous_args = 0
 1338              	.LVL109:
 1339 0000 10B5     		push	{r4, lr}
 1340              	.LCFI10:
 1341              		.cfi_def_cfa_offset 8
 1342              		.cfi_offset 4, -8
 1343              		.cfi_offset 14, -4
 1344 0002 0446     		mov	r4, r0
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1345              		.loc 1 1665 0
 1346 0004 0268     		ldr	r2, [r0]
 1347 0006 1368     		ldr	r3, [r2]
 1348 0008 23F0C003 		bic	r3, r3, #192
 1349 000c 1360     		str	r3, [r2]
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1350              		.loc 1 1668 0
 1351 000e 0368     		ldr	r3, [r0]
 1352 0010 9A68     		ldr	r2, [r3, #8]
 1353 0012 12F0800F 		tst	r2, #128
 1354 0016 0BD0     		beq	.L117
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1355              		.loc 1 1670 0
 1356 0018 9A68     		ldr	r2, [r3, #8]
 1357 001a 22F08002 		bic	r2, r2, #128
 1358 001e 9A60     		str	r2, [r3, #8]
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1359              		.loc 1 1673 0
 1360 0020 836E     		ldr	r3, [r0, #104]
 1361 0022 2BB1     		cbz	r3, .L117
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1362              		.loc 1 1677 0
 1363 0024 0022     		movs	r2, #0
 1364 0026 5A63     		str	r2, [r3, #52]
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1365              		.loc 1 1679 0
 1366 0028 806E     		ldr	r0, [r0, #104]
 1367              	.LVL110:
 1368 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1369              	.LVL111:
 1370 002e 28B9     		cbnz	r0, .L120
 1371              	.L117:
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1372              		.loc 1 1693 0
ARM GAS  /tmp/cc7iiXFd.s 			page 89


 1373 0030 0020     		movs	r0, #0
 1374 0032 A4F85200 		strh	r0, [r4, #82]	@ movhi
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1375              		.loc 1 1697 0
 1376 0036 2023     		movs	r3, #32
 1377 0038 6367     		str	r3, [r4, #116]
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1378              		.loc 1 1700 0
 1379 003a 10BD     		pop	{r4, pc}
 1380              	.LVL112:
 1381              	.L120:
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1382              		.loc 1 1681 0
 1383 003c A06E     		ldr	r0, [r4, #104]
 1384 003e FFF7FEFF 		bl	HAL_DMA_GetError
 1385              	.LVL113:
 1386 0042 2028     		cmp	r0, #32
 1387 0044 F4D1     		bne	.L117
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1388              		.loc 1 1684 0
 1389 0046 1023     		movs	r3, #16
 1390 0048 E367     		str	r3, [r4, #124]
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 1391              		.loc 1 1686 0
 1392 004a 0320     		movs	r0, #3
 1393 004c 10BD     		pop	{r4, pc}
 1394              		.cfi_endproc
 1395              	.LFE147:
 1397              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1398              		.align	1
 1399              		.global	HAL_UART_AbortReceive
 1400              		.syntax unified
 1401              		.thumb
 1402              		.thumb_func
 1403              		.fpu fpv4-sp-d16
 1405              	HAL_UART_AbortReceive:
 1406              	.LFB148:
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1407              		.loc 1 1715 0
 1408              		.cfi_startproc
 1409              		@ args = 0, pretend = 0, frame = 0
 1410              		@ frame_needed = 0, uses_anonymous_args = 0
 1411              	.LVL114:
 1412 0000 10B5     		push	{r4, lr}
 1413              	.LCFI11:
 1414              		.cfi_def_cfa_offset 8
 1415              		.cfi_offset 4, -8
 1416              		.cfi_offset 14, -4
 1417 0002 0446     		mov	r4, r0
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1418              		.loc 1 1717 0
 1419 0004 0268     		ldr	r2, [r0]
 1420 0006 1368     		ldr	r3, [r2]
 1421 0008 23F49073 		bic	r3, r3, #288
 1422 000c 1360     		str	r3, [r2]
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1423              		.loc 1 1718 0
ARM GAS  /tmp/cc7iiXFd.s 			page 90


 1424 000e 0268     		ldr	r2, [r0]
 1425 0010 9368     		ldr	r3, [r2, #8]
 1426 0012 23F00103 		bic	r3, r3, #1
 1427 0016 9360     		str	r3, [r2, #8]
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1428              		.loc 1 1721 0
 1429 0018 0368     		ldr	r3, [r0]
 1430 001a 9A68     		ldr	r2, [r3, #8]
 1431 001c 12F0400F 		tst	r2, #64
 1432 0020 0BD0     		beq	.L122
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1433              		.loc 1 1723 0
 1434 0022 9A68     		ldr	r2, [r3, #8]
 1435 0024 22F04002 		bic	r2, r2, #64
 1436 0028 9A60     		str	r2, [r3, #8]
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1437              		.loc 1 1726 0
 1438 002a C36E     		ldr	r3, [r0, #108]
 1439 002c 2BB1     		cbz	r3, .L122
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1440              		.loc 1 1730 0
 1441 002e 0022     		movs	r2, #0
 1442 0030 5A63     		str	r2, [r3, #52]
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1443              		.loc 1 1732 0
 1444 0032 C06E     		ldr	r0, [r0, #108]
 1445              	.LVL115:
 1446 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1447              	.LVL116:
 1448 0038 68B9     		cbnz	r0, .L125
 1449              	.L122:
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1450              		.loc 1 1746 0
 1451 003a 0020     		movs	r0, #0
 1452 003c A4F85A00 		strh	r0, [r4, #90]	@ movhi
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1453              		.loc 1 1749 0
 1454 0040 2368     		ldr	r3, [r4]
 1455 0042 0F22     		movs	r2, #15
 1456 0044 1A62     		str	r2, [r3, #32]
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1457              		.loc 1 1752 0
 1458 0046 2268     		ldr	r2, [r4]
 1459 0048 9369     		ldr	r3, [r2, #24]
 1460 004a 43F00803 		orr	r3, r3, #8
 1461 004e 9361     		str	r3, [r2, #24]
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1462              		.loc 1 1755 0
 1463 0050 2023     		movs	r3, #32
 1464 0052 A367     		str	r3, [r4, #120]
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1465              		.loc 1 1758 0
 1466 0054 10BD     		pop	{r4, pc}
 1467              	.LVL117:
 1468              	.L125:
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1469              		.loc 1 1734 0
ARM GAS  /tmp/cc7iiXFd.s 			page 91


 1470 0056 E06E     		ldr	r0, [r4, #108]
 1471 0058 FFF7FEFF 		bl	HAL_DMA_GetError
 1472              	.LVL118:
 1473 005c 2028     		cmp	r0, #32
 1474 005e ECD1     		bne	.L122
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1475              		.loc 1 1737 0
 1476 0060 1023     		movs	r3, #16
 1477 0062 E367     		str	r3, [r4, #124]
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 1478              		.loc 1 1739 0
 1479 0064 0320     		movs	r0, #3
 1480 0066 10BD     		pop	{r4, pc}
 1481              		.cfi_endproc
 1482              	.LFE148:
 1484              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1485              		.align	1
 1486              		.weak	HAL_UART_TxCpltCallback
 1487              		.syntax unified
 1488              		.thumb
 1489              		.thumb_func
 1490              		.fpu fpv4-sp-d16
 1492              	HAL_UART_TxCpltCallback:
 1493              	.LFB153:
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1494              		.loc 1 2286 0
 1495              		.cfi_startproc
 1496              		@ args = 0, pretend = 0, frame = 0
 1497              		@ frame_needed = 0, uses_anonymous_args = 0
 1498              		@ link register save eliminated.
 1499              	.LVL119:
 1500 0000 7047     		bx	lr
 1501              		.cfi_endproc
 1502              	.LFE153:
 1504              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1505              		.align	1
 1506              		.syntax unified
 1507              		.thumb
 1508              		.thumb_func
 1509              		.fpu fpv4-sp-d16
 1511              	UART_DMATransmitCplt:
 1512              	.LFB178:
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1513              		.loc 1 3066 0
 1514              		.cfi_startproc
 1515              		@ args = 0, pretend = 0, frame = 0
 1516              		@ frame_needed = 0, uses_anonymous_args = 0
 1517              	.LVL120:
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1518              		.loc 1 3066 0
 1519 0000 08B5     		push	{r3, lr}
 1520              	.LCFI12:
 1521              		.cfi_def_cfa_offset 8
 1522              		.cfi_offset 3, -8
 1523              		.cfi_offset 14, -4
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1524              		.loc 1 3067 0
ARM GAS  /tmp/cc7iiXFd.s 			page 92


 1525 0002 436A     		ldr	r3, [r0, #36]
 1526              	.LVL121:
3070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1527              		.loc 1 3070 0
 1528 0004 8269     		ldr	r2, [r0, #24]
 1529 0006 202A     		cmp	r2, #32
 1530 0008 0DD0     		beq	.L128
3072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1531              		.loc 1 3072 0
 1532 000a 0022     		movs	r2, #0
 1533 000c A3F85220 		strh	r2, [r3, #82]	@ movhi
3076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1534              		.loc 1 3076 0
 1535 0010 1968     		ldr	r1, [r3]
 1536 0012 8A68     		ldr	r2, [r1, #8]
 1537 0014 22F08002 		bic	r2, r2, #128
 1538 0018 8A60     		str	r2, [r1, #8]
3079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1539              		.loc 1 3079 0
 1540 001a 1A68     		ldr	r2, [r3]
 1541 001c 1368     		ldr	r3, [r2]
 1542              	.LVL122:
 1543 001e 43F04003 		orr	r3, r3, #64
 1544 0022 1360     		str	r3, [r2]
 1545 0024 08BD     		pop	{r3, pc}
 1546              	.LVL123:
 1547              	.L128:
3089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1548              		.loc 1 3089 0
 1549 0026 1846     		mov	r0, r3
 1550              	.LVL124:
 1551 0028 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1552              	.LVL125:
 1553 002c 08BD     		pop	{r3, pc}
 1554              		.cfi_endproc
 1555              	.LFE178:
 1557              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1558              		.align	1
 1559              		.syntax unified
 1560              		.thumb
 1561              		.thumb_func
 1562              		.fpu fpv4-sp-d16
 1564              	UART_EndTransmit_IT:
 1565              	.LFB190:
3446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1566              		.loc 1 3455 0
 1567              		.cfi_startproc
 1568              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc7iiXFd.s 			page 93


 1569              		@ frame_needed = 0, uses_anonymous_args = 0
 1570              	.LVL126:
 1571 0000 08B5     		push	{r3, lr}
 1572              	.LCFI13:
 1573              		.cfi_def_cfa_offset 8
 1574              		.cfi_offset 3, -8
 1575              		.cfi_offset 14, -4
3456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1576              		.loc 1 3457 0
 1577 0002 0168     		ldr	r1, [r0]
 1578 0004 0A68     		ldr	r2, [r1]
 1579 0006 22F04002 		bic	r2, r2, #64
 1580 000a 0A60     		str	r2, [r1]
3458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1581              		.loc 1 3460 0
 1582 000c 2022     		movs	r2, #32
 1583 000e 4267     		str	r2, [r0, #116]
3461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxISR = NULL;
 1584              		.loc 1 3463 0
 1585 0010 0022     		movs	r2, #0
 1586 0012 4266     		str	r2, [r0, #100]
3464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1587              		.loc 1 3470 0
 1588 0014 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1589              	.LVL127:
 1590 0018 08BD     		pop	{r3, pc}
 1591              		.cfi_endproc
 1592              	.LFE190:
 1594              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1595              		.align	1
 1596              		.weak	HAL_UART_TxHalfCpltCallback
 1597              		.syntax unified
 1598              		.thumb
 1599              		.thumb_func
 1600              		.fpu fpv4-sp-d16
 1602              	HAL_UART_TxHalfCpltCallback:
 1603              	.LFB154:
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1604              		.loc 1 2301 0
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 0
 1607              		@ frame_needed = 0, uses_anonymous_args = 0
 1608              		@ link register save eliminated.
 1609              	.LVL128:
 1610 0000 7047     		bx	lr
 1611              		.cfi_endproc
ARM GAS  /tmp/cc7iiXFd.s 			page 94


 1612              	.LFE154:
 1614              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1615              		.align	1
 1616              		.syntax unified
 1617              		.thumb
 1618              		.thumb_func
 1619              		.fpu fpv4-sp-d16
 1621              	UART_DMATxHalfCplt:
 1622              	.LFB179:
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1623              		.loc 1 3100 0
 1624              		.cfi_startproc
 1625              		@ args = 0, pretend = 0, frame = 0
 1626              		@ frame_needed = 0, uses_anonymous_args = 0
 1627              	.LVL129:
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1628              		.loc 1 3100 0
 1629 0000 08B5     		push	{r3, lr}
 1630              	.LCFI14:
 1631              		.cfi_def_cfa_offset 8
 1632              		.cfi_offset 3, -8
 1633              		.cfi_offset 14, -4
 1634              	.LVL130:
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1635              		.loc 1 3108 0
 1636 0002 406A     		ldr	r0, [r0, #36]
 1637              	.LVL131:
 1638 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1639              	.LVL132:
 1640 0008 08BD     		pop	{r3, pc}
 1641              		.cfi_endproc
 1642              	.LFE179:
 1644              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1645              		.align	1
 1646              		.weak	HAL_UART_RxCpltCallback
 1647              		.syntax unified
 1648              		.thumb
 1649              		.thumb_func
 1650              		.fpu fpv4-sp-d16
 1652              	HAL_UART_RxCpltCallback:
 1653              	.LFB155:
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1654              		.loc 1 2316 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 0
 1657              		@ frame_needed = 0, uses_anonymous_args = 0
 1658              		@ link register save eliminated.
 1659              	.LVL133:
 1660 0000 7047     		bx	lr
 1661              		.cfi_endproc
 1662              	.LFE155:
 1664              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1665              		.align	1
 1666              		.syntax unified
 1667              		.thumb
 1668              		.thumb_func
 1669              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cc7iiXFd.s 			page 95


 1671              	UART_RxISR_8BIT:
 1672              	.LFB191:
3471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1673              		.loc 1 3480 0
 1674              		.cfi_startproc
 1675              		@ args = 0, pretend = 0, frame = 0
 1676              		@ frame_needed = 0, uses_anonymous_args = 0
 1677              	.LVL134:
 1678              		.loc 1 3480 0
 1679 0000 08B5     		push	{r3, lr}
 1680              	.LCFI15:
 1681              		.cfi_def_cfa_offset 8
 1682              		.cfi_offset 3, -8
 1683              		.cfi_offset 14, -4
3481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1684              		.loc 1 3481 0
 1685 0002 B0F85C30 		ldrh	r3, [r0, #92]
 1686              	.LVL135:
3482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1687              		.loc 1 3485 0
 1688 0006 826F     		ldr	r2, [r0, #120]
 1689 0008 222A     		cmp	r2, #34
 1690 000a 05D0     		beq	.L141
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr++;
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount--;
3491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
3496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear RxISR function pointer */
3504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = NULL;
3505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call registered Rx complete callback*/
ARM GAS  /tmp/cc7iiXFd.s 			page 96


3508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
3516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1691              		.loc 1 3518 0
 1692 000c 0268     		ldr	r2, [r0]
 1693 000e 9369     		ldr	r3, [r2, #24]
 1694              	.LVL136:
 1695 0010 43F00803 		orr	r3, r3, #8
 1696 0014 9361     		str	r3, [r2, #24]
 1697              	.LVL137:
 1698              	.L137:
 1699 0016 08BD     		pop	{r3, pc}
 1700              	.LVL138:
 1701              	.L141:
3487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 1702              		.loc 1 3487 0
 1703 0018 0268     		ldr	r2, [r0]
 1704 001a 918C     		ldrh	r1, [r2, #36]
 1705              	.LVL139:
3488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr++;
 1706              		.loc 1 3488 0
 1707 001c 426D     		ldr	r2, [r0, #84]
 1708 001e DBB2     		uxtb	r3, r3
 1709              	.LVL140:
 1710 0020 0B40     		ands	r3, r3, r1
 1711 0022 1370     		strb	r3, [r2]
 1712              	.LVL141:
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount--;
 1713              		.loc 1 3489 0
 1714 0024 436D     		ldr	r3, [r0, #84]
 1715 0026 0133     		adds	r3, r3, #1
 1716 0028 4365     		str	r3, [r0, #84]
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1717              		.loc 1 3490 0
 1718 002a B0F85A30 		ldrh	r3, [r0, #90]
 1719 002e 9BB2     		uxth	r3, r3
 1720 0030 013B     		subs	r3, r3, #1
 1721 0032 9BB2     		uxth	r3, r3
 1722 0034 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1723              		.loc 1 3492 0
 1724 0038 B0F85A30 		ldrh	r3, [r0, #90]
 1725 003c 9BB2     		uxth	r3, r3
 1726 003e 002B     		cmp	r3, #0
 1727 0040 E9D1     		bne	.L137
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1728              		.loc 1 3495 0
 1729 0042 0268     		ldr	r2, [r0]
 1730 0044 1368     		ldr	r3, [r2]
ARM GAS  /tmp/cc7iiXFd.s 			page 97


 1731 0046 23F49073 		bic	r3, r3, #288
 1732 004a 1360     		str	r3, [r2]
3498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1733              		.loc 1 3498 0
 1734 004c 0268     		ldr	r2, [r0]
 1735 004e 9368     		ldr	r3, [r2, #8]
 1736 0050 23F00103 		bic	r3, r3, #1
 1737 0054 9360     		str	r3, [r2, #8]
3501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1738              		.loc 1 3501 0
 1739 0056 2023     		movs	r3, #32
 1740 0058 8367     		str	r3, [r0, #120]
3504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1741              		.loc 1 3504 0
 1742 005a 0023     		movs	r3, #0
 1743 005c 0366     		str	r3, [r0, #96]
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1744              		.loc 1 3511 0
 1745 005e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1746              	.LVL142:
 1747 0062 08BD     		pop	{r3, pc}
 1748              		.cfi_endproc
 1749              	.LFE191:
 1751              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 1752              		.align	1
 1753              		.syntax unified
 1754              		.thumb
 1755              		.thumb_func
 1756              		.fpu fpv4-sp-d16
 1758              	UART_RxISR_16BIT:
 1759              	.LFB192:
3519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1760              		.loc 1 3530 0
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 0, uses_anonymous_args = 0
 1764              	.LVL143:
 1765 0000 08B5     		push	{r3, lr}
 1766              	.LCFI16:
 1767              		.cfi_def_cfa_offset 8
 1768              		.cfi_offset 3, -8
 1769              		.cfi_offset 14, -4
3531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *tmp;
3532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1770              		.loc 1 3532 0
 1771 0002 B0F85C20 		ldrh	r2, [r0, #92]
ARM GAS  /tmp/cc7iiXFd.s 			page 98


 1772              	.LVL144:
3533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
3534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1773              		.loc 1 3536 0
 1774 0006 836F     		ldr	r3, [r0, #120]
 1775 0008 222B     		cmp	r3, #34
 1776 000a 05D0     		beq	.L146
3537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
3539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
3540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
3541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount--;
3543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
3545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
3548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
3554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear RxISR function pointer */
3556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = NULL;
3557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
3564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
3568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1777              		.loc 1 3570 0
 1778 000c 0268     		ldr	r2, [r0]
 1779              	.LVL145:
 1780 000e 9369     		ldr	r3, [r2, #24]
 1781 0010 43F00803 		orr	r3, r3, #8
 1782 0014 9361     		str	r3, [r2, #24]
 1783              	.LVL146:
 1784              	.L142:
 1785 0016 08BD     		pop	{r3, pc}
 1786              	.LVL147:
 1787              	.L146:
3538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 1788              		.loc 1 3538 0
 1789 0018 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc7iiXFd.s 			page 99


 1790 001a 998C     		ldrh	r1, [r3, #36]
 1791              	.LVL148:
3539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 1792              		.loc 1 3539 0
 1793 001c 436D     		ldr	r3, [r0, #84]
 1794              	.LVL149:
3540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 1795              		.loc 1 3540 0
 1796 001e 0A40     		ands	r2, r2, r1
 1797              	.LVL150:
 1798 0020 1A80     		strh	r2, [r3]	@ movhi
 1799              	.LVL151:
3541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount--;
 1800              		.loc 1 3541 0
 1801 0022 436D     		ldr	r3, [r0, #84]
 1802              	.LVL152:
 1803 0024 0233     		adds	r3, r3, #2
 1804 0026 4365     		str	r3, [r0, #84]
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1805              		.loc 1 3542 0
 1806 0028 B0F85A30 		ldrh	r3, [r0, #90]
 1807 002c 9BB2     		uxth	r3, r3
 1808 002e 013B     		subs	r3, r3, #1
 1809 0030 9BB2     		uxth	r3, r3
 1810 0032 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1811              		.loc 1 3544 0
 1812 0036 B0F85A30 		ldrh	r3, [r0, #90]
 1813 003a 9BB2     		uxth	r3, r3
 1814 003c 002B     		cmp	r3, #0
 1815 003e EAD1     		bne	.L142
3547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1816              		.loc 1 3547 0
 1817 0040 0268     		ldr	r2, [r0]
 1818 0042 1368     		ldr	r3, [r2]
 1819 0044 23F49073 		bic	r3, r3, #288
 1820 0048 1360     		str	r3, [r2]
3550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1821              		.loc 1 3550 0
 1822 004a 0268     		ldr	r2, [r0]
 1823 004c 9368     		ldr	r3, [r2, #8]
 1824 004e 23F00103 		bic	r3, r3, #1
 1825 0052 9360     		str	r3, [r2, #8]
3553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1826              		.loc 1 3553 0
 1827 0054 2023     		movs	r3, #32
 1828 0056 8367     		str	r3, [r0, #120]
3556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1829              		.loc 1 3556 0
 1830 0058 0023     		movs	r3, #0
 1831 005a 0366     		str	r3, [r0, #96]
3563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1832              		.loc 1 3563 0
 1833 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1834              	.LVL153:
 1835 0060 08BD     		pop	{r3, pc}
 1836              		.cfi_endproc
ARM GAS  /tmp/cc7iiXFd.s 			page 100


 1837              	.LFE192:
 1839              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1840              		.align	1
 1841              		.syntax unified
 1842              		.thumb
 1843              		.thumb_func
 1844              		.fpu fpv4-sp-d16
 1846              	UART_DMAReceiveCplt:
 1847              	.LFB180:
3118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1848              		.loc 1 3118 0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 0
 1851              		@ frame_needed = 0, uses_anonymous_args = 0
 1852              	.LVL154:
 1853 0000 08B5     		push	{r3, lr}
 1854              	.LCFI17:
 1855              		.cfi_def_cfa_offset 8
 1856              		.cfi_offset 3, -8
 1857              		.cfi_offset 14, -4
3119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1858              		.loc 1 3119 0
 1859 0002 436A     		ldr	r3, [r0, #36]
 1860              	.LVL155:
3122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1861              		.loc 1 3122 0
 1862 0004 8269     		ldr	r2, [r0, #24]
 1863 0006 202A     		cmp	r2, #32
 1864 0008 13D0     		beq	.L148
3124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1865              		.loc 1 3124 0
 1866 000a 0022     		movs	r2, #0
 1867 000c A3F85A20 		strh	r2, [r3, #90]	@ movhi
3127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1868              		.loc 1 3127 0
 1869 0010 1968     		ldr	r1, [r3]
 1870 0012 0A68     		ldr	r2, [r1]
 1871 0014 22F48072 		bic	r2, r2, #256
 1872 0018 0A60     		str	r2, [r1]
3128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1873              		.loc 1 3128 0
 1874 001a 1968     		ldr	r1, [r3]
 1875 001c 8A68     		ldr	r2, [r1, #8]
 1876 001e 22F00102 		bic	r2, r2, #1
 1877 0022 8A60     		str	r2, [r1, #8]
3132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1878              		.loc 1 3132 0
 1879 0024 1968     		ldr	r1, [r3]
 1880 0026 8A68     		ldr	r2, [r1, #8]
 1881 0028 22F04002 		bic	r2, r2, #64
 1882 002c 8A60     		str	r2, [r1, #8]
3135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1883              		.loc 1 3135 0
 1884 002e 2022     		movs	r2, #32
 1885 0030 9A67     		str	r2, [r3, #120]
 1886              	.L148:
3143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/cc7iiXFd.s 			page 101


 1887              		.loc 1 3143 0
 1888 0032 1846     		mov	r0, r3
 1889              	.LVL156:
 1890 0034 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1891              	.LVL157:
 1892 0038 08BD     		pop	{r3, pc}
 1893              		.cfi_endproc
 1894              	.LFE180:
 1896              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1897              		.align	1
 1898              		.weak	HAL_UART_RxHalfCpltCallback
 1899              		.syntax unified
 1900              		.thumb
 1901              		.thumb_func
 1902              		.fpu fpv4-sp-d16
 1904              	HAL_UART_RxHalfCpltCallback:
 1905              	.LFB156:
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1906              		.loc 1 2331 0
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 0
 1909              		@ frame_needed = 0, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911              	.LVL158:
 1912 0000 7047     		bx	lr
 1913              		.cfi_endproc
 1914              	.LFE156:
 1916              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1917              		.align	1
 1918              		.syntax unified
 1919              		.thumb
 1920              		.thumb_func
 1921              		.fpu fpv4-sp-d16
 1923              	UART_DMARxHalfCplt:
 1924              	.LFB181:
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1925              		.loc 1 3153 0
 1926              		.cfi_startproc
 1927              		@ args = 0, pretend = 0, frame = 0
 1928              		@ frame_needed = 0, uses_anonymous_args = 0
 1929              	.LVL159:
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1930              		.loc 1 3153 0
 1931 0000 08B5     		push	{r3, lr}
 1932              	.LCFI18:
 1933              		.cfi_def_cfa_offset 8
 1934              		.cfi_offset 3, -8
 1935              		.cfi_offset 14, -4
 1936              	.LVL160:
3161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1937              		.loc 1 3161 0
 1938 0002 406A     		ldr	r0, [r0, #36]
 1939              	.LVL161:
 1940 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 1941              	.LVL162:
 1942 0008 08BD     		pop	{r3, pc}
 1943              		.cfi_endproc
ARM GAS  /tmp/cc7iiXFd.s 			page 102


 1944              	.LFE181:
 1946              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1947              		.align	1
 1948              		.weak	HAL_UART_ErrorCallback
 1949              		.syntax unified
 1950              		.thumb
 1951              		.thumb_func
 1952              		.fpu fpv4-sp-d16
 1954              	HAL_UART_ErrorCallback:
 1955              	.LFB157:
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1956              		.loc 1 2346 0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 0
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960              		@ link register save eliminated.
 1961              	.LVL163:
 1962 0000 7047     		bx	lr
 1963              		.cfi_endproc
 1964              	.LFE157:
 1966              		.section	.text.UART_DMAError,"ax",%progbits
 1967              		.align	1
 1968              		.syntax unified
 1969              		.thumb
 1970              		.thumb_func
 1971              		.fpu fpv4-sp-d16
 1973              	UART_DMAError:
 1974              	.LFB182:
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1975              		.loc 1 3171 0
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 0
 1978              		@ frame_needed = 0, uses_anonymous_args = 0
 1979              	.LVL164:
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1980              		.loc 1 3171 0
 1981 0000 38B5     		push	{r3, r4, r5, lr}
 1982              	.LCFI19:
 1983              		.cfi_def_cfa_offset 16
 1984              		.cfi_offset 3, -16
 1985              		.cfi_offset 4, -12
 1986              		.cfi_offset 5, -8
 1987              		.cfi_offset 14, -4
3172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1988              		.loc 1 3172 0
 1989 0002 446A     		ldr	r4, [r0, #36]
 1990              	.LVL165:
3174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1991              		.loc 1 3174 0
 1992 0004 626F     		ldr	r2, [r4, #116]
 1993              	.LVL166:
3175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1994              		.loc 1 3175 0
 1995 0006 A56F     		ldr	r5, [r4, #120]
 1996              	.LVL167:
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1997              		.loc 1 3178 0
ARM GAS  /tmp/cc7iiXFd.s 			page 103


 1998 0008 2368     		ldr	r3, [r4]
 1999 000a 9B68     		ldr	r3, [r3, #8]
 2000 000c 13F0800F 		tst	r3, #128
 2001 0010 01D0     		beq	.L155
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 2002              		.loc 1 3178 0 is_stmt 0 discriminator 1
 2003 0012 212A     		cmp	r2, #33
 2004 0014 0ED0     		beq	.L158
 2005              	.LVL168:
 2006              	.L155:
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2007              		.loc 1 3186 0 is_stmt 1
 2008 0016 2368     		ldr	r3, [r4]
 2009 0018 9B68     		ldr	r3, [r3, #8]
 2010 001a 13F0400F 		tst	r3, #64
 2011 001e 01D0     		beq	.L156
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 2012              		.loc 1 3186 0 is_stmt 0 discriminator 1
 2013 0020 222D     		cmp	r5, #34
 2014 0022 0ED0     		beq	.L159
 2015              	.L156:
3193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2016              		.loc 1 3193 0 is_stmt 1
 2017 0024 E36F     		ldr	r3, [r4, #124]
 2018 0026 43F01003 		orr	r3, r3, #16
 2019 002a E367     		str	r3, [r4, #124]
3200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2020              		.loc 1 3200 0
 2021 002c 2046     		mov	r0, r4
 2022 002e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2023              	.LVL169:
 2024 0032 38BD     		pop	{r3, r4, r5, pc}
 2025              	.LVL170:
 2026              	.L158:
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2027              		.loc 1 3181 0
 2028 0034 0023     		movs	r3, #0
 2029 0036 A4F85230 		strh	r3, [r4, #82]	@ movhi
3182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2030              		.loc 1 3182 0
 2031 003a 2046     		mov	r0, r4
 2032              	.LVL171:
 2033 003c FFF7FEFF 		bl	UART_EndTxTransfer
 2034              	.LVL172:
 2035 0040 E9E7     		b	.L155
 2036              	.L159:
3189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2037              		.loc 1 3189 0
 2038 0042 0023     		movs	r3, #0
 2039 0044 A4F85A30 		strh	r3, [r4, #90]	@ movhi
3190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2040              		.loc 1 3190 0
 2041 0048 2046     		mov	r0, r4
 2042 004a FFF7FEFF 		bl	UART_EndRxTransfer
 2043              	.LVL173:
 2044 004e E9E7     		b	.L156
 2045              		.cfi_endproc
ARM GAS  /tmp/cc7iiXFd.s 			page 104


 2046              	.LFE182:
 2048              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 2049              		.align	1
 2050              		.global	HAL_UART_IRQHandler
 2051              		.syntax unified
 2052              		.thumb
 2053              		.thumb_func
 2054              		.fpu fpv4-sp-d16
 2056              	HAL_UART_IRQHandler:
 2057              	.LFB152:
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 2058              		.loc 1 2082 0
 2059              		.cfi_startproc
 2060              		@ args = 0, pretend = 0, frame = 0
 2061              		@ frame_needed = 0, uses_anonymous_args = 0
 2062              	.LVL174:
 2063 0000 38B5     		push	{r3, r4, r5, lr}
 2064              	.LCFI20:
 2065              		.cfi_def_cfa_offset 16
 2066              		.cfi_offset 3, -16
 2067              		.cfi_offset 4, -12
 2068              		.cfi_offset 5, -8
 2069              		.cfi_offset 14, -4
 2070 0002 0446     		mov	r4, r0
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 2071              		.loc 1 2083 0
 2072 0004 0168     		ldr	r1, [r0]
 2073 0006 CB69     		ldr	r3, [r1, #28]
 2074              	.LVL175:
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 2075              		.loc 1 2084 0
 2076 0008 0868     		ldr	r0, [r1]
 2077              	.LVL176:
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2078              		.loc 1 2085 0
 2079 000a 8D68     		ldr	r5, [r1, #8]
 2080              	.LVL177:
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == 0U)
 2081              		.loc 1 2091 0
 2082 000c 40F60F02 		movw	r2, #2063
 2083              	.LVL178:
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2084              		.loc 1 2092 0
 2085 0010 1A40     		ands	r2, r3, r2
 2086              	.LVL179:
 2087 0012 0CD1     		bne	.L161
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2088              		.loc 1 2095 0
 2089 0014 13F0200F 		tst	r3, #32
 2090 0018 09D0     		beq	.L161
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2091              		.loc 1 2096 0
 2092 001a 10F0200F 		tst	r0, #32
 2093 001e 06D0     		beq	.L161
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2094              		.loc 1 2098 0
 2095 0020 236E     		ldr	r3, [r4, #96]
ARM GAS  /tmp/cc7iiXFd.s 			page 105


 2096              	.LVL180:
 2097 0022 002B     		cmp	r3, #0
 2098 0024 00F0A180 		beq	.L160
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2099              		.loc 1 2100 0
 2100 0028 2046     		mov	r0, r4
 2101              	.LVL181:
 2102 002a 9847     		blx	r3
 2103              	.LVL182:
 2104 002c 38BD     		pop	{r3, r4, r5, pc}
 2105              	.LVL183:
 2106              	.L161:
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 2107              		.loc 1 2107 0
 2108 002e 002A     		cmp	r2, #0
 2109 0030 7DD0     		beq	.L163
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 2110              		.loc 1 2108 0
 2111 0032 15F00102 		ands	r2, r5, #1
 2112              	.LVL184:
 2113 0036 02D1     		bne	.L164
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2114              		.loc 1 2109 0
 2115 0038 10F4907F 		tst	r0, #288
 2116 003c 77D0     		beq	.L163
 2117              	.L164:
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2118              		.loc 1 2112 0
 2119 003e 13F0010F 		tst	r3, #1
 2120 0042 07D0     		beq	.L165
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2121              		.loc 1 2112 0 is_stmt 0 discriminator 1
 2122 0044 10F4807F 		tst	r0, #256
 2123 0048 04D0     		beq	.L165
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2124              		.loc 1 2114 0 is_stmt 1
 2125 004a 0125     		movs	r5, #1
 2126              	.LVL185:
 2127 004c 0D62     		str	r5, [r1, #32]
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2128              		.loc 1 2116 0
 2129 004e E16F     		ldr	r1, [r4, #124]
 2130 0050 2943     		orrs	r1, r1, r5
 2131 0052 E167     		str	r1, [r4, #124]
 2132              	.L165:
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2133              		.loc 1 2120 0
 2134 0054 13F0020F 		tst	r3, #2
 2135 0058 07D0     		beq	.L166
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2136              		.loc 1 2120 0 is_stmt 0 discriminator 1
 2137 005a 32B1     		cbz	r2, .L166
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2138              		.loc 1 2122 0 is_stmt 1
 2139 005c 2168     		ldr	r1, [r4]
 2140 005e 0225     		movs	r5, #2
 2141 0060 0D62     		str	r5, [r1, #32]
ARM GAS  /tmp/cc7iiXFd.s 			page 106


2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2142              		.loc 1 2124 0
 2143 0062 E16F     		ldr	r1, [r4, #124]
 2144 0064 41F00401 		orr	r1, r1, #4
 2145 0068 E167     		str	r1, [r4, #124]
 2146              	.L166:
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2147              		.loc 1 2128 0
 2148 006a 13F0040F 		tst	r3, #4
 2149 006e 07D0     		beq	.L167
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2150              		.loc 1 2128 0 is_stmt 0 discriminator 1
 2151 0070 32B1     		cbz	r2, .L167
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2152              		.loc 1 2130 0 is_stmt 1
 2153 0072 2168     		ldr	r1, [r4]
 2154 0074 0425     		movs	r5, #4
 2155 0076 0D62     		str	r5, [r1, #32]
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2156              		.loc 1 2132 0
 2157 0078 E16F     		ldr	r1, [r4, #124]
 2158 007a 41F00201 		orr	r1, r1, #2
 2159 007e E167     		str	r1, [r4, #124]
 2160              	.L167:
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 2161              		.loc 1 2136 0
 2162 0080 13F0080F 		tst	r3, #8
 2163 0084 09D0     		beq	.L168
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2164              		.loc 1 2137 0
 2165 0086 10F0200F 		tst	r0, #32
 2166 008a 00D1     		bne	.L169
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2167              		.loc 1 2137 0 is_stmt 0 discriminator 1
 2168 008c 2AB1     		cbz	r2, .L168
 2169              	.L169:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2170              		.loc 1 2140 0 is_stmt 1
 2171 008e 2268     		ldr	r2, [r4]
 2172 0090 0821     		movs	r1, #8
 2173 0092 1162     		str	r1, [r2, #32]
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2174              		.loc 1 2142 0
 2175 0094 E26F     		ldr	r2, [r4, #124]
 2176 0096 0A43     		orrs	r2, r2, r1
 2177 0098 E267     		str	r2, [r4, #124]
 2178              	.L168:
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2179              		.loc 1 2146 0
 2180 009a 13F4006F 		tst	r3, #2048
 2181 009e 0AD0     		beq	.L170
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2182              		.loc 1 2146 0 is_stmt 0 discriminator 1
 2183 00a0 10F0806F 		tst	r0, #67108864
 2184 00a4 07D0     		beq	.L170
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2185              		.loc 1 2148 0 is_stmt 1
ARM GAS  /tmp/cc7iiXFd.s 			page 107


 2186 00a6 2268     		ldr	r2, [r4]
 2187 00a8 4FF40061 		mov	r1, #2048
 2188 00ac 1162     		str	r1, [r2, #32]
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2189              		.loc 1 2150 0
 2190 00ae E26F     		ldr	r2, [r4, #124]
 2191 00b0 42F02002 		orr	r2, r2, #32
 2192 00b4 E267     		str	r2, [r4, #124]
 2193              	.L170:
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2194              		.loc 1 2154 0
 2195 00b6 E26F     		ldr	r2, [r4, #124]
 2196 00b8 002A     		cmp	r2, #0
 2197 00ba 56D0     		beq	.L160
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2198              		.loc 1 2157 0
 2199 00bc 13F0200F 		tst	r3, #32
 2200 00c0 06D0     		beq	.L171
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2201              		.loc 1 2158 0
 2202 00c2 10F0200F 		tst	r0, #32
 2203 00c6 03D0     		beq	.L171
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 2204              		.loc 1 2160 0
 2205 00c8 236E     		ldr	r3, [r4, #96]
 2206              	.LVL186:
 2207 00ca 0BB1     		cbz	r3, .L171
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 2208              		.loc 1 2162 0
 2209 00cc 2046     		mov	r0, r4
 2210              	.LVL187:
 2211 00ce 9847     		blx	r3
 2212              	.LVL188:
 2213              	.L171:
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 2214              		.loc 1 2171 0
 2215 00d0 E26F     		ldr	r2, [r4, #124]
 2216              	.LVL189:
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2217              		.loc 1 2172 0
 2218 00d2 2368     		ldr	r3, [r4]
 2219 00d4 9B68     		ldr	r3, [r3, #8]
 2220 00d6 13F0400F 		tst	r3, #64
 2221 00da 02D1     		bne	.L172
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2222              		.loc 1 2172 0 is_stmt 0 discriminator 1
 2223 00dc 12F0280F 		tst	r2, #40
 2224 00e0 1FD0     		beq	.L173
 2225              	.L172:
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2226              		.loc 1 2178 0 is_stmt 1
 2227 00e2 2046     		mov	r0, r4
 2228 00e4 FFF7FEFF 		bl	UART_EndRxTransfer
 2229              	.LVL190:
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 2230              		.loc 1 2181 0
 2231 00e8 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc7iiXFd.s 			page 108


 2232 00ea 9A68     		ldr	r2, [r3, #8]
 2233 00ec 12F0400F 		tst	r2, #64
 2234 00f0 13D0     		beq	.L174
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2235              		.loc 1 2183 0
 2236 00f2 9A68     		ldr	r2, [r3, #8]
 2237 00f4 22F04002 		bic	r2, r2, #64
 2238 00f8 9A60     		str	r2, [r3, #8]
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
 2239              		.loc 1 2186 0
 2240 00fa E36E     		ldr	r3, [r4, #108]
 2241 00fc 4BB1     		cbz	r3, .L175
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2242              		.loc 1 2190 0
 2243 00fe 1D4A     		ldr	r2, .L181
 2244 0100 5A63     		str	r2, [r3, #52]
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
 2245              		.loc 1 2193 0
 2246 0102 E06E     		ldr	r0, [r4, #108]
 2247 0104 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2248              	.LVL191:
 2249 0108 78B3     		cbz	r0, .L160
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
 2250              		.loc 1 2196 0
 2251 010a E06E     		ldr	r0, [r4, #108]
 2252 010c 436B     		ldr	r3, [r0, #52]
 2253 010e 9847     		blx	r3
 2254              	.LVL192:
 2255 0110 38BD     		pop	{r3, r4, r5, pc}
 2256              	.LVL193:
 2257              	.L175:
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2258              		.loc 1 2207 0
 2259 0112 2046     		mov	r0, r4
 2260 0114 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2261              	.LVL194:
 2262 0118 38BD     		pop	{r3, r4, r5, pc}
 2263              	.LVL195:
 2264              	.L174:
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2265              		.loc 1 2220 0
 2266 011a 2046     		mov	r0, r4
 2267 011c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2268              	.LVL196:
 2269 0120 38BD     		pop	{r3, r4, r5, pc}
 2270              	.LVL197:
 2271              	.L173:
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2272              		.loc 1 2233 0
 2273 0122 2046     		mov	r0, r4
 2274 0124 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2275              	.LVL198:
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2276              		.loc 1 2235 0
 2277 0128 0023     		movs	r3, #0
 2278 012a E367     		str	r3, [r4, #124]
 2279 012c 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc7iiXFd.s 			page 109


 2280              	.LVL199:
 2281              	.L163:
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2282              		.loc 1 2243 0
 2283 012e 13F4801F 		tst	r3, #1048576
 2284 0132 02D0     		beq	.L176
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2285              		.loc 1 2243 0 is_stmt 0 discriminator 1
 2286 0134 15F4800F 		tst	r5, #4194304
 2287 0138 0AD1     		bne	.L179
 2288              	.L176:
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 2289              		.loc 1 2261 0 is_stmt 1
 2290 013a 13F0800F 		tst	r3, #128
 2291 013e 0ED0     		beq	.L177
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2292              		.loc 1 2262 0
 2293 0140 10F0800F 		tst	r0, #128
 2294 0144 0BD0     		beq	.L177
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2295              		.loc 1 2264 0
 2296 0146 636E     		ldr	r3, [r4, #100]
 2297              	.LVL200:
 2298 0148 7BB1     		cbz	r3, .L160
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2299              		.loc 1 2266 0
 2300 014a 2046     		mov	r0, r4
 2301              	.LVL201:
 2302 014c 9847     		blx	r3
 2303              	.LVL202:
 2304 014e 38BD     		pop	{r3, r4, r5, pc}
 2305              	.LVL203:
 2306              	.L179:
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2307              		.loc 1 2245 0
 2308 0150 4FF48013 		mov	r3, #1048576
 2309              	.LVL204:
 2310 0154 0B62     		str	r3, [r1, #32]
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2311              		.loc 1 2255 0
 2312 0156 2046     		mov	r0, r4
 2313              	.LVL205:
 2314 0158 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2315              	.LVL206:
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2316              		.loc 1 2257 0
 2317 015c 38BD     		pop	{r3, r4, r5, pc}
 2318              	.LVL207:
 2319              	.L177:
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2320              		.loc 1 2272 0
 2321 015e 13F0400F 		tst	r3, #64
 2322 0162 02D0     		beq	.L160
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2323              		.loc 1 2272 0 is_stmt 0 discriminator 1
 2324 0164 10F0400F 		tst	r0, #64
 2325 0168 00D1     		bne	.L180
ARM GAS  /tmp/cc7iiXFd.s 			page 110


 2326              	.LVL208:
 2327              	.L160:
 2328 016a 38BD     		pop	{r3, r4, r5, pc}
 2329              	.LVL209:
 2330              	.L180:
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 2331              		.loc 1 2274 0 is_stmt 1
 2332 016c 2046     		mov	r0, r4
 2333              	.LVL210:
 2334 016e FFF7FEFF 		bl	UART_EndTransmit_IT
 2335              	.LVL211:
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2336              		.loc 1 2275 0
 2337 0172 FAE7     		b	.L160
 2338              	.L182:
 2339              		.align	2
 2340              	.L181:
 2341 0174 00000000 		.word	UART_DMAAbortOnError
 2342              		.cfi_endproc
 2343              	.LFE152:
 2345              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2346              		.align	1
 2347              		.syntax unified
 2348              		.thumb
 2349              		.thumb_func
 2350              		.fpu fpv4-sp-d16
 2352              	UART_DMAAbortOnError:
 2353              	.LFB183:
3211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2354              		.loc 1 3211 0
 2355              		.cfi_startproc
 2356              		@ args = 0, pretend = 0, frame = 0
 2357              		@ frame_needed = 0, uses_anonymous_args = 0
 2358              	.LVL212:
 2359 0000 08B5     		push	{r3, lr}
 2360              	.LCFI21:
 2361              		.cfi_def_cfa_offset 8
 2362              		.cfi_offset 3, -8
 2363              		.cfi_offset 14, -4
3212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2364              		.loc 1 3212 0
 2365 0002 406A     		ldr	r0, [r0, #36]
 2366              	.LVL213:
3213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2367              		.loc 1 3213 0
 2368 0004 0023     		movs	r3, #0
 2369 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2370              		.loc 1 3214 0
 2371 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
3221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2372              		.loc 1 3221 0
 2373 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2374              	.LVL214:
 2375 0012 08BD     		pop	{r3, pc}
 2376              		.cfi_endproc
 2377              	.LFE183:
ARM GAS  /tmp/cc7iiXFd.s 			page 111


 2379              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2380              		.align	1
 2381              		.weak	HAL_UART_AbortCpltCallback
 2382              		.syntax unified
 2383              		.thumb
 2384              		.thumb_func
 2385              		.fpu fpv4-sp-d16
 2387              	HAL_UART_AbortCpltCallback:
 2388              	.LFB158:
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2389              		.loc 1 2361 0
 2390              		.cfi_startproc
 2391              		@ args = 0, pretend = 0, frame = 0
 2392              		@ frame_needed = 0, uses_anonymous_args = 0
 2393              		@ link register save eliminated.
 2394              	.LVL215:
 2395 0000 7047     		bx	lr
 2396              		.cfi_endproc
 2397              	.LFE158:
 2399              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2400              		.align	1
 2401              		.global	HAL_UART_Abort_IT
 2402              		.syntax unified
 2403              		.thumb
 2404              		.thumb_func
 2405              		.fpu fpv4-sp-d16
 2407              	HAL_UART_Abort_IT:
 2408              	.LFB149:
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2409              		.loc 1 1775 0
 2410              		.cfi_startproc
 2411              		@ args = 0, pretend = 0, frame = 0
 2412              		@ frame_needed = 0, uses_anonymous_args = 0
 2413              	.LVL216:
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2414              		.loc 1 1775 0
 2415 0000 10B5     		push	{r4, lr}
 2416              	.LCFI22:
 2417              		.cfi_def_cfa_offset 8
 2418              		.cfi_offset 4, -8
 2419              		.cfi_offset 14, -4
 2420 0002 0446     		mov	r4, r0
 2421              	.LVL217:
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2422              		.loc 1 1779 0
 2423 0004 0268     		ldr	r2, [r0]
 2424 0006 1368     		ldr	r3, [r2]
 2425 0008 23F4F073 		bic	r3, r3, #480
 2426 000c 1360     		str	r3, [r2]
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2427              		.loc 1 1780 0
 2428 000e 0268     		ldr	r2, [r0]
 2429 0010 9368     		ldr	r3, [r2, #8]
 2430 0012 23F00103 		bic	r3, r3, #1
 2431 0016 9360     		str	r3, [r2, #8]
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2432              		.loc 1 1785 0
ARM GAS  /tmp/cc7iiXFd.s 			page 112


 2433 0018 836E     		ldr	r3, [r0, #104]
 2434 001a 33B1     		cbz	r3, .L187
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2435              		.loc 1 1789 0
 2436 001c 0268     		ldr	r2, [r0]
 2437 001e 9268     		ldr	r2, [r2, #8]
 2438 0020 12F0800F 		tst	r2, #128
 2439 0024 1DD0     		beq	.L188
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2440              		.loc 1 1791 0
 2441 0026 2B4A     		ldr	r2, .L200
 2442 0028 5A63     		str	r2, [r3, #52]
 2443              	.L187:
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2444              		.loc 1 1799 0
 2445 002a E36E     		ldr	r3, [r4, #108]
 2446 002c 33B1     		cbz	r3, .L189
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2447              		.loc 1 1803 0
 2448 002e 2268     		ldr	r2, [r4]
 2449 0030 9268     		ldr	r2, [r2, #8]
 2450 0032 12F0400F 		tst	r2, #64
 2451 0036 17D0     		beq	.L190
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2452              		.loc 1 1805 0
 2453 0038 274A     		ldr	r2, .L200+4
 2454 003a 5A63     		str	r2, [r3, #52]
 2455              	.L189:
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2456              		.loc 1 1814 0
 2457 003c 2368     		ldr	r3, [r4]
 2458 003e 9A68     		ldr	r2, [r3, #8]
 2459 0040 12F0800F 		tst	r2, #128
 2460 0044 13D0     		beq	.L194
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2461              		.loc 1 1817 0
 2462 0046 9A68     		ldr	r2, [r3, #8]
 2463 0048 22F08002 		bic	r2, r2, #128
 2464 004c 9A60     		str	r2, [r3, #8]
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2465              		.loc 1 1820 0
 2466 004e A06E     		ldr	r0, [r4, #104]
 2467              	.LVL218:
 2468 0050 18B3     		cbz	r0, .L195
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2469              		.loc 1 1826 0
 2470 0052 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2471              	.LVL219:
 2472 0056 10B3     		cbz	r0, .L196
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2473              		.loc 1 1828 0
 2474 0058 A36E     		ldr	r3, [r4, #104]
 2475 005a 0022     		movs	r2, #0
 2476 005c 5A63     		str	r2, [r3, #52]
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2477              		.loc 1 1776 0
 2478 005e 0122     		movs	r2, #1
ARM GAS  /tmp/cc7iiXFd.s 			page 113


 2479 0060 06E0     		b	.L191
 2480              	.LVL220:
 2481              	.L188:
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2482              		.loc 1 1795 0
 2483 0062 0022     		movs	r2, #0
 2484 0064 5A63     		str	r2, [r3, #52]
 2485 0066 E0E7     		b	.L187
 2486              	.L190:
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2487              		.loc 1 1809 0
 2488 0068 0022     		movs	r2, #0
 2489 006a 5A63     		str	r2, [r3, #52]
 2490 006c E6E7     		b	.L189
 2491              	.L194:
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2492              		.loc 1 1776 0
 2493 006e 0122     		movs	r2, #1
 2494              	.LVL221:
 2495              	.L191:
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2496              		.loc 1 1838 0
 2497 0070 2368     		ldr	r3, [r4]
 2498 0072 9968     		ldr	r1, [r3, #8]
 2499 0074 11F0400F 		tst	r1, #64
 2500 0078 0CD0     		beq	.L192
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2501              		.loc 1 1840 0
 2502 007a 9968     		ldr	r1, [r3, #8]
 2503 007c 21F04001 		bic	r1, r1, #64
 2504 0080 9960     		str	r1, [r3, #8]
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2505              		.loc 1 1843 0
 2506 0082 E06E     		ldr	r0, [r4, #108]
 2507 0084 30B1     		cbz	r0, .L192
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2508              		.loc 1 1849 0
 2509 0086 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2510              	.LVL222:
 2511 008a 50B1     		cbz	r0, .L197
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
 2512              		.loc 1 1851 0
 2513 008c E36E     		ldr	r3, [r4, #108]
 2514 008e 0022     		movs	r2, #0
 2515 0090 5A63     		str	r2, [r3, #52]
 2516              	.LVL223:
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2517              		.loc 1 1852 0
 2518 0092 0122     		movs	r2, #1
 2519              	.LVL224:
 2520              	.L192:
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2521              		.loc 1 1862 0
 2522 0094 3AB9     		cbnz	r2, .L199
 2523              	.LVL225:
 2524              	.L193:
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc7iiXFd.s 			page 114


 2525              		.loc 1 1897 0
 2526 0096 0020     		movs	r0, #0
 2527 0098 10BD     		pop	{r4, pc}
 2528              	.LVL226:
 2529              	.L195:
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2530              		.loc 1 1776 0
 2531 009a 0122     		movs	r2, #1
 2532 009c E8E7     		b	.L191
 2533              	.L196:
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2534              		.loc 1 1832 0
 2535 009e 0022     		movs	r2, #0
 2536 00a0 E6E7     		b	.L191
 2537              	.LVL227:
 2538              	.L197:
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2539              		.loc 1 1856 0
 2540 00a2 0022     		movs	r2, #0
 2541 00a4 F6E7     		b	.L192
 2542              	.LVL228:
 2543              	.L199:
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2544              		.loc 1 1865 0
 2545 00a6 0023     		movs	r3, #0
 2546 00a8 A4F85230 		strh	r3, [r4, #82]	@ movhi
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2547              		.loc 1 1866 0
 2548 00ac A4F85A30 		strh	r3, [r4, #90]	@ movhi
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR = NULL;
 2549              		.loc 1 1869 0
 2550 00b0 2366     		str	r3, [r4, #96]
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2551              		.loc 1 1870 0
 2552 00b2 6366     		str	r3, [r4, #100]
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2553              		.loc 1 1873 0
 2554 00b4 E367     		str	r3, [r4, #124]
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2555              		.loc 1 1876 0
 2556 00b6 2368     		ldr	r3, [r4]
 2557 00b8 0F22     		movs	r2, #15
 2558              	.LVL229:
 2559 00ba 1A62     		str	r2, [r3, #32]
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2560              		.loc 1 1880 0
 2561 00bc 2268     		ldr	r2, [r4]
 2562 00be 9369     		ldr	r3, [r2, #24]
 2563 00c0 43F00803 		orr	r3, r3, #8
 2564 00c4 9361     		str	r3, [r2, #24]
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2565              		.loc 1 1883 0
 2566 00c6 2023     		movs	r3, #32
 2567 00c8 6367     		str	r3, [r4, #116]
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2568              		.loc 1 1884 0
 2569 00ca A367     		str	r3, [r4, #120]
ARM GAS  /tmp/cc7iiXFd.s 			page 115


1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2570              		.loc 1 1892 0
 2571 00cc 2046     		mov	r0, r4
 2572 00ce FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2573              	.LVL230:
 2574 00d2 E0E7     		b	.L193
 2575              	.L201:
 2576              		.align	2
 2577              	.L200:
 2578 00d4 00000000 		.word	UART_DMATxAbortCallback
 2579 00d8 00000000 		.word	UART_DMARxAbortCallback
 2580              		.cfi_endproc
 2581              	.LFE149:
 2583              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2584              		.align	1
 2585              		.syntax unified
 2586              		.thumb
 2587              		.thumb_func
 2588              		.fpu fpv4-sp-d16
 2590              	UART_DMARxAbortCallback:
 2591              	.LFB185:
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2592              		.loc 1 3283 0
 2593              		.cfi_startproc
 2594              		@ args = 0, pretend = 0, frame = 0
 2595              		@ frame_needed = 0, uses_anonymous_args = 0
 2596              	.LVL231:
 2597 0000 08B5     		push	{r3, lr}
 2598              	.LCFI23:
 2599              		.cfi_def_cfa_offset 8
 2600              		.cfi_offset 3, -8
 2601              		.cfi_offset 14, -4
3284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2602              		.loc 1 3284 0
 2603 0002 406A     		ldr	r0, [r0, #36]
 2604              	.LVL232:
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2605              		.loc 1 3286 0
 2606 0004 C36E     		ldr	r3, [r0, #108]
 2607 0006 0022     		movs	r2, #0
 2608 0008 5A63     		str	r2, [r3, #52]
3289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2609              		.loc 1 3289 0
 2610 000a 836E     		ldr	r3, [r0, #104]
 2611 000c 13B1     		cbz	r3, .L203
3291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2612              		.loc 1 3291 0
 2613 000e 5B6B     		ldr	r3, [r3, #52]
 2614 0010 03B1     		cbz	r3, .L203
 2615              	.LVL233:
 2616              	.L202:
 2617 0012 08BD     		pop	{r3, pc}
 2618              	.LVL234:
 2619              	.L203:
3298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2620              		.loc 1 3298 0
 2621 0014 0023     		movs	r3, #0
ARM GAS  /tmp/cc7iiXFd.s 			page 116


 2622 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2623              		.loc 1 3299 0
 2624 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
3302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2625              		.loc 1 3302 0
 2626 001e C367     		str	r3, [r0, #124]
3305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2627              		.loc 1 3305 0
 2628 0020 0368     		ldr	r3, [r0]
 2629 0022 0F22     		movs	r2, #15
 2630 0024 1A62     		str	r2, [r3, #32]
3308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2631              		.loc 1 3308 0
 2632 0026 0268     		ldr	r2, [r0]
 2633 0028 9369     		ldr	r3, [r2, #24]
 2634 002a 43F00803 		orr	r3, r3, #8
 2635 002e 9361     		str	r3, [r2, #24]
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2636              		.loc 1 3311 0
 2637 0030 2023     		movs	r3, #32
 2638 0032 4367     		str	r3, [r0, #116]
3312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2639              		.loc 1 3312 0
 2640 0034 8367     		str	r3, [r0, #120]
3320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2641              		.loc 1 3320 0
 2642 0036 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2643              	.LVL235:
 2644 003a EAE7     		b	.L202
 2645              		.cfi_endproc
 2646              	.LFE185:
 2648              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 2649              		.align	1
 2650              		.syntax unified
 2651              		.thumb
 2652              		.thumb_func
 2653              		.fpu fpv4-sp-d16
 2655              	UART_DMATxAbortCallback:
 2656              	.LFB184:
3234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2657              		.loc 1 3234 0
 2658              		.cfi_startproc
 2659              		@ args = 0, pretend = 0, frame = 0
 2660              		@ frame_needed = 0, uses_anonymous_args = 0
 2661              	.LVL236:
 2662 0000 08B5     		push	{r3, lr}
 2663              	.LCFI24:
 2664              		.cfi_def_cfa_offset 8
 2665              		.cfi_offset 3, -8
 2666              		.cfi_offset 14, -4
3235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2667              		.loc 1 3235 0
 2668 0002 406A     		ldr	r0, [r0, #36]
 2669              	.LVL237:
3237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2670              		.loc 1 3237 0
ARM GAS  /tmp/cc7iiXFd.s 			page 117


 2671 0004 836E     		ldr	r3, [r0, #104]
 2672 0006 0022     		movs	r2, #0
 2673 0008 5A63     		str	r2, [r3, #52]
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2674              		.loc 1 3240 0
 2675 000a C36E     		ldr	r3, [r0, #108]
 2676 000c 13B1     		cbz	r3, .L207
3242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2677              		.loc 1 3242 0
 2678 000e 5B6B     		ldr	r3, [r3, #52]
 2679 0010 03B1     		cbz	r3, .L207
 2680              	.LVL238:
 2681              	.L206:
 2682 0012 08BD     		pop	{r3, pc}
 2683              	.LVL239:
 2684              	.L207:
3249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2685              		.loc 1 3249 0
 2686 0014 0023     		movs	r3, #0
 2687 0016 A0F85230 		strh	r3, [r0, #82]	@ movhi
3250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2688              		.loc 1 3250 0
 2689 001a A0F85A30 		strh	r3, [r0, #90]	@ movhi
3253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2690              		.loc 1 3253 0
 2691 001e C367     		str	r3, [r0, #124]
3256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2692              		.loc 1 3256 0
 2693 0020 0368     		ldr	r3, [r0]
 2694 0022 0F22     		movs	r2, #15
 2695 0024 1A62     		str	r2, [r3, #32]
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2696              		.loc 1 3260 0
 2697 0026 2023     		movs	r3, #32
 2698 0028 4367     		str	r3, [r0, #116]
3261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2699              		.loc 1 3261 0
 2700 002a 8367     		str	r3, [r0, #120]
3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2701              		.loc 1 3269 0
 2702 002c FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2703              	.LVL240:
 2704 0030 EFE7     		b	.L206
 2705              		.cfi_endproc
 2706              	.LFE184:
 2708              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2709              		.align	1
 2710              		.weak	HAL_UART_AbortTransmitCpltCallback
 2711              		.syntax unified
 2712              		.thumb
 2713              		.thumb_func
 2714              		.fpu fpv4-sp-d16
 2716              	HAL_UART_AbortTransmitCpltCallback:
 2717              	.LFB159:
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2718              		.loc 1 2376 0
 2719              		.cfi_startproc
ARM GAS  /tmp/cc7iiXFd.s 			page 118


 2720              		@ args = 0, pretend = 0, frame = 0
 2721              		@ frame_needed = 0, uses_anonymous_args = 0
 2722              		@ link register save eliminated.
 2723              	.LVL241:
 2724 0000 7047     		bx	lr
 2725              		.cfi_endproc
 2726              	.LFE159:
 2728              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2729              		.align	1
 2730              		.global	HAL_UART_AbortTransmit_IT
 2731              		.syntax unified
 2732              		.thumb
 2733              		.thumb_func
 2734              		.fpu fpv4-sp-d16
 2736              	HAL_UART_AbortTransmit_IT:
 2737              	.LFB150:
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable interrupts */
 2738              		.loc 1 1914 0
 2739              		.cfi_startproc
 2740              		@ args = 0, pretend = 0, frame = 0
 2741              		@ frame_needed = 0, uses_anonymous_args = 0
 2742              	.LVL242:
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable interrupts */
 2743              		.loc 1 1914 0
 2744 0000 10B5     		push	{r4, lr}
 2745              	.LCFI25:
 2746              		.cfi_def_cfa_offset 8
 2747              		.cfi_offset 4, -8
 2748              		.cfi_offset 14, -4
 2749 0002 0446     		mov	r4, r0
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2750              		.loc 1 1916 0
 2751 0004 0268     		ldr	r2, [r0]
 2752 0006 1368     		ldr	r3, [r2]
 2753 0008 23F0C003 		bic	r3, r3, #192
 2754 000c 1360     		str	r3, [r2]
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2755              		.loc 1 1919 0
 2756 000e 0368     		ldr	r3, [r0]
 2757 0010 9A68     		ldr	r2, [r3, #8]
 2758 0012 12F0800F 		tst	r2, #128
 2759 0016 1AD0     		beq	.L212
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2760              		.loc 1 1921 0
 2761 0018 9A68     		ldr	r2, [r3, #8]
 2762 001a 22F08002 		bic	r2, r2, #128
 2763 001e 9A60     		str	r2, [r3, #8]
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2764              		.loc 1 1924 0
 2765 0020 836E     		ldr	r3, [r0, #104]
 2766 0022 5BB1     		cbz	r3, .L213
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2767              		.loc 1 1928 0
 2768 0024 0E4A     		ldr	r2, .L217
 2769 0026 5A63     		str	r2, [r3, #52]
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2770              		.loc 1 1931 0
ARM GAS  /tmp/cc7iiXFd.s 			page 119


 2771 0028 806E     		ldr	r0, [r0, #104]
 2772              	.LVL243:
 2773 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2774              	.LVL244:
 2775 002e 08B9     		cbnz	r0, .L216
 2776              	.L214:
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2777              		.loc 1 1981 0
 2778 0030 0020     		movs	r0, #0
 2779 0032 10BD     		pop	{r4, pc}
 2780              	.LVL245:
 2781              	.L216:
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2782              		.loc 1 1934 0
 2783 0034 A06E     		ldr	r0, [r4, #104]
 2784 0036 436B     		ldr	r3, [r0, #52]
 2785 0038 9847     		blx	r3
 2786              	.LVL246:
 2787 003a F9E7     		b	.L214
 2788              	.LVL247:
 2789              	.L213:
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2790              		.loc 1 1940 0
 2791 003c 0023     		movs	r3, #0
 2792 003e A0F85230 		strh	r3, [r0, #82]	@ movhi
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2793              		.loc 1 1943 0
 2794 0042 4366     		str	r3, [r0, #100]
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2795              		.loc 1 1946 0
 2796 0044 2023     		movs	r3, #32
 2797 0046 4367     		str	r3, [r0, #116]
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2798              		.loc 1 1954 0
 2799 0048 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2800              	.LVL248:
 2801 004c F0E7     		b	.L214
 2802              	.LVL249:
 2803              	.L212:
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2804              		.loc 1 1961 0
 2805 004e 0023     		movs	r3, #0
 2806 0050 A0F85230 		strh	r3, [r0, #82]	@ movhi
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2807              		.loc 1 1964 0
 2808 0054 4366     		str	r3, [r0, #100]
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2809              		.loc 1 1968 0
 2810 0056 2023     		movs	r3, #32
 2811 0058 4367     		str	r3, [r0, #116]
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2812              		.loc 1 1976 0
 2813 005a FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2814              	.LVL250:
 2815 005e E7E7     		b	.L214
 2816              	.L218:
 2817              		.align	2
ARM GAS  /tmp/cc7iiXFd.s 			page 120


 2818              	.L217:
 2819 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 2820              		.cfi_endproc
 2821              	.LFE150:
 2823              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2824              		.align	1
 2825              		.syntax unified
 2826              		.thumb
 2827              		.thumb_func
 2828              		.fpu fpv4-sp-d16
 2830              	UART_DMATxOnlyAbortCallback:
 2831              	.LFB186:
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2832              		.loc 1 3334 0
 2833              		.cfi_startproc
 2834              		@ args = 0, pretend = 0, frame = 0
 2835              		@ frame_needed = 0, uses_anonymous_args = 0
 2836              	.LVL251:
 2837 0000 08B5     		push	{r3, lr}
 2838              	.LCFI26:
 2839              		.cfi_def_cfa_offset 8
 2840              		.cfi_offset 3, -8
 2841              		.cfi_offset 14, -4
3335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2842              		.loc 1 3335 0
 2843 0002 406A     		ldr	r0, [r0, #36]
 2844              	.LVL252:
3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2845              		.loc 1 3337 0
 2846 0004 0023     		movs	r3, #0
 2847 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2848              		.loc 1 3341 0
 2849 000a 2023     		movs	r3, #32
 2850 000c 4367     		str	r3, [r0, #116]
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2851              		.loc 1 3349 0
 2852 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2853              	.LVL253:
 2854 0012 08BD     		pop	{r3, pc}
 2855              		.cfi_endproc
 2856              	.LFE186:
 2858              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2859              		.align	1
 2860              		.weak	HAL_UART_AbortReceiveCpltCallback
 2861              		.syntax unified
 2862              		.thumb
 2863              		.thumb_func
 2864              		.fpu fpv4-sp-d16
 2866              	HAL_UART_AbortReceiveCpltCallback:
 2867              	.LFB160:
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2868              		.loc 1 2391 0
 2869              		.cfi_startproc
 2870              		@ args = 0, pretend = 0, frame = 0
 2871              		@ frame_needed = 0, uses_anonymous_args = 0
 2872              		@ link register save eliminated.
ARM GAS  /tmp/cc7iiXFd.s 			page 121


 2873              	.LVL254:
 2874 0000 7047     		bx	lr
 2875              		.cfi_endproc
 2876              	.LFE160:
 2878              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2879              		.align	1
 2880              		.global	HAL_UART_AbortReceive_IT
 2881              		.syntax unified
 2882              		.thumb
 2883              		.thumb_func
 2884              		.fpu fpv4-sp-d16
 2886              	HAL_UART_AbortReceive_IT:
 2887              	.LFB151:
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2888              		.loc 1 1998 0
 2889              		.cfi_startproc
 2890              		@ args = 0, pretend = 0, frame = 0
 2891              		@ frame_needed = 0, uses_anonymous_args = 0
 2892              	.LVL255:
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2893              		.loc 1 1998 0
 2894 0000 10B5     		push	{r4, lr}
 2895              	.LCFI27:
 2896              		.cfi_def_cfa_offset 8
 2897              		.cfi_offset 4, -8
 2898              		.cfi_offset 14, -4
 2899 0002 0446     		mov	r4, r0
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2900              		.loc 1 2000 0
 2901 0004 0268     		ldr	r2, [r0]
 2902 0006 1368     		ldr	r3, [r2]
 2903 0008 23F49073 		bic	r3, r3, #288
 2904 000c 1360     		str	r3, [r2]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2905              		.loc 1 2001 0
 2906 000e 0268     		ldr	r2, [r0]
 2907 0010 9368     		ldr	r3, [r2, #8]
 2908 0012 23F00103 		bic	r3, r3, #1
 2909 0016 9360     		str	r3, [r2, #8]
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2910              		.loc 1 2004 0
 2911 0018 0368     		ldr	r3, [r0]
 2912 001a 9A68     		ldr	r2, [r3, #8]
 2913 001c 12F0400F 		tst	r2, #64
 2914 0020 22D0     		beq	.L223
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2915              		.loc 1 2006 0
 2916 0022 9A68     		ldr	r2, [r3, #8]
 2917 0024 22F04002 		bic	r2, r2, #64
 2918 0028 9A60     		str	r2, [r3, #8]
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2919              		.loc 1 2009 0
 2920 002a C36E     		ldr	r3, [r0, #108]
 2921 002c 5BB1     		cbz	r3, .L224
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2922              		.loc 1 2013 0
 2923 002e 144A     		ldr	r2, .L228
ARM GAS  /tmp/cc7iiXFd.s 			page 122


 2924 0030 5A63     		str	r2, [r3, #52]
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2925              		.loc 1 2016 0
 2926 0032 C06E     		ldr	r0, [r0, #108]
 2927              	.LVL256:
 2928 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2929              	.LVL257:
 2930 0038 08B9     		cbnz	r0, .L227
 2931              	.L225:
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2932              		.loc 1 2074 0
 2933 003a 0020     		movs	r0, #0
 2934 003c 10BD     		pop	{r4, pc}
 2935              	.LVL258:
 2936              	.L227:
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2937              		.loc 1 2019 0
 2938 003e E06E     		ldr	r0, [r4, #108]
 2939 0040 436B     		ldr	r3, [r0, #52]
 2940 0042 9847     		blx	r3
 2941              	.LVL259:
 2942 0044 F9E7     		b	.L225
 2943              	.LVL260:
 2944              	.L224:
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2945              		.loc 1 2025 0
 2946 0046 0023     		movs	r3, #0
 2947 0048 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2948              		.loc 1 2028 0
 2949 004c 4365     		str	r3, [r0, #84]
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2950              		.loc 1 2031 0
 2951 004e 0368     		ldr	r3, [r0]
 2952 0050 0F22     		movs	r2, #15
 2953 0052 1A62     		str	r2, [r3, #32]
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2954              		.loc 1 2034 0
 2955 0054 0268     		ldr	r2, [r0]
 2956 0056 9369     		ldr	r3, [r2, #24]
 2957 0058 43F00803 		orr	r3, r3, #8
 2958 005c 9361     		str	r3, [r2, #24]
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2959              		.loc 1 2037 0
 2960 005e 2023     		movs	r3, #32
 2961 0060 8367     		str	r3, [r0, #120]
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2962              		.loc 1 2045 0
 2963 0062 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2964              	.LVL261:
 2965 0066 E8E7     		b	.L225
 2966              	.LVL262:
 2967              	.L223:
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2968              		.loc 1 2052 0
 2969 0068 0022     		movs	r2, #0
 2970 006a A0F85A20 		strh	r2, [r0, #90]	@ movhi
ARM GAS  /tmp/cc7iiXFd.s 			page 123


2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2971              		.loc 1 2055 0
 2972 006e 4265     		str	r2, [r0, #84]
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2973              		.loc 1 2058 0
 2974 0070 0F22     		movs	r2, #15
 2975 0072 1A62     		str	r2, [r3, #32]
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2976              		.loc 1 2061 0
 2977 0074 2023     		movs	r3, #32
 2978 0076 8367     		str	r3, [r0, #120]
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2979              		.loc 1 2069 0
 2980 0078 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2981              	.LVL263:
 2982 007c DDE7     		b	.L225
 2983              	.L229:
 2984 007e 00BF     		.align	2
 2985              	.L228:
 2986 0080 00000000 		.word	UART_DMARxOnlyAbortCallback
 2987              		.cfi_endproc
 2988              	.LFE151:
 2990              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2991              		.align	1
 2992              		.syntax unified
 2993              		.thumb
 2994              		.thumb_func
 2995              		.fpu fpv4-sp-d16
 2997              	UART_DMARxOnlyAbortCallback:
 2998              	.LFB187:
3362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2999              		.loc 1 3362 0
 3000              		.cfi_startproc
 3001              		@ args = 0, pretend = 0, frame = 0
 3002              		@ frame_needed = 0, uses_anonymous_args = 0
 3003              	.LVL264:
 3004 0000 08B5     		push	{r3, lr}
 3005              	.LCFI28:
 3006              		.cfi_def_cfa_offset 8
 3007              		.cfi_offset 3, -8
 3008              		.cfi_offset 14, -4
3363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3009              		.loc 1 3363 0
 3010 0002 406A     		ldr	r0, [r0, #36]
 3011              	.LVL265:
3365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3012              		.loc 1 3365 0
 3013 0004 0023     		movs	r3, #0
 3014 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3015              		.loc 1 3368 0
 3016 000a 0368     		ldr	r3, [r0]
 3017 000c 0F22     		movs	r2, #15
 3018 000e 1A62     		str	r2, [r3, #32]
3371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3019              		.loc 1 3371 0
 3020 0010 0268     		ldr	r2, [r0]
ARM GAS  /tmp/cc7iiXFd.s 			page 124


 3021 0012 9369     		ldr	r3, [r2, #24]
 3022 0014 43F00803 		orr	r3, r3, #8
 3023 0018 9361     		str	r3, [r2, #24]
3374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3024              		.loc 1 3374 0
 3025 001a 2023     		movs	r3, #32
 3026 001c 8367     		str	r3, [r0, #120]
3382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 3027              		.loc 1 3382 0
 3028 001e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3029              	.LVL266:
 3030 0022 08BD     		pop	{r3, pc}
 3031              		.cfi_endproc
 3032              	.LFE187:
 3034              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 3035              		.align	1
 3036              		.global	HAL_UART_ReceiverTimeout_Config
 3037              		.syntax unified
 3038              		.thumb
 3039              		.thumb_func
 3040              		.fpu fpv4-sp-d16
 3042              	HAL_UART_ReceiverTimeout_Config:
 3043              	.LFB161:
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
 3044              		.loc 1 2438 0
 3045              		.cfi_startproc
 3046              		@ args = 0, pretend = 0, frame = 0
 3047              		@ frame_needed = 0, uses_anonymous_args = 0
 3048              		@ link register save eliminated.
 3049              	.LVL267:
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3050              		.loc 1 2440 0
 3051 0000 0268     		ldr	r2, [r0]
 3052 0002 5369     		ldr	r3, [r2, #20]
 3053 0004 03F07F43 		and	r3, r3, #-16777216
 3054 0008 1943     		orrs	r1, r1, r3
 3055              	.LVL268:
 3056 000a 5161     		str	r1, [r2, #20]
 3057 000c 7047     		bx	lr
 3058              		.cfi_endproc
 3059              	.LFE161:
 3061              		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 3062              		.align	1
 3063              		.global	HAL_UART_EnableReceiverTimeout
 3064              		.syntax unified
 3065              		.thumb
 3066              		.thumb_func
 3067              		.fpu fpv4-sp-d16
 3069              	HAL_UART_EnableReceiverTimeout:
 3070              	.LFB162:
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 3071              		.loc 1 2450 0
 3072              		.cfi_startproc
 3073              		@ args = 0, pretend = 0, frame = 0
 3074              		@ frame_needed = 0, uses_anonymous_args = 0
 3075              		@ link register save eliminated.
 3076              	.LVL269:
ARM GAS  /tmp/cc7iiXFd.s 			page 125


2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3077              		.loc 1 2451 0
 3078 0000 436F     		ldr	r3, [r0, #116]
 3079 0002 202B     		cmp	r3, #32
 3080 0004 01D0     		beq	.L237
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3081              		.loc 1 2470 0
 3082 0006 0220     		movs	r0, #2
 3083              	.LVL270:
 3084 0008 7047     		bx	lr
 3085              	.LVL271:
 3086              	.L237:
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3087              		.loc 1 2454 0
 3088 000a 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3089 000e 012B     		cmp	r3, #1
 3090 0010 10D0     		beq	.L236
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3091              		.loc 1 2454 0 is_stmt 0 discriminator 2
 3092 0012 0123     		movs	r3, #1
 3093 0014 80F87030 		strb	r3, [r0, #112]
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3094              		.loc 1 2456 0 is_stmt 1 discriminator 2
 3095 0018 2423     		movs	r3, #36
 3096 001a 4367     		str	r3, [r0, #116]
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3097              		.loc 1 2459 0 discriminator 2
 3098 001c 0268     		ldr	r2, [r0]
 3099 001e 5368     		ldr	r3, [r2, #4]
 3100 0020 43F40003 		orr	r3, r3, #8388608
 3101 0024 5360     		str	r3, [r2, #4]
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3102              		.loc 1 2461 0 discriminator 2
 3103 0026 2023     		movs	r3, #32
 3104 0028 4367     		str	r3, [r0, #116]
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3105              		.loc 1 2464 0 discriminator 2
 3106 002a 0023     		movs	r3, #0
 3107 002c 80F87030 		strb	r3, [r0, #112]
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3108              		.loc 1 2466 0 discriminator 2
 3109 0030 1846     		mov	r0, r3
 3110              	.LVL272:
 3111 0032 7047     		bx	lr
 3112              	.LVL273:
 3113              	.L236:
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3114              		.loc 1 2454 0
 3115 0034 0220     		movs	r0, #2
 3116              	.LVL274:
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3117              		.loc 1 2472 0
 3118 0036 7047     		bx	lr
 3119              		.cfi_endproc
 3120              	.LFE162:
 3122              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 3123              		.align	1
ARM GAS  /tmp/cc7iiXFd.s 			page 126


 3124              		.global	HAL_UART_DisableReceiverTimeout
 3125              		.syntax unified
 3126              		.thumb
 3127              		.thumb_func
 3128              		.fpu fpv4-sp-d16
 3130              	HAL_UART_DisableReceiverTimeout:
 3131              	.LFB163:
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 3132              		.loc 1 2481 0
 3133              		.cfi_startproc
 3134              		@ args = 0, pretend = 0, frame = 0
 3135              		@ frame_needed = 0, uses_anonymous_args = 0
 3136              		@ link register save eliminated.
 3137              	.LVL275:
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3138              		.loc 1 2482 0
 3139 0000 436F     		ldr	r3, [r0, #116]
 3140 0002 202B     		cmp	r3, #32
 3141 0004 01D0     		beq	.L242
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3142              		.loc 1 2501 0
 3143 0006 0220     		movs	r0, #2
 3144              	.LVL276:
 3145 0008 7047     		bx	lr
 3146              	.LVL277:
 3147              	.L242:
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3148              		.loc 1 2485 0
 3149 000a 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3150 000e 012B     		cmp	r3, #1
 3151 0010 10D0     		beq	.L241
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3152              		.loc 1 2485 0 is_stmt 0 discriminator 2
 3153 0012 0123     		movs	r3, #1
 3154 0014 80F87030 		strb	r3, [r0, #112]
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3155              		.loc 1 2487 0 is_stmt 1 discriminator 2
 3156 0018 2423     		movs	r3, #36
 3157 001a 4367     		str	r3, [r0, #116]
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3158              		.loc 1 2490 0 discriminator 2
 3159 001c 0268     		ldr	r2, [r0]
 3160 001e 5368     		ldr	r3, [r2, #4]
 3161 0020 23F40003 		bic	r3, r3, #8388608
 3162 0024 5360     		str	r3, [r2, #4]
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3163              		.loc 1 2492 0 discriminator 2
 3164 0026 2023     		movs	r3, #32
 3165 0028 4367     		str	r3, [r0, #116]
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3166              		.loc 1 2495 0 discriminator 2
 3167 002a 0023     		movs	r3, #0
 3168 002c 80F87030 		strb	r3, [r0, #112]
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3169              		.loc 1 2497 0 discriminator 2
 3170 0030 1846     		mov	r0, r3
 3171              	.LVL278:
ARM GAS  /tmp/cc7iiXFd.s 			page 127


 3172 0032 7047     		bx	lr
 3173              	.LVL279:
 3174              	.L241:
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3175              		.loc 1 2485 0
 3176 0034 0220     		movs	r0, #2
 3177              	.LVL280:
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3178              		.loc 1 2503 0
 3179 0036 7047     		bx	lr
 3180              		.cfi_endproc
 3181              	.LFE163:
 3183              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3184              		.align	1
 3185              		.global	HAL_MultiProcessor_EnterMuteMode
 3186              		.syntax unified
 3187              		.thumb
 3188              		.thumb_func
 3189              		.fpu fpv4-sp-d16
 3191              	HAL_MultiProcessor_EnterMuteMode:
 3192              	.LFB166:
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3193              		.loc 1 2552 0
 3194              		.cfi_startproc
 3195              		@ args = 0, pretend = 0, frame = 0
 3196              		@ frame_needed = 0, uses_anonymous_args = 0
 3197              		@ link register save eliminated.
 3198              	.LVL281:
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3199              		.loc 1 2553 0
 3200 0000 0268     		ldr	r2, [r0]
 3201 0002 9369     		ldr	r3, [r2, #24]
 3202 0004 43F00403 		orr	r3, r3, #4
 3203 0008 9361     		str	r3, [r2, #24]
 3204 000a 7047     		bx	lr
 3205              		.cfi_endproc
 3206              	.LFE166:
 3208              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3209              		.align	1
 3210              		.global	HAL_HalfDuplex_EnableTransmitter
 3211              		.syntax unified
 3212              		.thumb
 3213              		.thumb_func
 3214              		.fpu fpv4-sp-d16
 3216              	HAL_HalfDuplex_EnableTransmitter:
 3217              	.LFB167:
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 3218              		.loc 1 2562 0
 3219              		.cfi_startproc
 3220              		@ args = 0, pretend = 0, frame = 0
 3221              		@ frame_needed = 0, uses_anonymous_args = 0
 3222              		@ link register save eliminated.
 3223              	.LVL282:
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3224              		.loc 1 2563 0
 3225 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3226 0004 012B     		cmp	r3, #1
ARM GAS  /tmp/cc7iiXFd.s 			page 128


 3227 0006 15D0     		beq	.L246
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3228              		.loc 1 2563 0 is_stmt 0 discriminator 2
 3229 0008 0123     		movs	r3, #1
 3230 000a 80F87030 		strb	r3, [r0, #112]
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3231              		.loc 1 2564 0 is_stmt 1 discriminator 2
 3232 000e 2423     		movs	r3, #36
 3233 0010 4367     		str	r3, [r0, #116]
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3234              		.loc 1 2567 0 discriminator 2
 3235 0012 0268     		ldr	r2, [r0]
 3236 0014 1368     		ldr	r3, [r2]
 3237 0016 23F00C03 		bic	r3, r3, #12
 3238 001a 1360     		str	r3, [r2]
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3239              		.loc 1 2570 0 discriminator 2
 3240 001c 0268     		ldr	r2, [r0]
 3241 001e 1368     		ldr	r3, [r2]
 3242 0020 43F00803 		orr	r3, r3, #8
 3243 0024 1360     		str	r3, [r2]
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3244              		.loc 1 2572 0 discriminator 2
 3245 0026 2023     		movs	r3, #32
 3246 0028 4367     		str	r3, [r0, #116]
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3247              		.loc 1 2574 0 discriminator 2
 3248 002a 0023     		movs	r3, #0
 3249 002c 80F87030 		strb	r3, [r0, #112]
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3250              		.loc 1 2576 0 discriminator 2
 3251 0030 1846     		mov	r0, r3
 3252              	.LVL283:
 3253 0032 7047     		bx	lr
 3254              	.LVL284:
 3255              	.L246:
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3256              		.loc 1 2563 0
 3257 0034 0220     		movs	r0, #2
 3258              	.LVL285:
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3259              		.loc 1 2577 0
 3260 0036 7047     		bx	lr
 3261              		.cfi_endproc
 3262              	.LFE167:
 3264              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3265              		.align	1
 3266              		.global	HAL_HalfDuplex_EnableReceiver
 3267              		.syntax unified
 3268              		.thumb
 3269              		.thumb_func
 3270              		.fpu fpv4-sp-d16
 3272              	HAL_HalfDuplex_EnableReceiver:
 3273              	.LFB168:
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 3274              		.loc 1 2585 0
 3275              		.cfi_startproc
ARM GAS  /tmp/cc7iiXFd.s 			page 129


 3276              		@ args = 0, pretend = 0, frame = 0
 3277              		@ frame_needed = 0, uses_anonymous_args = 0
 3278              		@ link register save eliminated.
 3279              	.LVL286:
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3280              		.loc 1 2586 0
 3281 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3282 0004 012B     		cmp	r3, #1
 3283 0006 15D0     		beq	.L249
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3284              		.loc 1 2586 0 is_stmt 0 discriminator 2
 3285 0008 0123     		movs	r3, #1
 3286 000a 80F87030 		strb	r3, [r0, #112]
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3287              		.loc 1 2587 0 is_stmt 1 discriminator 2
 3288 000e 2423     		movs	r3, #36
 3289 0010 4367     		str	r3, [r0, #116]
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3290              		.loc 1 2590 0 discriminator 2
 3291 0012 0268     		ldr	r2, [r0]
 3292 0014 1368     		ldr	r3, [r2]
 3293 0016 23F00C03 		bic	r3, r3, #12
 3294 001a 1360     		str	r3, [r2]
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3295              		.loc 1 2593 0 discriminator 2
 3296 001c 0268     		ldr	r2, [r0]
 3297 001e 1368     		ldr	r3, [r2]
 3298 0020 43F00403 		orr	r3, r3, #4
 3299 0024 1360     		str	r3, [r2]
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3300              		.loc 1 2595 0 discriminator 2
 3301 0026 2023     		movs	r3, #32
 3302 0028 4367     		str	r3, [r0, #116]
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3303              		.loc 1 2597 0 discriminator 2
 3304 002a 0023     		movs	r3, #0
 3305 002c 80F87030 		strb	r3, [r0, #112]
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3306              		.loc 1 2599 0 discriminator 2
 3307 0030 1846     		mov	r0, r3
 3308              	.LVL287:
 3309 0032 7047     		bx	lr
 3310              	.LVL288:
 3311              	.L249:
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3312              		.loc 1 2586 0
 3313 0034 0220     		movs	r0, #2
 3314              	.LVL289:
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3315              		.loc 1 2600 0
 3316 0036 7047     		bx	lr
 3317              		.cfi_endproc
 3318              	.LFE168:
 3320              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3321              		.align	1
 3322              		.global	HAL_LIN_SendBreak
 3323              		.syntax unified
ARM GAS  /tmp/cc7iiXFd.s 			page 130


 3324              		.thumb
 3325              		.thumb_func
 3326              		.fpu fpv4-sp-d16
 3328              	HAL_LIN_SendBreak:
 3329              	.LFB169:
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 3330              		.loc 1 2609 0
 3331              		.cfi_startproc
 3332              		@ args = 0, pretend = 0, frame = 0
 3333              		@ frame_needed = 0, uses_anonymous_args = 0
 3334              		@ link register save eliminated.
 3335              	.LVL290:
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3336              		.loc 1 2613 0
 3337 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3338 0004 012B     		cmp	r3, #1
 3339 0006 10D0     		beq	.L252
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3340              		.loc 1 2613 0 is_stmt 0 discriminator 2
 3341 0008 0123     		movs	r3, #1
 3342 000a 80F87030 		strb	r3, [r0, #112]
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3343              		.loc 1 2615 0 is_stmt 1 discriminator 2
 3344 000e 2423     		movs	r3, #36
 3345 0010 4367     		str	r3, [r0, #116]
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3346              		.loc 1 2618 0 discriminator 2
 3347 0012 0268     		ldr	r2, [r0]
 3348 0014 9369     		ldr	r3, [r2, #24]
 3349 0016 43F00203 		orr	r3, r3, #2
 3350 001a 9361     		str	r3, [r2, #24]
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3351              		.loc 1 2620 0 discriminator 2
 3352 001c 2023     		movs	r3, #32
 3353 001e 4367     		str	r3, [r0, #116]
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3354              		.loc 1 2622 0 discriminator 2
 3355 0020 0023     		movs	r3, #0
 3356 0022 80F87030 		strb	r3, [r0, #112]
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3357              		.loc 1 2624 0 discriminator 2
 3358 0026 1846     		mov	r0, r3
 3359              	.LVL291:
 3360 0028 7047     		bx	lr
 3361              	.LVL292:
 3362              	.L252:
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3363              		.loc 1 2613 0
 3364 002a 0220     		movs	r0, #2
 3365              	.LVL293:
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3366              		.loc 1 2625 0
 3367 002c 7047     		bx	lr
 3368              		.cfi_endproc
 3369              	.LFE169:
 3371              		.section	.text.HAL_UART_GetState,"ax",%progbits
 3372              		.align	1
ARM GAS  /tmp/cc7iiXFd.s 			page 131


 3373              		.global	HAL_UART_GetState
 3374              		.syntax unified
 3375              		.thumb
 3376              		.thumb_func
 3377              		.fpu fpv4-sp-d16
 3379              	HAL_UART_GetState:
 3380              	.LFB170:
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1;
 3381              		.loc 1 2654 0
 3382              		.cfi_startproc
 3383              		@ args = 0, pretend = 0, frame = 0
 3384              		@ frame_needed = 0, uses_anonymous_args = 0
 3385              		@ link register save eliminated.
 3386              	.LVL294:
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
 3387              		.loc 1 2657 0
 3388 0000 426F     		ldr	r2, [r0, #116]
 3389              	.LVL295:
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3390              		.loc 1 2658 0
 3391 0002 806F     		ldr	r0, [r0, #120]
 3392              	.LVL296:
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3393              		.loc 1 2661 0
 3394 0004 1043     		orrs	r0, r0, r2
 3395              	.LVL297:
 3396 0006 7047     		bx	lr
 3397              		.cfi_endproc
 3398              	.LFE170:
 3400              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3401              		.align	1
 3402              		.global	HAL_UART_GetError
 3403              		.syntax unified
 3404              		.thumb
 3405              		.thumb_func
 3406              		.fpu fpv4-sp-d16
 3408              	HAL_UART_GetError:
 3409              	.LFB171:
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
 3410              		.loc 1 2670 0
 3411              		.cfi_startproc
 3412              		@ args = 0, pretend = 0, frame = 0
 3413              		@ frame_needed = 0, uses_anonymous_args = 0
 3414              		@ link register save eliminated.
 3415              	.LVL298:
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3416              		.loc 1 2671 0
 3417 0000 C06F     		ldr	r0, [r0, #124]
 3418              	.LVL299:
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 3419              		.loc 1 2672 0
 3420 0002 7047     		bx	lr
 3421              		.cfi_endproc
 3422              	.LFE171:
 3424              		.section	.text.UART_SetConfig,"ax",%progbits
 3425              		.align	1
 3426              		.global	UART_SetConfig
ARM GAS  /tmp/cc7iiXFd.s 			page 132


 3427              		.syntax unified
 3428              		.thumb
 3429              		.thumb_func
 3430              		.fpu fpv4-sp-d16
 3432              	UART_SetConfig:
 3433              	.LFB172:
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg;
 3434              		.loc 1 2713 0
 3435              		.cfi_startproc
 3436              		@ args = 0, pretend = 0, frame = 0
 3437              		@ frame_needed = 0, uses_anonymous_args = 0
 3438              	.LVL300:
 3439 0000 10B5     		push	{r4, lr}
 3440              	.LCFI29:
 3441              		.cfi_def_cfa_offset 8
 3442              		.cfi_offset 4, -8
 3443              		.cfi_offset 14, -4
 3444 0002 0446     		mov	r4, r0
 3445              	.LVL301:
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 3446              		.loc 1 2739 0
 3447 0004 8368     		ldr	r3, [r0, #8]
 3448 0006 0269     		ldr	r2, [r0, #16]
 3449 0008 1343     		orrs	r3, r3, r2
 3450 000a 4269     		ldr	r2, [r0, #20]
 3451 000c 1343     		orrs	r3, r3, r2
 3452 000e C269     		ldr	r2, [r0, #28]
 3453 0010 1343     		orrs	r3, r3, r2
 3454              	.LVL302:
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3455              		.loc 1 2740 0
 3456 0012 0168     		ldr	r1, [r0]
 3457 0014 0868     		ldr	r0, [r1]
 3458              	.LVL303:
 3459 0016 A14A     		ldr	r2, .L323
 3460 0018 0240     		ands	r2, r2, r0
 3461 001a 1343     		orrs	r3, r3, r2
 3462              	.LVL304:
 3463 001c 0B60     		str	r3, [r1]
 3464              	.LVL305:
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3465              		.loc 1 2745 0
 3466 001e 2268     		ldr	r2, [r4]
 3467 0020 5368     		ldr	r3, [r2, #4]
 3468 0022 23F44053 		bic	r3, r3, #12288
 3469 0026 E168     		ldr	r1, [r4, #12]
 3470 0028 0B43     		orrs	r3, r3, r1
 3471 002a 5360     		str	r3, [r2, #4]
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3472              		.loc 1 2753 0
 3473 002c A369     		ldr	r3, [r4, #24]
 3474              	.LVL306:
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 3475              		.loc 1 2755 0
 3476 002e 226A     		ldr	r2, [r4, #32]
 3477 0030 1343     		orrs	r3, r3, r2
 3478              	.LVL307:
ARM GAS  /tmp/cc7iiXFd.s 			page 133


2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3479              		.loc 1 2756 0
 3480 0032 2168     		ldr	r1, [r4]
 3481 0034 8A68     		ldr	r2, [r1, #8]
 3482 0036 22F43062 		bic	r2, r2, #2816
 3483 003a 1343     		orrs	r3, r3, r2
 3484              	.LVL308:
 3485 003c 8B60     		str	r3, [r1, #8]
 3486              	.LVL309:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3487              		.loc 1 2760 0
 3488 003e 2368     		ldr	r3, [r4]
 3489 0040 974A     		ldr	r2, .L323+4
 3490 0042 9342     		cmp	r3, r2
 3491 0044 1FD0     		beq	.L313
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3492              		.loc 1 2760 0 is_stmt 0 discriminator 2
 3493 0046 974A     		ldr	r2, .L323+8
 3494 0048 9342     		cmp	r3, r2
 3495 004a 2ED0     		beq	.L314
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3496              		.loc 1 2760 0 discriminator 9
 3497 004c 964A     		ldr	r2, .L323+12
 3498 004e 9342     		cmp	r3, r2
 3499 0050 44D0     		beq	.L315
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3500              		.loc 1 2760 0 discriminator 16
 3501 0052 964A     		ldr	r2, .L323+16
 3502 0054 9342     		cmp	r3, r2
 3503 0056 5AD0     		beq	.L316
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3504              		.loc 1 2760 0 discriminator 23
 3505 0058 954A     		ldr	r2, .L323+20
 3506 005a 9342     		cmp	r3, r2
 3507 005c 70D0     		beq	.L317
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3508              		.loc 1 2760 0
 3509 005e 1023     		movs	r3, #16
 3510              	.L262:
 3511              	.LVL310:
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3512              		.loc 1 2762 0 is_stmt 1
 3513 0060 E269     		ldr	r2, [r4, #28]
 3514 0062 B2F5004F 		cmp	r2, #32768
 3515 0066 00F08680 		beq	.L318
2803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3516              		.loc 1 2803 0
 3517 006a 082B     		cmp	r3, #8
 3518 006c 00F20F81 		bhi	.L310
 3519 0070 DFE813F0 		tbh	[pc, r3, lsl #1]
 3520              	.L297:
 3521 0074 D000     		.2byte	(.L296-.L297)/2
 3522 0076 E500     		.2byte	(.L298-.L297)/2
 3523 0078 EF00     		.2byte	(.L299-.L297)/2
 3524 007a 0D01     		.2byte	(.L310-.L297)/2
 3525 007c FA00     		.2byte	(.L300-.L297)/2
 3526 007e 0D01     		.2byte	(.L310-.L297)/2
ARM GAS  /tmp/cc7iiXFd.s 			page 134


 3527 0080 0D01     		.2byte	(.L310-.L297)/2
 3528 0082 0D01     		.2byte	(.L310-.L297)/2
 3529 0084 0401     		.2byte	(.L301-.L297)/2
 3530              	.LVL311:
 3531              		.p2align 1
 3532              	.L313:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3533              		.loc 1 2760 0 discriminator 1
 3534 0086 8B4B     		ldr	r3, .L323+24
 3535 0088 1B6B     		ldr	r3, [r3, #48]
 3536 008a 03F00303 		and	r3, r3, #3
 3537 008e 032B     		cmp	r3, #3
 3538 0090 09D8     		bhi	.L257
 3539 0092 DFE803F0 		tbb	[pc, r3]
 3540              	.L259:
 3541 0096 02       		.byte	(.L258-.L259)/2
 3542 0097 04       		.byte	(.L260-.L259)/2
 3543 0098 06       		.byte	(.L261-.L259)/2
 3544 0099 6E       		.byte	(.L302-.L259)/2
 3545              		.p2align 1
 3546              	.L258:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3547              		.loc 1 2760 0 is_stmt 0
 3548 009a 0123     		movs	r3, #1
 3549 009c E0E7     		b	.L262
 3550              	.L260:
 3551              	.LVL312:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3552              		.loc 1 2760 0 discriminator 5
 3553 009e 0423     		movs	r3, #4
 3554 00a0 DEE7     		b	.L262
 3555              	.LVL313:
 3556              	.L261:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3557              		.loc 1 2760 0 discriminator 6
 3558 00a2 0823     		movs	r3, #8
 3559 00a4 DCE7     		b	.L262
 3560              	.LVL314:
 3561              	.L257:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3562              		.loc 1 2760 0 discriminator 3
 3563 00a6 1023     		movs	r3, #16
 3564 00a8 DAE7     		b	.L262
 3565              	.LVL315:
 3566              	.L314:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3567              		.loc 1 2760 0 discriminator 8
 3568 00aa 824B     		ldr	r3, .L323+24
 3569 00ac 1B6B     		ldr	r3, [r3, #48]
 3570 00ae 03F44033 		and	r3, r3, #196608
 3571 00b2 B3F5803F 		cmp	r3, #65536
 3572 00b6 0BD0     		beq	.L265
 3573 00b8 07D9     		bls	.L319
 3574 00ba B3F5003F 		cmp	r3, #131072
 3575 00be 09D0     		beq	.L268
 3576 00c0 B3F5403F 		cmp	r3, #196608
 3577 00c4 08D1     		bne	.L264
ARM GAS  /tmp/cc7iiXFd.s 			page 135


2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3578              		.loc 1 2760 0
 3579 00c6 0223     		movs	r3, #2
 3580 00c8 CAE7     		b	.L262
 3581              	.L319:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3582              		.loc 1 2760 0 discriminator 8
 3583 00ca 2BB9     		cbnz	r3, .L264
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3584              		.loc 1 2760 0
 3585 00cc 0023     		movs	r3, #0
 3586 00ce C7E7     		b	.L262
 3587              	.L265:
 3588              	.LVL316:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3589              		.loc 1 2760 0 discriminator 12
 3590 00d0 0423     		movs	r3, #4
 3591 00d2 C5E7     		b	.L262
 3592              	.LVL317:
 3593              	.L268:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3594              		.loc 1 2760 0 discriminator 13
 3595 00d4 0823     		movs	r3, #8
 3596 00d6 C3E7     		b	.L262
 3597              	.LVL318:
 3598              	.L264:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3599              		.loc 1 2760 0 discriminator 10
 3600 00d8 1023     		movs	r3, #16
 3601 00da C1E7     		b	.L262
 3602              	.LVL319:
 3603              	.L315:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3604              		.loc 1 2760 0 discriminator 15
 3605 00dc 754B     		ldr	r3, .L323+24
 3606 00de 1B6B     		ldr	r3, [r3, #48]
 3607 00e0 03F44023 		and	r3, r3, #786432
 3608 00e4 B3F5802F 		cmp	r3, #262144
 3609 00e8 0BD0     		beq	.L271
 3610 00ea 07D9     		bls	.L320
 3611 00ec B3F5002F 		cmp	r3, #524288
 3612 00f0 09D0     		beq	.L274
 3613 00f2 B3F5402F 		cmp	r3, #786432
 3614 00f6 08D1     		bne	.L270
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3615              		.loc 1 2760 0
 3616 00f8 0223     		movs	r3, #2
 3617 00fa B1E7     		b	.L262
 3618              	.L320:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3619              		.loc 1 2760 0 discriminator 15
 3620 00fc 2BB9     		cbnz	r3, .L270
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3621              		.loc 1 2760 0
 3622 00fe 0023     		movs	r3, #0
 3623 0100 AEE7     		b	.L262
 3624              	.L271:
ARM GAS  /tmp/cc7iiXFd.s 			page 136


 3625              	.LVL320:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3626              		.loc 1 2760 0 discriminator 19
 3627 0102 0423     		movs	r3, #4
 3628 0104 ACE7     		b	.L262
 3629              	.LVL321:
 3630              	.L274:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3631              		.loc 1 2760 0 discriminator 20
 3632 0106 0823     		movs	r3, #8
 3633 0108 AAE7     		b	.L262
 3634              	.LVL322:
 3635              	.L270:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3636              		.loc 1 2760 0 discriminator 17
 3637 010a 1023     		movs	r3, #16
 3638 010c A8E7     		b	.L262
 3639              	.LVL323:
 3640              	.L316:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3641              		.loc 1 2760 0 discriminator 22
 3642 010e 694B     		ldr	r3, .L323+24
 3643 0110 1B6B     		ldr	r3, [r3, #48]
 3644 0112 03F44013 		and	r3, r3, #3145728
 3645 0116 B3F5801F 		cmp	r3, #1048576
 3646 011a 0BD0     		beq	.L277
 3647 011c 07D9     		bls	.L321
 3648 011e B3F5001F 		cmp	r3, #2097152
 3649 0122 09D0     		beq	.L280
 3650 0124 B3F5401F 		cmp	r3, #3145728
 3651 0128 08D1     		bne	.L276
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3652              		.loc 1 2760 0
 3653 012a 0223     		movs	r3, #2
 3654 012c 98E7     		b	.L262
 3655              	.L321:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3656              		.loc 1 2760 0 discriminator 22
 3657 012e 2BB9     		cbnz	r3, .L276
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3658              		.loc 1 2760 0
 3659 0130 0023     		movs	r3, #0
 3660 0132 95E7     		b	.L262
 3661              	.L277:
 3662              	.LVL324:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3663              		.loc 1 2760 0 discriminator 26
 3664 0134 0423     		movs	r3, #4
 3665 0136 93E7     		b	.L262
 3666              	.LVL325:
 3667              	.L280:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3668              		.loc 1 2760 0 discriminator 27
 3669 0138 0823     		movs	r3, #8
 3670 013a 91E7     		b	.L262
 3671              	.LVL326:
 3672              	.L276:
ARM GAS  /tmp/cc7iiXFd.s 			page 137


2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3673              		.loc 1 2760 0 discriminator 24
 3674 013c 1023     		movs	r3, #16
 3675 013e 8FE7     		b	.L262
 3676              	.LVL327:
 3677              	.L317:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3678              		.loc 1 2760 0 discriminator 29
 3679 0140 5C4B     		ldr	r3, .L323+24
 3680 0142 1B6B     		ldr	r3, [r3, #48]
 3681 0144 03F44003 		and	r3, r3, #12582912
 3682 0148 B3F5800F 		cmp	r3, #4194304
 3683 014c 0BD0     		beq	.L282
 3684 014e 07D9     		bls	.L322
 3685 0150 B3F5000F 		cmp	r3, #8388608
 3686 0154 09D0     		beq	.L285
 3687 0156 B3F5400F 		cmp	r3, #12582912
 3688 015a 08D1     		bne	.L281
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3689              		.loc 1 2760 0
 3690 015c 0223     		movs	r3, #2
 3691 015e 7FE7     		b	.L262
 3692              	.L322:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3693              		.loc 1 2760 0 discriminator 29
 3694 0160 2BB9     		cbnz	r3, .L281
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3695              		.loc 1 2760 0
 3696 0162 0023     		movs	r3, #0
 3697 0164 7CE7     		b	.L262
 3698              	.L282:
 3699              	.LVL328:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3700              		.loc 1 2760 0 discriminator 33
 3701 0166 0423     		movs	r3, #4
 3702 0168 7AE7     		b	.L262
 3703              	.LVL329:
 3704              	.L285:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3705              		.loc 1 2760 0 discriminator 34
 3706 016a 0823     		movs	r3, #8
 3707 016c 78E7     		b	.L262
 3708              	.LVL330:
 3709              	.L281:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3710              		.loc 1 2760 0 discriminator 31
 3711 016e 1023     		movs	r3, #16
 3712 0170 76E7     		b	.L262
 3713              	.LVL331:
 3714              	.L302:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3715              		.loc 1 2760 0
 3716 0172 0223     		movs	r3, #2
 3717 0174 74E7     		b	.L262
 3718              	.LVL332:
 3719              	.L318:
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  /tmp/cc7iiXFd.s 			page 138


 3720              		.loc 1 2764 0 is_stmt 1
 3721 0176 082B     		cmp	r3, #8
 3722 0178 49D8     		bhi	.L308
 3723 017a DFE803F0 		tbb	[pc, r3]
 3724              	.L289:
 3725 017e 05       		.byte	(.L288-.L289)/2
 3726 017f 1E       		.byte	(.L290-.L289)/2
 3727 0180 29       		.byte	(.L291-.L289)/2
 3728 0181 48       		.byte	(.L308-.L289)/2
 3729 0182 34       		.byte	(.L292-.L289)/2
 3730 0183 48       		.byte	(.L308-.L289)/2
 3731 0184 48       		.byte	(.L308-.L289)/2
 3732 0185 48       		.byte	(.L308-.L289)/2
 3733 0186 3F       		.byte	(.L293-.L289)/2
 3734 0187 00       		.p2align 1
 3735              	.L288:
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 3736              		.loc 1 2767 0
 3737 0188 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3738              	.LVL333:
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3739              		.loc 1 2768 0
 3740 018c 6268     		ldr	r2, [r4, #4]
 3741 018e 5308     		lsrs	r3, r2, #1
 3742 0190 03EB4003 		add	r3, r3, r0, lsl #1
 3743 0194 B3FBF2F3 		udiv	r3, r3, r2
 3744 0198 9BB2     		uxth	r3, r3
 3745              	.LVL334:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3746              		.loc 1 2718 0
 3747 019a 0020     		movs	r0, #0
 3748              	.LVL335:
 3749              	.L287:
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3750              		.loc 1 2790 0
 3751 019c A3F11001 		sub	r1, r3, #16
 3752 01a0 4FF6EF72 		movw	r2, #65519
 3753 01a4 9142     		cmp	r1, r2
 3754 01a6 75D8     		bhi	.L309
2792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3755              		.loc 1 2792 0
 3756 01a8 9AB2     		uxth	r2, r3
 3757 01aa 22F00F02 		bic	r2, r2, #15
 3758              	.LVL336:
2793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 3759              		.loc 1 2793 0
 3760 01ae C3F34203 		ubfx	r3, r3, #1, #3
 3761              	.LVL337:
 3762 01b2 1343     		orrs	r3, r3, r2
 3763              	.LVL338:
2794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3764              		.loc 1 2794 0
 3765 01b4 2268     		ldr	r2, [r4]
 3766 01b6 D360     		str	r3, [r2, #12]
 3767 01b8 3DE0     		b	.L294
 3768              	.LVL339:
 3769              	.L290:
ARM GAS  /tmp/cc7iiXFd.s 			page 139


2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 3770              		.loc 1 2771 0
 3771 01ba FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3772              	.LVL340:
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3773              		.loc 1 2772 0
 3774 01be 6268     		ldr	r2, [r4, #4]
 3775 01c0 5308     		lsrs	r3, r2, #1
 3776 01c2 03EB4003 		add	r3, r3, r0, lsl #1
 3777 01c6 B3FBF2F3 		udiv	r3, r3, r2
 3778 01ca 9BB2     		uxth	r3, r3
 3779              	.LVL341:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3780              		.loc 1 2718 0
 3781 01cc 0020     		movs	r0, #0
 3782              	.LVL342:
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3783              		.loc 1 2773 0
 3784 01ce E5E7     		b	.L287
 3785              	.LVL343:
 3786              	.L291:
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3787              		.loc 1 2775 0
 3788 01d0 6268     		ldr	r2, [r4, #4]
 3789 01d2 5308     		lsrs	r3, r2, #1
 3790              	.LVL344:
 3791 01d4 03F57403 		add	r3, r3, #15990784
 3792 01d8 03F51053 		add	r3, r3, #9216
 3793 01dc B3FBF2F3 		udiv	r3, r3, r2
 3794 01e0 9BB2     		uxth	r3, r3
 3795              	.LVL345:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3796              		.loc 1 2718 0
 3797 01e2 0020     		movs	r0, #0
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3798              		.loc 1 2776 0
 3799 01e4 DAE7     		b	.L287
 3800              	.LVL346:
 3801              	.L292:
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 3802              		.loc 1 2778 0
 3803 01e6 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3804              	.LVL347:
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3805              		.loc 1 2779 0
 3806 01ea 6268     		ldr	r2, [r4, #4]
 3807 01ec 5308     		lsrs	r3, r2, #1
 3808 01ee 03EB4003 		add	r3, r3, r0, lsl #1
 3809 01f2 B3FBF2F3 		udiv	r3, r3, r2
 3810 01f6 9BB2     		uxth	r3, r3
 3811              	.LVL348:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3812              		.loc 1 2718 0
 3813 01f8 0020     		movs	r0, #0
 3814              	.LVL349:
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3815              		.loc 1 2780 0
ARM GAS  /tmp/cc7iiXFd.s 			page 140


 3816 01fa CFE7     		b	.L287
 3817              	.LVL350:
 3818              	.L293:
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3819              		.loc 1 2782 0
 3820 01fc 6268     		ldr	r2, [r4, #4]
 3821 01fe 5308     		lsrs	r3, r2, #1
 3822              	.LVL351:
 3823 0200 03F58033 		add	r3, r3, #65536
 3824 0204 B3FBF2F3 		udiv	r3, r3, r2
 3825 0208 9BB2     		uxth	r3, r3
 3826              	.LVL352:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3827              		.loc 1 2718 0
 3828 020a 0020     		movs	r0, #0
2783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
 3829              		.loc 1 2783 0
 3830 020c C6E7     		b	.L287
 3831              	.LVL353:
 3832              	.L308:
2785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3833              		.loc 1 2785 0
 3834 020e 0120     		movs	r0, #1
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3835              		.loc 1 2717 0
 3836 0210 0023     		movs	r3, #0
 3837              	.LVL354:
 3838 0212 C3E7     		b	.L287
 3839              	.LVL355:
 3840              	.L296:
2806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 3841              		.loc 1 2806 0
 3842 0214 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3843              	.LVL356:
2807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3844              		.loc 1 2807 0
 3845 0218 6268     		ldr	r2, [r4, #4]
 3846 021a 00EB5203 		add	r3, r0, r2, lsr #1
 3847 021e B3FBF2F3 		udiv	r3, r3, r2
 3848 0222 9BB2     		uxth	r3, r3
 3849              	.LVL357:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3850              		.loc 1 2718 0
 3851 0224 0020     		movs	r0, #0
 3852              	.LVL358:
 3853              	.L295:
2829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3854              		.loc 1 2829 0
 3855 0226 A3F11001 		sub	r1, r3, #16
 3856 022a 4FF6EF72 		movw	r2, #65519
 3857 022e 9142     		cmp	r1, r2
 3858 0230 32D8     		bhi	.L311
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3859              		.loc 1 2831 0
 3860 0232 2268     		ldr	r2, [r4]
 3861 0234 D360     		str	r3, [r2, #12]
 3862              	.LVL359:
ARM GAS  /tmp/cc7iiXFd.s 			page 141


 3863              	.L294:
2841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxISR = NULL;
 3864              		.loc 1 2841 0
 3865 0236 0023     		movs	r3, #0
 3866 0238 2366     		str	r3, [r4, #96]
2842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3867              		.loc 1 2842 0
 3868 023a 6366     		str	r3, [r4, #100]
2845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3869              		.loc 1 2845 0
 3870 023c 10BD     		pop	{r4, pc}
 3871              	.LVL360:
 3872              	.L298:
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 3873              		.loc 1 2810 0
 3874 023e FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3875              	.LVL361:
2811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3876              		.loc 1 2811 0
 3877 0242 6268     		ldr	r2, [r4, #4]
 3878 0244 00EB5203 		add	r3, r0, r2, lsr #1
 3879 0248 B3FBF2F3 		udiv	r3, r3, r2
 3880 024c 9BB2     		uxth	r3, r3
 3881              	.LVL362:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3882              		.loc 1 2718 0
 3883 024e 0020     		movs	r0, #0
 3884              	.LVL363:
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3885              		.loc 1 2812 0
 3886 0250 E9E7     		b	.L295
 3887              	.LVL364:
 3888              	.L299:
2814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3889              		.loc 1 2814 0
 3890 0252 6268     		ldr	r2, [r4, #4]
 3891 0254 5308     		lsrs	r3, r2, #1
 3892              	.LVL365:
 3893 0256 03F5F403 		add	r3, r3, #7995392
 3894 025a 03F59053 		add	r3, r3, #4608
 3895 025e B3FBF2F3 		udiv	r3, r3, r2
 3896 0262 9BB2     		uxth	r3, r3
 3897              	.LVL366:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3898              		.loc 1 2718 0
 3899 0264 0020     		movs	r0, #0
2815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3900              		.loc 1 2815 0
 3901 0266 DEE7     		b	.L295
 3902              	.LVL367:
 3903              	.L300:
2817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 3904              		.loc 1 2817 0
 3905 0268 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3906              	.LVL368:
2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3907              		.loc 1 2818 0
ARM GAS  /tmp/cc7iiXFd.s 			page 142


 3908 026c 6268     		ldr	r2, [r4, #4]
 3909 026e 00EB5203 		add	r3, r0, r2, lsr #1
 3910 0272 B3FBF2F3 		udiv	r3, r3, r2
 3911 0276 9BB2     		uxth	r3, r3
 3912              	.LVL369:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3913              		.loc 1 2718 0
 3914 0278 0020     		movs	r0, #0
 3915              	.LVL370:
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3916              		.loc 1 2819 0
 3917 027a D4E7     		b	.L295
 3918              	.LVL371:
 3919              	.L301:
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3920              		.loc 1 2821 0
 3921 027c 6268     		ldr	r2, [r4, #4]
 3922 027e 5308     		lsrs	r3, r2, #1
 3923              	.LVL372:
 3924 0280 03F50043 		add	r3, r3, #32768
 3925 0284 B3FBF2F3 		udiv	r3, r3, r2
 3926 0288 9BB2     		uxth	r3, r3
 3927              	.LVL373:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3928              		.loc 1 2718 0
 3929 028a 0020     		movs	r0, #0
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
 3930              		.loc 1 2822 0
 3931 028c CBE7     		b	.L295
 3932              	.LVL374:
 3933              	.L310:
2824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3934              		.loc 1 2824 0
 3935 028e 0120     		movs	r0, #1
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3936              		.loc 1 2717 0
 3937 0290 0023     		movs	r3, #0
 3938              	.LVL375:
 3939 0292 C8E7     		b	.L295
 3940              	.LVL376:
 3941              	.L309:
2798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3942              		.loc 1 2798 0
 3943 0294 0120     		movs	r0, #1
 3944              	.LVL377:
 3945 0296 CEE7     		b	.L294
 3946              	.LVL378:
 3947              	.L311:
2835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3948              		.loc 1 2835 0
 3949 0298 0120     		movs	r0, #1
 3950              	.LVL379:
 3951 029a CCE7     		b	.L294
 3952              	.L324:
 3953              		.align	2
 3954              	.L323:
 3955 029c F369FFEF 		.word	-268473869
ARM GAS  /tmp/cc7iiXFd.s 			page 143


 3956 02a0 00380140 		.word	1073821696
 3957 02a4 00440040 		.word	1073759232
 3958 02a8 00480040 		.word	1073760256
 3959 02ac 004C0040 		.word	1073761280
 3960 02b0 00500040 		.word	1073762304
 3961 02b4 00100240 		.word	1073876992
 3962              		.cfi_endproc
 3963              	.LFE172:
 3965              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3966              		.align	1
 3967              		.global	UART_AdvFeatureConfig
 3968              		.syntax unified
 3969              		.thumb
 3970              		.thumb_func
 3971              		.fpu fpv4-sp-d16
 3973              	UART_AdvFeatureConfig:
 3974              	.LFB173:
2853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3975              		.loc 1 2853 0
 3976              		.cfi_startproc
 3977              		@ args = 0, pretend = 0, frame = 0
 3978              		@ frame_needed = 0, uses_anonymous_args = 0
 3979              		@ link register save eliminated.
 3980              	.LVL380:
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3981              		.loc 1 2858 0
 3982 0000 436A     		ldr	r3, [r0, #36]
 3983 0002 13F0010F 		tst	r3, #1
 3984 0006 06D0     		beq	.L326
2861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3985              		.loc 1 2861 0
 3986 0008 0268     		ldr	r2, [r0]
 3987 000a 5368     		ldr	r3, [r2, #4]
 3988 000c 23F40033 		bic	r3, r3, #131072
 3989 0010 816A     		ldr	r1, [r0, #40]
 3990 0012 0B43     		orrs	r3, r3, r1
 3991 0014 5360     		str	r3, [r2, #4]
 3992              	.L326:
2865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3993              		.loc 1 2865 0
 3994 0016 436A     		ldr	r3, [r0, #36]
 3995 0018 13F0020F 		tst	r3, #2
 3996 001c 06D0     		beq	.L327
2868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3997              		.loc 1 2868 0
 3998 001e 0268     		ldr	r2, [r0]
 3999 0020 5368     		ldr	r3, [r2, #4]
 4000 0022 23F48033 		bic	r3, r3, #65536
 4001 0026 C16A     		ldr	r1, [r0, #44]
 4002 0028 0B43     		orrs	r3, r3, r1
 4003 002a 5360     		str	r3, [r2, #4]
 4004              	.L327:
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4005              		.loc 1 2872 0
 4006 002c 436A     		ldr	r3, [r0, #36]
 4007 002e 13F0040F 		tst	r3, #4
 4008 0032 06D0     		beq	.L328
ARM GAS  /tmp/cc7iiXFd.s 			page 144


2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4009              		.loc 1 2875 0
 4010 0034 0268     		ldr	r2, [r0]
 4011 0036 5368     		ldr	r3, [r2, #4]
 4012 0038 23F48023 		bic	r3, r3, #262144
 4013 003c 016B     		ldr	r1, [r0, #48]
 4014 003e 0B43     		orrs	r3, r3, r1
 4015 0040 5360     		str	r3, [r2, #4]
 4016              	.L328:
2879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4017              		.loc 1 2879 0
 4018 0042 436A     		ldr	r3, [r0, #36]
 4019 0044 13F0080F 		tst	r3, #8
 4020 0048 06D0     		beq	.L329
2882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4021              		.loc 1 2882 0
 4022 004a 0268     		ldr	r2, [r0]
 4023 004c 5368     		ldr	r3, [r2, #4]
 4024 004e 23F40043 		bic	r3, r3, #32768
 4025 0052 416B     		ldr	r1, [r0, #52]
 4026 0054 0B43     		orrs	r3, r3, r1
 4027 0056 5360     		str	r3, [r2, #4]
 4028              	.L329:
2886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4029              		.loc 1 2886 0
 4030 0058 436A     		ldr	r3, [r0, #36]
 4031 005a 13F0100F 		tst	r3, #16
 4032 005e 06D0     		beq	.L330
2889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4033              		.loc 1 2889 0
 4034 0060 0268     		ldr	r2, [r0]
 4035 0062 9368     		ldr	r3, [r2, #8]
 4036 0064 23F48053 		bic	r3, r3, #4096
 4037 0068 816B     		ldr	r1, [r0, #56]
 4038 006a 0B43     		orrs	r3, r3, r1
 4039 006c 9360     		str	r3, [r2, #8]
 4040              	.L330:
2893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4041              		.loc 1 2893 0
 4042 006e 436A     		ldr	r3, [r0, #36]
 4043 0070 13F0200F 		tst	r3, #32
 4044 0074 06D0     		beq	.L331
2896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4045              		.loc 1 2896 0
 4046 0076 0268     		ldr	r2, [r0]
 4047 0078 9368     		ldr	r3, [r2, #8]
 4048 007a 23F40053 		bic	r3, r3, #8192
 4049 007e C16B     		ldr	r1, [r0, #60]
 4050 0080 0B43     		orrs	r3, r3, r1
 4051 0082 9360     		str	r3, [r2, #8]
 4052              	.L331:
2900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4053              		.loc 1 2900 0
 4054 0084 436A     		ldr	r3, [r0, #36]
 4055 0086 13F0400F 		tst	r3, #64
 4056 008a 0AD0     		beq	.L332
2904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
ARM GAS  /tmp/cc7iiXFd.s 			page 145


 4057              		.loc 1 2904 0
 4058 008c 0268     		ldr	r2, [r0]
 4059 008e 5368     		ldr	r3, [r2, #4]
 4060 0090 23F48013 		bic	r3, r3, #1048576
 4061 0094 016C     		ldr	r1, [r0, #64]
 4062 0096 0B43     		orrs	r3, r3, r1
 4063 0098 5360     		str	r3, [r2, #4]
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4064              		.loc 1 2906 0
 4065 009a 036C     		ldr	r3, [r0, #64]
 4066 009c B3F5801F 		cmp	r3, #1048576
 4067 00a0 0BD0     		beq	.L334
 4068              	.L332:
2914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4069              		.loc 1 2914 0
 4070 00a2 436A     		ldr	r3, [r0, #36]
 4071 00a4 13F0800F 		tst	r3, #128
 4072 00a8 06D0     		beq	.L325
2917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4073              		.loc 1 2917 0
 4074 00aa 0268     		ldr	r2, [r0]
 4075 00ac 5368     		ldr	r3, [r2, #4]
 4076 00ae 23F40023 		bic	r3, r3, #524288
 4077 00b2 816C     		ldr	r1, [r0, #72]
 4078 00b4 0B43     		orrs	r3, r3, r1
 4079 00b6 5360     		str	r3, [r2, #4]
 4080              	.L325:
 4081 00b8 7047     		bx	lr
 4082              	.L334:
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4083              		.loc 1 2909 0
 4084 00ba 0268     		ldr	r2, [r0]
 4085 00bc 5368     		ldr	r3, [r2, #4]
 4086 00be 23F4C003 		bic	r3, r3, #6291456
 4087 00c2 416C     		ldr	r1, [r0, #68]
 4088 00c4 0B43     		orrs	r3, r3, r1
 4089 00c6 5360     		str	r3, [r2, #4]
 4090 00c8 EBE7     		b	.L332
 4091              		.cfi_endproc
 4092              	.LFE173:
 4094              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 4095              		.align	1
 4096              		.global	UART_WaitOnFlagUntilTimeout
 4097              		.syntax unified
 4098              		.thumb
 4099              		.thumb_func
 4100              		.fpu fpv4-sp-d16
 4102              	UART_WaitOnFlagUntilTimeout:
 4103              	.LFB175:
2978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
 4104              		.loc 1 2978 0
 4105              		.cfi_startproc
 4106              		@ args = 4, pretend = 0, frame = 0
 4107              		@ frame_needed = 0, uses_anonymous_args = 0
 4108              	.LVL381:
 4109 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4110              	.LCFI30:
ARM GAS  /tmp/cc7iiXFd.s 			page 146


 4111              		.cfi_def_cfa_offset 24
 4112              		.cfi_offset 4, -24
 4113              		.cfi_offset 5, -20
 4114              		.cfi_offset 6, -16
 4115              		.cfi_offset 7, -12
 4116              		.cfi_offset 8, -8
 4117              		.cfi_offset 14, -4
 4118 0004 0446     		mov	r4, r0
 4119 0006 0F46     		mov	r7, r1
 4120 0008 1646     		mov	r6, r2
 4121 000a 9846     		mov	r8, r3
 4122 000c 069D     		ldr	r5, [sp, #24]
 4123              	.LVL382:
 4124              	.L337:
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4125              		.loc 1 2980 0
 4126 000e 2368     		ldr	r3, [r4]
 4127 0010 DB69     		ldr	r3, [r3, #28]
 4128 0012 37EA0303 		bics	r3, r7, r3
 4129 0016 0CBF     		ite	eq
 4130 0018 0123     		moveq	r3, #1
 4131 001a 0023     		movne	r3, #0
 4132 001c B342     		cmp	r3, r6
 4133 001e 3CD1     		bne	.L343
2983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4134              		.loc 1 2983 0
 4135 0020 B5F1FF3F 		cmp	r5, #-1
 4136 0024 F3D0     		beq	.L337
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4137              		.loc 1 2985 0
 4138 0026 FFF7FEFF 		bl	HAL_GetTick
 4139              	.LVL383:
 4140 002a A0EB0800 		sub	r0, r0, r8
 4141 002e 8542     		cmp	r5, r0
 4142 0030 20D3     		bcc	.L338
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4143              		.loc 1 2985 0 is_stmt 0 discriminator 1
 4144 0032 FDB1     		cbz	r5, .L338
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4145              		.loc 1 2999 0 is_stmt 1
 4146 0034 2368     		ldr	r3, [r4]
 4147 0036 1A68     		ldr	r2, [r3]
 4148 0038 12F0040F 		tst	r2, #4
 4149 003c E7D0     		beq	.L337
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 4150              		.loc 1 3001 0
 4151 003e DA69     		ldr	r2, [r3, #28]
 4152 0040 12F4006F 		tst	r2, #2048
 4153 0044 E3D0     		beq	.L337
3004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
 4154              		.loc 1 3004 0
 4155 0046 4FF40062 		mov	r2, #2048
 4156 004a 1A62     		str	r2, [r3, #32]
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4157              		.loc 1 3007 0
 4158 004c 2268     		ldr	r2, [r4]
 4159 004e 1368     		ldr	r3, [r2]
ARM GAS  /tmp/cc7iiXFd.s 			page 147


 4160 0050 23F4D073 		bic	r3, r3, #416
 4161 0054 1360     		str	r3, [r2]
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4162              		.loc 1 3008 0
 4163 0056 2268     		ldr	r2, [r4]
 4164 0058 9368     		ldr	r3, [r2, #8]
 4165 005a 23F00103 		bic	r3, r3, #1
 4166 005e 9360     		str	r3, [r2, #8]
3010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 4167              		.loc 1 3010 0
 4168 0060 2023     		movs	r3, #32
 4169 0062 6367     		str	r3, [r4, #116]
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 4170              		.loc 1 3011 0
 4171 0064 A367     		str	r3, [r4, #120]
3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
 4172              		.loc 1 3012 0
 4173 0066 E367     		str	r3, [r4, #124]
3015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
 4174              		.loc 1 3015 0
 4175 0068 0023     		movs	r3, #0
 4176 006a 84F87030 		strb	r3, [r4, #112]
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 4177              		.loc 1 3017 0
 4178 006e 0320     		movs	r0, #3
 4179 0070 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4180              	.LVL384:
 4181              	.L338:
2988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4182              		.loc 1 2988 0
 4183 0074 2268     		ldr	r2, [r4]
 4184 0076 1368     		ldr	r3, [r2]
 4185 0078 23F4D073 		bic	r3, r3, #416
 4186 007c 1360     		str	r3, [r2]
2989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4187              		.loc 1 2989 0
 4188 007e 2268     		ldr	r2, [r4]
 4189 0080 9368     		ldr	r3, [r2, #8]
 4190 0082 23F00103 		bic	r3, r3, #1
 4191 0086 9360     		str	r3, [r2, #8]
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 4192              		.loc 1 2991 0
 4193 0088 2023     		movs	r3, #32
 4194 008a 6367     		str	r3, [r4, #116]
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4195              		.loc 1 2992 0
 4196 008c A367     		str	r3, [r4, #120]
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4197              		.loc 1 2994 0
 4198 008e 0023     		movs	r3, #0
 4199 0090 84F87030 		strb	r3, [r4, #112]
2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4200              		.loc 1 2996 0
 4201 0094 0320     		movs	r0, #3
 4202 0096 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4203              	.LVL385:
 4204              	.L343:
ARM GAS  /tmp/cc7iiXFd.s 			page 148


3022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4205              		.loc 1 3022 0
 4206 009a 0020     		movs	r0, #0
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4207              		.loc 1 3023 0
 4208 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4209              		.cfi_endproc
 4210              	.LFE175:
 4212              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 4213              		.align	1
 4214              		.global	HAL_UART_Transmit
 4215              		.syntax unified
 4216              		.thumb
 4217              		.thumb_func
 4218              		.fpu fpv4-sp-d16
 4220              	HAL_UART_Transmit:
 4221              	.LFB137:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4222              		.loc 1 1005 0
 4223              		.cfi_startproc
 4224              		@ args = 0, pretend = 0, frame = 0
 4225              		@ frame_needed = 0, uses_anonymous_args = 0
 4226              	.LVL386:
 4227 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 4228              	.LCFI31:
 4229              		.cfi_def_cfa_offset 24
 4230              		.cfi_offset 4, -24
 4231              		.cfi_offset 5, -20
 4232              		.cfi_offset 6, -16
 4233              		.cfi_offset 7, -12
 4234              		.cfi_offset 8, -8
 4235              		.cfi_offset 14, -4
 4236 0004 82B0     		sub	sp, sp, #8
 4237              	.LCFI32:
 4238              		.cfi_def_cfa_offset 32
 4239 0006 1E46     		mov	r6, r3
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4240              		.loc 1 1011 0
 4241 0008 436F     		ldr	r3, [r0, #116]
 4242              	.LVL387:
 4243 000a 202B     		cmp	r3, #32
 4244 000c 04D0     		beq	.L360
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4245              		.loc 1 1074 0
 4246 000e 0223     		movs	r3, #2
 4247              	.LVL388:
 4248              	.L345:
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4249              		.loc 1 1076 0
 4250 0010 1846     		mov	r0, r3
 4251 0012 02B0     		add	sp, sp, #8
 4252              	.LCFI33:
 4253              		.cfi_remember_state
 4254              		.cfi_def_cfa_offset 24
 4255              		@ sp needed
 4256 0014 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4257              	.LVL389:
ARM GAS  /tmp/cc7iiXFd.s 			page 149


 4258              	.L360:
 4259              	.LCFI34:
 4260              		.cfi_restore_state
 4261 0018 0446     		mov	r4, r0
 4262 001a 0D46     		mov	r5, r1
 4263 001c 9046     		mov	r8, r2
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4264              		.loc 1 1013 0
 4265 001e 0029     		cmp	r1, #0
 4266 0020 55D0     		beq	.L352
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4267              		.loc 1 1013 0 is_stmt 0 discriminator 1
 4268 0022 002A     		cmp	r2, #0
 4269 0024 55D0     		beq	.L353
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4270              		.loc 1 1018 0 is_stmt 1
 4271 0026 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4272 002a 012B     		cmp	r3, #1
 4273 002c 01D1     		bne	.L361
 4274 002e 0223     		movs	r3, #2
 4275 0030 EEE7     		b	.L345
 4276              	.L361:
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4277              		.loc 1 1018 0 is_stmt 0 discriminator 2
 4278 0032 0123     		movs	r3, #1
 4279 0034 80F87030 		strb	r3, [r0, #112]
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 4280              		.loc 1 1020 0 is_stmt 1 discriminator 2
 4281 0038 0023     		movs	r3, #0
 4282 003a C367     		str	r3, [r0, #124]
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4283              		.loc 1 1021 0 discriminator 2
 4284 003c 2123     		movs	r3, #33
 4285 003e 4367     		str	r3, [r0, #116]
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4286              		.loc 1 1024 0 discriminator 2
 4287 0040 FFF7FEFF 		bl	HAL_GetTick
 4288              	.LVL390:
 4289 0044 0746     		mov	r7, r0
 4290              	.LVL391:
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 4291              		.loc 1 1026 0 discriminator 2
 4292 0046 A4F85080 		strh	r8, [r4, #80]	@ movhi
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4293              		.loc 1 1027 0 discriminator 2
 4294 004a A4F85280 		strh	r8, [r4, #82]	@ movhi
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4295              		.loc 1 1030 0 discriminator 2
 4296 004e A368     		ldr	r3, [r4, #8]
 4297 0050 B3F5805F 		cmp	r3, #4096
 4298 0054 02D0     		beq	.L362
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4299              		.loc 1 1038 0
 4300 0056 4FF00008 		mov	r8, #0
 4301 005a 14E0     		b	.L347
 4302              	.L362:
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  /tmp/cc7iiXFd.s 			page 150


 4303              		.loc 1 1030 0 discriminator 1
 4304 005c 2369     		ldr	r3, [r4, #16]
 4305 005e 13B1     		cbz	r3, .L356
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4306              		.loc 1 1038 0
 4307 0060 4FF00008 		mov	r8, #0
 4308 0064 0FE0     		b	.L347
 4309              	.L356:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4310              		.loc 1 1033 0
 4311 0066 A846     		mov	r8, r5
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 4312              		.loc 1 1032 0
 4313 0068 0025     		movs	r5, #0
 4314              	.LVL392:
 4315 006a 0CE0     		b	.L347
 4316              	.LVL393:
 4317              	.L364:
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata16bits++;
 4318              		.loc 1 1049 0
 4319 006c 2268     		ldr	r2, [r4]
 4320 006e 38F8023B 		ldrh	r3, [r8], #2
 4321              	.LVL394:
 4322 0072 C3F30803 		ubfx	r3, r3, #0, #9
 4323 0076 1385     		strh	r3, [r2, #40]	@ movhi
 4324              	.LVL395:
 4325              	.L349:
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4326              		.loc 1 1057 0
 4327 0078 B4F85230 		ldrh	r3, [r4, #82]
 4328 007c 9BB2     		uxth	r3, r3
 4329 007e 013B     		subs	r3, r3, #1
 4330 0080 9BB2     		uxth	r3, r3
 4331 0082 A4F85230 		strh	r3, [r4, #82]	@ movhi
 4332              	.LVL396:
 4333              	.L347:
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4334              		.loc 1 1041 0
 4335 0086 B4F85230 		ldrh	r3, [r4, #82]
 4336 008a 9BB2     		uxth	r3, r3
 4337 008c 73B1     		cbz	r3, .L363
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4338              		.loc 1 1043 0
 4339 008e 0096     		str	r6, [sp]
 4340 0090 3B46     		mov	r3, r7
 4341 0092 0022     		movs	r2, #0
 4342 0094 8021     		movs	r1, #128
 4343 0096 2046     		mov	r0, r4
 4344 0098 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4345              	.LVL397:
 4346 009c D8B9     		cbnz	r0, .L357
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4347              		.loc 1 1047 0
 4348 009e 002D     		cmp	r5, #0
 4349 00a0 E4D0     		beq	.L364
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata8bits++;
 4350              		.loc 1 1054 0
ARM GAS  /tmp/cc7iiXFd.s 			page 151


 4351 00a2 2368     		ldr	r3, [r4]
 4352 00a4 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 4353              	.LVL398:
 4354 00a8 1A85     		strh	r2, [r3, #40]	@ movhi
 4355              	.LVL399:
 4356 00aa E5E7     		b	.L349
 4357              	.L363:
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4358              		.loc 1 1060 0
 4359 00ac 0096     		str	r6, [sp]
 4360 00ae 3B46     		mov	r3, r7
 4361 00b0 0022     		movs	r2, #0
 4362 00b2 4021     		movs	r1, #64
 4363 00b4 2046     		mov	r0, r4
 4364 00b6 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4365              	.LVL400:
 4366 00ba 0346     		mov	r3, r0
 4367 00bc 08B1     		cbz	r0, .L365
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4368              		.loc 1 1062 0
 4369 00be 0323     		movs	r3, #3
 4370 00c0 A6E7     		b	.L345
 4371              	.L365:
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4372              		.loc 1 1066 0
 4373 00c2 2022     		movs	r2, #32
 4374 00c4 6267     		str	r2, [r4, #116]
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4375              		.loc 1 1068 0
 4376 00c6 0022     		movs	r2, #0
 4377 00c8 84F87020 		strb	r2, [r4, #112]
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4378              		.loc 1 1070 0
 4379 00cc A0E7     		b	.L345
 4380              	.LVL401:
 4381              	.L352:
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4382              		.loc 1 1015 0
 4383 00ce 0123     		movs	r3, #1
 4384 00d0 9EE7     		b	.L345
 4385              	.L353:
 4386 00d2 0123     		movs	r3, #1
 4387 00d4 9CE7     		b	.L345
 4388              	.LVL402:
 4389              	.L357:
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4390              		.loc 1 1045 0
 4391 00d6 0323     		movs	r3, #3
 4392 00d8 9AE7     		b	.L345
 4393              		.cfi_endproc
 4394              	.LFE137:
 4396              		.section	.text.HAL_UART_Receive,"ax",%progbits
 4397              		.align	1
 4398              		.global	HAL_UART_Receive
 4399              		.syntax unified
 4400              		.thumb
 4401              		.thumb_func
ARM GAS  /tmp/cc7iiXFd.s 			page 152


 4402              		.fpu fpv4-sp-d16
 4404              	HAL_UART_Receive:
 4405              	.LFB138:
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4406              		.loc 1 1090 0
 4407              		.cfi_startproc
 4408              		@ args = 0, pretend = 0, frame = 0
 4409              		@ frame_needed = 0, uses_anonymous_args = 0
 4410              	.LVL403:
 4411 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4412              	.LCFI35:
 4413              		.cfi_def_cfa_offset 28
 4414              		.cfi_offset 4, -28
 4415              		.cfi_offset 5, -24
 4416              		.cfi_offset 6, -20
 4417              		.cfi_offset 7, -16
 4418              		.cfi_offset 8, -12
 4419              		.cfi_offset 9, -8
 4420              		.cfi_offset 14, -4
 4421 0004 83B0     		sub	sp, sp, #12
 4422              	.LCFI36:
 4423              		.cfi_def_cfa_offset 40
 4424 0006 1E46     		mov	r6, r3
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4425              		.loc 1 1097 0
 4426 0008 836F     		ldr	r3, [r0, #120]
 4427              	.LVL404:
 4428 000a 202B     		cmp	r3, #32
 4429 000c 03D0     		beq	.L388
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4430              		.loc 1 1160 0
 4431 000e 0220     		movs	r0, #2
 4432              	.LVL405:
 4433              	.L367:
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4434              		.loc 1 1162 0
 4435 0010 03B0     		add	sp, sp, #12
 4436              	.LCFI37:
 4437              		.cfi_remember_state
 4438              		.cfi_def_cfa_offset 28
 4439              		@ sp needed
 4440 0012 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4441              	.LVL406:
 4442              	.L388:
 4443              	.LCFI38:
 4444              		.cfi_restore_state
 4445 0016 0446     		mov	r4, r0
 4446 0018 0D46     		mov	r5, r1
 4447 001a 9046     		mov	r8, r2
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4448              		.loc 1 1099 0
 4449 001c 0029     		cmp	r1, #0
 4450 001e 78D0     		beq	.L381
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4451              		.loc 1 1099 0 is_stmt 0 discriminator 1
 4452 0020 002A     		cmp	r2, #0
 4453 0022 78D0     		beq	.L382
ARM GAS  /tmp/cc7iiXFd.s 			page 153


1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4454              		.loc 1 1104 0 is_stmt 1
 4455 0024 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4456 0028 012B     		cmp	r3, #1
 4457 002a 01D1     		bne	.L389
 4458 002c 0220     		movs	r0, #2
 4459              	.LVL407:
 4460 002e EFE7     		b	.L367
 4461              	.LVL408:
 4462              	.L389:
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4463              		.loc 1 1104 0 is_stmt 0 discriminator 2
 4464 0030 0123     		movs	r3, #1
 4465 0032 80F87030 		strb	r3, [r0, #112]
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4466              		.loc 1 1106 0 is_stmt 1 discriminator 2
 4467 0036 0023     		movs	r3, #0
 4468 0038 C367     		str	r3, [r0, #124]
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4469              		.loc 1 1107 0 discriminator 2
 4470 003a 2223     		movs	r3, #34
 4471 003c 8367     		str	r3, [r0, #120]
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4472              		.loc 1 1110 0 discriminator 2
 4473 003e FFF7FEFF 		bl	HAL_GetTick
 4474              	.LVL409:
 4475 0042 0746     		mov	r7, r0
 4476              	.LVL410:
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 4477              		.loc 1 1112 0 discriminator 2
 4478 0044 A4F85880 		strh	r8, [r4, #88]	@ movhi
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4479              		.loc 1 1113 0 discriminator 2
 4480 0048 A4F85A80 		strh	r8, [r4, #90]	@ movhi
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4481              		.loc 1 1116 0 discriminator 2
 4482 004c A368     		ldr	r3, [r4, #8]
 4483 004e B3F5805F 		cmp	r3, #4096
 4484 0052 06D0     		beq	.L390
 4485 0054 A3B9     		cbnz	r3, .L371
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4486              		.loc 1 1116 0 is_stmt 0 discriminator 5
 4487 0056 2269     		ldr	r2, [r4, #16]
 4488 0058 72B9     		cbnz	r2, .L372
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4489              		.loc 1 1116 0 discriminator 7
 4490 005a FF22     		movs	r2, #255
 4491 005c A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4492 0060 14E0     		b	.L370
 4493              	.L390:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4494              		.loc 1 1116 0 discriminator 1
 4495 0062 2269     		ldr	r2, [r4, #16]
 4496 0064 22B9     		cbnz	r2, .L369
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4497              		.loc 1 1116 0 discriminator 3
 4498 0066 40F2FF12 		movw	r2, #511
ARM GAS  /tmp/cc7iiXFd.s 			page 154


 4499 006a A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4500 006e 0DE0     		b	.L370
 4501              	.L369:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4502              		.loc 1 1116 0 discriminator 4
 4503 0070 FF22     		movs	r2, #255
 4504 0072 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4505 0076 09E0     		b	.L370
 4506              	.L372:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4507              		.loc 1 1116 0 discriminator 8
 4508 0078 7F22     		movs	r2, #127
 4509 007a A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4510 007e 05E0     		b	.L370
 4511              	.L371:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4512              		.loc 1 1116 0 discriminator 6
 4513 0080 B3F1805F 		cmp	r3, #268435456
 4514 0084 0AD0     		beq	.L391
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4515              		.loc 1 1116 0 discriminator 10
 4516 0086 0022     		movs	r2, #0
 4517 0088 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4518              	.L370:
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4519              		.loc 1 1117 0 is_stmt 1
 4520 008c B4F85C80 		ldrh	r8, [r4, #92]
 4521              	.LVL411:
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4522              		.loc 1 1120 0
 4523 0090 B3F5805F 		cmp	r3, #4096
 4524 0094 0CD0     		beq	.L392
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4525              		.loc 1 1128 0
 4526 0096 4FF00009 		mov	r9, #0
 4527 009a 1EE0     		b	.L376
 4528              	.LVL412:
 4529              	.L391:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4530              		.loc 1 1116 0 discriminator 9
 4531 009c 2269     		ldr	r2, [r4, #16]
 4532 009e 1AB9     		cbnz	r2, .L374
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4533              		.loc 1 1116 0 is_stmt 0 discriminator 11
 4534 00a0 7F22     		movs	r2, #127
 4535 00a2 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4536 00a6 F1E7     		b	.L370
 4537              	.L374:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4538              		.loc 1 1116 0 discriminator 12
 4539 00a8 3F22     		movs	r2, #63
 4540 00aa A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4541 00ae EDE7     		b	.L370
 4542              	.LVL413:
 4543              	.L392:
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4544              		.loc 1 1120 0 is_stmt 1 discriminator 1
ARM GAS  /tmp/cc7iiXFd.s 			page 155


 4545 00b0 2369     		ldr	r3, [r4, #16]
 4546 00b2 13B1     		cbz	r3, .L385
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4547              		.loc 1 1128 0
 4548 00b4 4FF00009 		mov	r9, #0
 4549 00b8 0FE0     		b	.L376
 4550              	.L385:
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4551              		.loc 1 1123 0
 4552 00ba A946     		mov	r9, r5
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 4553              		.loc 1 1122 0
 4554 00bc 0025     		movs	r5, #0
 4555              	.LVL414:
 4556 00be 0CE0     		b	.L376
 4557              	.LVL415:
 4558              	.L394:
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata16bits++;
 4559              		.loc 1 1140 0
 4560 00c0 2368     		ldr	r3, [r4]
 4561 00c2 9B8C     		ldrh	r3, [r3, #36]
 4562 00c4 08EA0303 		and	r3, r8, r3
 4563 00c8 29F8023B 		strh	r3, [r9], #2	@ movhi
 4564              	.LVL416:
 4565              	.L378:
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4566              		.loc 1 1148 0
 4567 00cc B4F85A30 		ldrh	r3, [r4, #90]
 4568 00d0 9BB2     		uxth	r3, r3
 4569 00d2 013B     		subs	r3, r3, #1
 4570 00d4 9BB2     		uxth	r3, r3
 4571 00d6 A4F85A30 		strh	r3, [r4, #90]	@ movhi
 4572              	.LVL417:
 4573              	.L376:
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4574              		.loc 1 1132 0
 4575 00da B4F85A30 		ldrh	r3, [r4, #90]
 4576 00de 9BB2     		uxth	r3, r3
 4577 00e0 8BB1     		cbz	r3, .L393
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4578              		.loc 1 1134 0
 4579 00e2 0096     		str	r6, [sp]
 4580 00e4 3B46     		mov	r3, r7
 4581 00e6 0022     		movs	r2, #0
 4582 00e8 2021     		movs	r1, #32
 4583 00ea 2046     		mov	r0, r4
 4584 00ec FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4585              	.LVL418:
 4586 00f0 98B9     		cbnz	r0, .L386
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4587              		.loc 1 1138 0
 4588 00f2 002D     		cmp	r5, #0
 4589 00f4 E4D0     		beq	.L394
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata8bits++;
 4590              		.loc 1 1145 0
 4591 00f6 2368     		ldr	r3, [r4]
 4592 00f8 9A8C     		ldrh	r2, [r3, #36]
ARM GAS  /tmp/cc7iiXFd.s 			page 156


 4593 00fa 5FFA88F3 		uxtb	r3, r8
 4594 00fe 1340     		ands	r3, r3, r2
 4595 0100 05F8013B 		strb	r3, [r5], #1
 4596              	.LVL419:
 4597 0104 E2E7     		b	.L378
 4598              	.L393:
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4599              		.loc 1 1152 0
 4600 0106 2023     		movs	r3, #32
 4601 0108 A367     		str	r3, [r4, #120]
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4602              		.loc 1 1154 0
 4603 010a 0020     		movs	r0, #0
 4604 010c 84F87000 		strb	r0, [r4, #112]
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4605              		.loc 1 1156 0
 4606 0110 7EE7     		b	.L367
 4607              	.LVL420:
 4608              	.L381:
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4609              		.loc 1 1101 0
 4610 0112 0120     		movs	r0, #1
 4611              	.LVL421:
 4612 0114 7CE7     		b	.L367
 4613              	.LVL422:
 4614              	.L382:
 4615 0116 0120     		movs	r0, #1
 4616              	.LVL423:
 4617 0118 7AE7     		b	.L367
 4618              	.LVL424:
 4619              	.L386:
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4620              		.loc 1 1136 0
 4621 011a 0320     		movs	r0, #3
 4622 011c 78E7     		b	.L367
 4623              		.cfi_endproc
 4624              	.LFE138:
 4626              		.section	.text.UART_CheckIdleState,"ax",%progbits
 4627              		.align	1
 4628              		.global	UART_CheckIdleState
 4629              		.syntax unified
 4630              		.thumb
 4631              		.thumb_func
 4632              		.fpu fpv4-sp-d16
 4634              	UART_CheckIdleState:
 4635              	.LFB174:
2927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart;
 4636              		.loc 1 2927 0
 4637              		.cfi_startproc
 4638              		@ args = 0, pretend = 0, frame = 0
 4639              		@ frame_needed = 0, uses_anonymous_args = 0
 4640              	.LVL425:
 4641 0000 30B5     		push	{r4, r5, lr}
 4642              	.LCFI39:
 4643              		.cfi_def_cfa_offset 12
 4644              		.cfi_offset 4, -12
 4645              		.cfi_offset 5, -8
ARM GAS  /tmp/cc7iiXFd.s 			page 157


 4646              		.cfi_offset 14, -4
 4647 0002 83B0     		sub	sp, sp, #12
 4648              	.LCFI40:
 4649              		.cfi_def_cfa_offset 24
 4650 0004 0446     		mov	r4, r0
2931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4651              		.loc 1 2931 0
 4652 0006 0023     		movs	r3, #0
 4653 0008 C367     		str	r3, [r0, #124]
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4654              		.loc 1 2934 0
 4655 000a FFF7FEFF 		bl	HAL_GetTick
 4656              	.LVL426:
 4657 000e 0546     		mov	r5, r0
 4658              	.LVL427:
2937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4659              		.loc 1 2937 0
 4660 0010 2368     		ldr	r3, [r4]
 4661 0012 1B68     		ldr	r3, [r3]
 4662 0014 13F0080F 		tst	r3, #8
 4663 0018 0CD1     		bne	.L402
 4664              	.LVL428:
 4665              	.L396:
2948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4666              		.loc 1 2948 0
 4667 001a 2368     		ldr	r3, [r4]
 4668 001c 1B68     		ldr	r3, [r3]
 4669 001e 13F0040F 		tst	r3, #4
 4670 0022 15D1     		bne	.L403
 4671              	.L398:
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4672              		.loc 1 2959 0
 4673 0024 2023     		movs	r3, #32
 4674 0026 6367     		str	r3, [r4, #116]
2960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4675              		.loc 1 2960 0
 4676 0028 A367     		str	r3, [r4, #120]
2962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4677              		.loc 1 2962 0
 4678 002a 0020     		movs	r0, #0
 4679 002c 84F87000 		strb	r0, [r4, #112]
 4680              	.L397:
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4681              		.loc 1 2965 0
 4682 0030 03B0     		add	sp, sp, #12
 4683              	.LCFI41:
 4684              		.cfi_remember_state
 4685              		.cfi_def_cfa_offset 12
 4686              		@ sp needed
 4687 0032 30BD     		pop	{r4, r5, pc}
 4688              	.LVL429:
 4689              	.L402:
 4690              	.LCFI42:
 4691              		.cfi_restore_state
2940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4692              		.loc 1 2940 0
 4693 0034 6FF07E43 		mvn	r3, #-33554432
ARM GAS  /tmp/cc7iiXFd.s 			page 158


 4694 0038 0093     		str	r3, [sp]
 4695 003a 0346     		mov	r3, r0
 4696 003c 0022     		movs	r2, #0
 4697 003e 4FF40011 		mov	r1, #2097152
 4698 0042 2046     		mov	r0, r4
 4699              	.LVL430:
 4700 0044 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4701              	.LVL431:
 4702 0048 0028     		cmp	r0, #0
 4703 004a E6D0     		beq	.L396
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4704              		.loc 1 2943 0
 4705 004c 0320     		movs	r0, #3
 4706 004e EFE7     		b	.L397
 4707              	.L403:
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4708              		.loc 1 2951 0
 4709 0050 6FF07E43 		mvn	r3, #-33554432
 4710 0054 0093     		str	r3, [sp]
 4711 0056 2B46     		mov	r3, r5
 4712 0058 0022     		movs	r2, #0
 4713 005a 4FF48001 		mov	r1, #4194304
 4714 005e 2046     		mov	r0, r4
 4715 0060 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4716              	.LVL432:
 4717 0064 0028     		cmp	r0, #0
 4718 0066 DDD0     		beq	.L398
2954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4719              		.loc 1 2954 0
 4720 0068 0320     		movs	r0, #3
 4721 006a E1E7     		b	.L397
 4722              		.cfi_endproc
 4723              	.LFE174:
 4725              		.section	.text.HAL_UART_Init,"ax",%progbits
 4726              		.align	1
 4727              		.global	HAL_UART_Init
 4728              		.syntax unified
 4729              		.thumb
 4730              		.thumb_func
 4731              		.fpu fpv4-sp-d16
 4733              	HAL_UART_Init:
 4734              	.LFB130:
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4735              		.loc 1 288 0
 4736              		.cfi_startproc
 4737              		@ args = 0, pretend = 0, frame = 0
 4738              		@ frame_needed = 0, uses_anonymous_args = 0
 4739              	.LVL433:
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4740              		.loc 1 290 0
 4741 0000 68B3     		cbz	r0, .L408
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4742              		.loc 1 288 0
 4743 0002 10B5     		push	{r4, lr}
 4744              	.LCFI43:
 4745              		.cfi_def_cfa_offset 8
 4746              		.cfi_offset 4, -8
ARM GAS  /tmp/cc7iiXFd.s 			page 159


 4747              		.cfi_offset 14, -4
 4748 0004 0446     		mov	r4, r0
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4749              		.loc 1 306 0
 4750 0006 436F     		ldr	r3, [r0, #116]
 4751 0008 03B3     		cbz	r3, .L413
 4752              	.LVL434:
 4753              	.L406:
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4754              		.loc 1 327 0
 4755 000a 2423     		movs	r3, #36
 4756 000c 6367     		str	r3, [r4, #116]
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4757              		.loc 1 329 0
 4758 000e 2268     		ldr	r2, [r4]
 4759 0010 1368     		ldr	r3, [r2]
 4760 0012 23F00103 		bic	r3, r3, #1
 4761 0016 1360     		str	r3, [r2]
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4762              		.loc 1 332 0
 4763 0018 2046     		mov	r0, r4
 4764 001a FFF7FEFF 		bl	UART_SetConfig
 4765              	.LVL435:
 4766 001e 0128     		cmp	r0, #1
 4767 0020 1FD0     		beq	.L405
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4768              		.loc 1 337 0
 4769 0022 636A     		ldr	r3, [r4, #36]
 4770 0024 BBB9     		cbnz	r3, .L414
 4771              	.L407:
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4772              		.loc 1 345 0
 4773 0026 2268     		ldr	r2, [r4]
 4774 0028 5368     		ldr	r3, [r2, #4]
 4775 002a 23F49043 		bic	r3, r3, #18432
 4776 002e 5360     		str	r3, [r2, #4]
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4777              		.loc 1 346 0
 4778 0030 2268     		ldr	r2, [r4]
 4779 0032 9368     		ldr	r3, [r2, #8]
 4780 0034 23F02A03 		bic	r3, r3, #42
 4781 0038 9360     		str	r3, [r2, #8]
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4782              		.loc 1 348 0
 4783 003a 2268     		ldr	r2, [r4]
 4784 003c 1368     		ldr	r3, [r2]
 4785 003e 43F00103 		orr	r3, r3, #1
 4786 0042 1360     		str	r3, [r2]
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4787              		.loc 1 351 0
 4788 0044 2046     		mov	r0, r4
 4789 0046 FFF7FEFF 		bl	UART_CheckIdleState
 4790              	.LVL436:
 4791 004a 10BD     		pop	{r4, pc}
 4792              	.LVL437:
 4793              	.L413:
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  /tmp/cc7iiXFd.s 			page 160


 4794              		.loc 1 309 0
 4795 004c 80F87030 		strb	r3, [r0, #112]
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4796              		.loc 1 323 0
 4797 0050 FFF7FEFF 		bl	HAL_UART_MspInit
 4798              	.LVL438:
 4799 0054 D9E7     		b	.L406
 4800              	.L414:
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4801              		.loc 1 339 0
 4802 0056 2046     		mov	r0, r4
 4803 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4804              	.LVL439:
 4805 005c E3E7     		b	.L407
 4806              	.LVL440:
 4807              	.L408:
 4808              	.LCFI44:
 4809              		.cfi_def_cfa_offset 0
 4810              		.cfi_restore 4
 4811              		.cfi_restore 14
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4812              		.loc 1 292 0
 4813 005e 0120     		movs	r0, #1
 4814              	.LVL441:
 4815 0060 7047     		bx	lr
 4816              	.LVL442:
 4817              	.L405:
 4818              	.LCFI45:
 4819              		.cfi_def_cfa_offset 8
 4820              		.cfi_offset 4, -8
 4821              		.cfi_offset 14, -4
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4822              		.loc 1 352 0
 4823 0062 10BD     		pop	{r4, pc}
 4824              		.cfi_endproc
 4825              	.LFE130:
 4827              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4828              		.align	1
 4829              		.global	HAL_HalfDuplex_Init
 4830              		.syntax unified
 4831              		.thumb
 4832              		.thumb_func
 4833              		.fpu fpv4-sp-d16
 4835              	HAL_HalfDuplex_Init:
 4836              	.LFB131:
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4837              		.loc 1 361 0
 4838              		.cfi_startproc
 4839              		@ args = 0, pretend = 0, frame = 0
 4840              		@ frame_needed = 0, uses_anonymous_args = 0
 4841              	.LVL443:
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4842              		.loc 1 363 0
 4843 0000 0028     		cmp	r0, #0
 4844 0002 32D0     		beq	.L419
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4845              		.loc 1 361 0
ARM GAS  /tmp/cc7iiXFd.s 			page 161


 4846 0004 10B5     		push	{r4, lr}
 4847              	.LCFI46:
 4848              		.cfi_def_cfa_offset 8
 4849              		.cfi_offset 4, -8
 4850              		.cfi_offset 14, -4
 4851 0006 0446     		mov	r4, r0
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4852              		.loc 1 371 0
 4853 0008 436F     		ldr	r3, [r0, #116]
 4854 000a 2BB3     		cbz	r3, .L424
 4855              	.LVL444:
 4856              	.L417:
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4857              		.loc 1 392 0
 4858 000c 2423     		movs	r3, #36
 4859 000e 6367     		str	r3, [r4, #116]
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4860              		.loc 1 394 0
 4861 0010 2268     		ldr	r2, [r4]
 4862 0012 1368     		ldr	r3, [r2]
 4863 0014 23F00103 		bic	r3, r3, #1
 4864 0018 1360     		str	r3, [r2]
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4865              		.loc 1 397 0
 4866 001a 2046     		mov	r0, r4
 4867 001c FFF7FEFF 		bl	UART_SetConfig
 4868              	.LVL445:
 4869 0020 0128     		cmp	r0, #1
 4870 0022 24D0     		beq	.L416
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4871              		.loc 1 402 0
 4872 0024 636A     		ldr	r3, [r4, #36]
 4873 0026 E3B9     		cbnz	r3, .L425
 4874              	.L418:
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 4875              		.loc 1 410 0
 4876 0028 2268     		ldr	r2, [r4]
 4877 002a 5368     		ldr	r3, [r2, #4]
 4878 002c 23F49043 		bic	r3, r3, #18432
 4879 0030 5360     		str	r3, [r2, #4]
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4880              		.loc 1 411 0
 4881 0032 2268     		ldr	r2, [r4]
 4882 0034 9368     		ldr	r3, [r2, #8]
 4883 0036 23F02203 		bic	r3, r3, #34
 4884 003a 9360     		str	r3, [r2, #8]
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4885              		.loc 1 414 0
 4886 003c 2268     		ldr	r2, [r4]
 4887 003e 9368     		ldr	r3, [r2, #8]
 4888 0040 43F00803 		orr	r3, r3, #8
 4889 0044 9360     		str	r3, [r2, #8]
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4890              		.loc 1 416 0
 4891 0046 2268     		ldr	r2, [r4]
 4892 0048 1368     		ldr	r3, [r2]
 4893 004a 43F00103 		orr	r3, r3, #1
ARM GAS  /tmp/cc7iiXFd.s 			page 162


 4894 004e 1360     		str	r3, [r2]
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4895              		.loc 1 419 0
 4896 0050 2046     		mov	r0, r4
 4897 0052 FFF7FEFF 		bl	UART_CheckIdleState
 4898              	.LVL446:
 4899 0056 10BD     		pop	{r4, pc}
 4900              	.LVL447:
 4901              	.L424:
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4902              		.loc 1 374 0
 4903 0058 80F87030 		strb	r3, [r0, #112]
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4904              		.loc 1 388 0
 4905 005c FFF7FEFF 		bl	HAL_UART_MspInit
 4906              	.LVL448:
 4907 0060 D4E7     		b	.L417
 4908              	.L425:
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4909              		.loc 1 404 0
 4910 0062 2046     		mov	r0, r4
 4911 0064 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4912              	.LVL449:
 4913 0068 DEE7     		b	.L418
 4914              	.LVL450:
 4915              	.L419:
 4916              	.LCFI47:
 4917              		.cfi_def_cfa_offset 0
 4918              		.cfi_restore 4
 4919              		.cfi_restore 14
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4920              		.loc 1 365 0
 4921 006a 0120     		movs	r0, #1
 4922              	.LVL451:
 4923 006c 7047     		bx	lr
 4924              	.LVL452:
 4925              	.L416:
 4926              	.LCFI48:
 4927              		.cfi_def_cfa_offset 8
 4928              		.cfi_offset 4, -8
 4929              		.cfi_offset 14, -4
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4930              		.loc 1 420 0
 4931 006e 10BD     		pop	{r4, pc}
 4932              		.cfi_endproc
 4933              	.LFE131:
 4935              		.section	.text.HAL_LIN_Init,"ax",%progbits
 4936              		.align	1
 4937              		.global	HAL_LIN_Init
 4938              		.syntax unified
 4939              		.thumb
 4940              		.thumb_func
 4941              		.fpu fpv4-sp-d16
 4943              	HAL_LIN_Init:
 4944              	.LFB132:
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4945              		.loc 1 434 0
ARM GAS  /tmp/cc7iiXFd.s 			page 163


 4946              		.cfi_startproc
 4947              		@ args = 0, pretend = 0, frame = 0
 4948              		@ frame_needed = 0, uses_anonymous_args = 0
 4949              	.LVL453:
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4950              		.loc 1 436 0
 4951 0000 0028     		cmp	r0, #0
 4952 0002 41D0     		beq	.L430
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4953              		.loc 1 434 0
 4954 0004 38B5     		push	{r3, r4, r5, lr}
 4955              	.LCFI49:
 4956              		.cfi_def_cfa_offset 16
 4957              		.cfi_offset 3, -16
 4958              		.cfi_offset 4, -12
 4959              		.cfi_offset 5, -8
 4960              		.cfi_offset 14, -4
 4961 0006 0446     		mov	r4, r0
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4962              		.loc 1 447 0
 4963 0008 C369     		ldr	r3, [r0, #28]
 4964 000a B3F5004F 		cmp	r3, #32768
 4965 000e 3DD0     		beq	.L431
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4966              		.loc 1 452 0
 4967 0010 8368     		ldr	r3, [r0, #8]
 4968 0012 002B     		cmp	r3, #0
 4969 0014 3CD1     		bne	.L432
 4970 0016 0D46     		mov	r5, r1
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4971              		.loc 1 457 0
 4972 0018 436F     		ldr	r3, [r0, #116]
 4973 001a 002B     		cmp	r3, #0
 4974 001c 2BD0     		beq	.L437
 4975              	.LVL454:
 4976              	.L428:
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4977              		.loc 1 478 0
 4978 001e 2423     		movs	r3, #36
 4979 0020 6367     		str	r3, [r4, #116]
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4980              		.loc 1 480 0
 4981 0022 2268     		ldr	r2, [r4]
 4982 0024 1368     		ldr	r3, [r2]
 4983 0026 23F00103 		bic	r3, r3, #1
 4984 002a 1360     		str	r3, [r2]
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4985              		.loc 1 483 0
 4986 002c 2046     		mov	r0, r4
 4987 002e FFF7FEFF 		bl	UART_SetConfig
 4988              	.LVL455:
 4989 0032 0128     		cmp	r0, #1
 4990 0034 2DD0     		beq	.L427
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4991              		.loc 1 488 0
 4992 0036 636A     		ldr	r3, [r4, #36]
 4993 0038 13BB     		cbnz	r3, .L438
ARM GAS  /tmp/cc7iiXFd.s 			page 164


 4994              	.L429:
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 4995              		.loc 1 496 0
 4996 003a 2268     		ldr	r2, [r4]
 4997 003c 5368     		ldr	r3, [r2, #4]
 4998 003e 23F40063 		bic	r3, r3, #2048
 4999 0042 5360     		str	r3, [r2, #4]
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5000              		.loc 1 497 0
 5001 0044 2268     		ldr	r2, [r4]
 5002 0046 9368     		ldr	r3, [r2, #8]
 5003 0048 23F02A03 		bic	r3, r3, #42
 5004 004c 9360     		str	r3, [r2, #8]
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5005              		.loc 1 500 0
 5006 004e 2268     		ldr	r2, [r4]
 5007 0050 5368     		ldr	r3, [r2, #4]
 5008 0052 43F48043 		orr	r3, r3, #16384
 5009 0056 5360     		str	r3, [r2, #4]
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5010              		.loc 1 503 0
 5011 0058 2268     		ldr	r2, [r4]
 5012 005a 5368     		ldr	r3, [r2, #4]
 5013 005c 23F02003 		bic	r3, r3, #32
 5014 0060 2B43     		orrs	r3, r3, r5
 5015 0062 5360     		str	r3, [r2, #4]
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5016              		.loc 1 505 0
 5017 0064 2268     		ldr	r2, [r4]
 5018 0066 1368     		ldr	r3, [r2]
 5019 0068 43F00103 		orr	r3, r3, #1
 5020 006c 1360     		str	r3, [r2]
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5021              		.loc 1 508 0
 5022 006e 2046     		mov	r0, r4
 5023 0070 FFF7FEFF 		bl	UART_CheckIdleState
 5024              	.LVL456:
 5025 0074 38BD     		pop	{r3, r4, r5, pc}
 5026              	.LVL457:
 5027              	.L437:
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5028              		.loc 1 460 0
 5029 0076 80F87030 		strb	r3, [r0, #112]
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5030              		.loc 1 474 0
 5031 007a FFF7FEFF 		bl	HAL_UART_MspInit
 5032              	.LVL458:
 5033 007e CEE7     		b	.L428
 5034              	.L438:
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 5035              		.loc 1 490 0
 5036 0080 2046     		mov	r0, r4
 5037 0082 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5038              	.LVL459:
 5039 0086 D8E7     		b	.L429
 5040              	.LVL460:
 5041              	.L430:
ARM GAS  /tmp/cc7iiXFd.s 			page 165


 5042              	.LCFI50:
 5043              		.cfi_def_cfa_offset 0
 5044              		.cfi_restore 3
 5045              		.cfi_restore 4
 5046              		.cfi_restore 5
 5047              		.cfi_restore 14
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 5048              		.loc 1 438 0
 5049 0088 0120     		movs	r0, #1
 5050              	.LVL461:
 5051 008a 7047     		bx	lr
 5052              	.LVL462:
 5053              	.L431:
 5054              	.LCFI51:
 5055              		.cfi_def_cfa_offset 16
 5056              		.cfi_offset 3, -16
 5057              		.cfi_offset 4, -12
 5058              		.cfi_offset 5, -8
 5059              		.cfi_offset 14, -4
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 5060              		.loc 1 449 0
 5061 008c 0120     		movs	r0, #1
 5062              	.LVL463:
 5063 008e 38BD     		pop	{r3, r4, r5, pc}
 5064              	.LVL464:
 5065              	.L432:
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 5066              		.loc 1 454 0
 5067 0090 0120     		movs	r0, #1
 5068              	.LVL465:
 5069              	.L427:
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5070              		.loc 1 509 0
 5071 0092 38BD     		pop	{r3, r4, r5, pc}
 5072              		.cfi_endproc
 5073              	.LFE132:
 5075              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 5076              		.align	1
 5077              		.global	HAL_MultiProcessor_Init
 5078              		.syntax unified
 5079              		.thumb
 5080              		.thumb_func
 5081              		.fpu fpv4-sp-d16
 5083              	HAL_MultiProcessor_Init:
 5084              	.LFB133:
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 5085              		.loc 1 531 0
 5086              		.cfi_startproc
 5087              		@ args = 0, pretend = 0, frame = 0
 5088              		@ frame_needed = 0, uses_anonymous_args = 0
 5089              	.LVL466:
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5090              		.loc 1 533 0
 5091 0000 0028     		cmp	r0, #0
 5092 0002 40D0     		beq	.L444
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 5093              		.loc 1 531 0
ARM GAS  /tmp/cc7iiXFd.s 			page 166


 5094 0004 70B5     		push	{r4, r5, r6, lr}
 5095              	.LCFI52:
 5096              		.cfi_def_cfa_offset 16
 5097              		.cfi_offset 4, -16
 5098              		.cfi_offset 5, -12
 5099              		.cfi_offset 6, -8
 5100              		.cfi_offset 14, -4
 5101 0006 0446     		mov	r4, r0
 5102 0008 1546     		mov	r5, r2
 5103 000a 0E46     		mov	r6, r1
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5104              		.loc 1 541 0
 5105 000c 436F     		ldr	r3, [r0, #116]
 5106 000e 4BB3     		cbz	r3, .L449
 5107              	.LVL467:
 5108              	.L441:
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5109              		.loc 1 562 0
 5110 0010 2423     		movs	r3, #36
 5111 0012 6367     		str	r3, [r4, #116]
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5112              		.loc 1 564 0
 5113 0014 2268     		ldr	r2, [r4]
 5114 0016 1368     		ldr	r3, [r2]
 5115 0018 23F00103 		bic	r3, r3, #1
 5116 001c 1360     		str	r3, [r2]
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5117              		.loc 1 567 0
 5118 001e 2046     		mov	r0, r4
 5119 0020 FFF7FEFF 		bl	UART_SetConfig
 5120              	.LVL468:
 5121 0024 0128     		cmp	r0, #1
 5122 0026 30D0     		beq	.L440
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5123              		.loc 1 572 0
 5124 0028 636A     		ldr	r3, [r4, #36]
 5125 002a 03BB     		cbnz	r3, .L450
 5126              	.L442:
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 5127              		.loc 1 580 0
 5128 002c 2268     		ldr	r2, [r4]
 5129 002e 5368     		ldr	r3, [r2, #4]
 5130 0030 23F49043 		bic	r3, r3, #18432
 5131 0034 5360     		str	r3, [r2, #4]
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5132              		.loc 1 581 0
 5133 0036 2268     		ldr	r2, [r4]
 5134 0038 9368     		ldr	r3, [r2, #8]
 5135 003a 23F02A03 		bic	r3, r3, #42
 5136 003e 9360     		str	r3, [r2, #8]
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 5137              		.loc 1 583 0
 5138 0040 B5F5006F 		cmp	r5, #2048
 5139 0044 17D0     		beq	.L451
 5140              	.L443:
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5141              		.loc 1 590 0
ARM GAS  /tmp/cc7iiXFd.s 			page 167


 5142 0046 2368     		ldr	r3, [r4]
 5143 0048 1A68     		ldr	r2, [r3]
 5144 004a 22F40062 		bic	r2, r2, #2048
 5145 004e 1543     		orrs	r5, r5, r2
 5146              	.LVL469:
 5147 0050 1D60     		str	r5, [r3]
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5148              		.loc 1 592 0
 5149 0052 2268     		ldr	r2, [r4]
 5150 0054 1368     		ldr	r3, [r2]
 5151 0056 43F00103 		orr	r3, r3, #1
 5152 005a 1360     		str	r3, [r2]
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5153              		.loc 1 595 0
 5154 005c 2046     		mov	r0, r4
 5155 005e FFF7FEFF 		bl	UART_CheckIdleState
 5156              	.LVL470:
 5157 0062 70BD     		pop	{r4, r5, r6, pc}
 5158              	.LVL471:
 5159              	.L449:
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5160              		.loc 1 544 0
 5161 0064 80F87030 		strb	r3, [r0, #112]
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 5162              		.loc 1 558 0
 5163 0068 FFF7FEFF 		bl	HAL_UART_MspInit
 5164              	.LVL472:
 5165 006c D0E7     		b	.L441
 5166              	.L450:
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 5167              		.loc 1 574 0
 5168 006e 2046     		mov	r0, r4
 5169 0070 FFF7FEFF 		bl	UART_AdvFeatureConfig
 5170              	.LVL473:
 5171 0074 DAE7     		b	.L442
 5172              	.L451:
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 5173              		.loc 1 586 0
 5174 0076 2368     		ldr	r3, [r4]
 5175 0078 5968     		ldr	r1, [r3, #4]
 5176 007a 21F07F41 		bic	r1, r1, #-16777216
 5177 007e 41EA0666 		orr	r6, r1, r6, lsl #24
 5178 0082 5E60     		str	r6, [r3, #4]
 5179 0084 DFE7     		b	.L443
 5180              	.LVL474:
 5181              	.L444:
 5182              	.LCFI53:
 5183              		.cfi_def_cfa_offset 0
 5184              		.cfi_restore 4
 5185              		.cfi_restore 5
 5186              		.cfi_restore 6
 5187              		.cfi_restore 14
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 5188              		.loc 1 535 0
 5189 0086 0120     		movs	r0, #1
 5190              	.LVL475:
 5191 0088 7047     		bx	lr
ARM GAS  /tmp/cc7iiXFd.s 			page 168


 5192              	.LVL476:
 5193              	.L440:
 5194              	.LCFI54:
 5195              		.cfi_def_cfa_offset 16
 5196              		.cfi_offset 4, -16
 5197              		.cfi_offset 5, -12
 5198              		.cfi_offset 6, -8
 5199              		.cfi_offset 14, -4
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5200              		.loc 1 596 0
 5201 008a 70BD     		pop	{r4, r5, r6, pc}
 5202              		.cfi_endproc
 5203              	.LFE133:
 5205              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 5206              		.align	1
 5207              		.global	HAL_MultiProcessor_EnableMuteMode
 5208              		.syntax unified
 5209              		.thumb
 5210              		.thumb_func
 5211              		.fpu fpv4-sp-d16
 5213              	HAL_MultiProcessor_EnableMuteMode:
 5214              	.LFB164:
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 5215              		.loc 1 2512 0
 5216              		.cfi_startproc
 5217              		@ args = 0, pretend = 0, frame = 0
 5218              		@ frame_needed = 0, uses_anonymous_args = 0
 5219              	.LVL477:
 5220 0000 08B5     		push	{r3, lr}
 5221              	.LCFI55:
 5222              		.cfi_def_cfa_offset 8
 5223              		.cfi_offset 3, -8
 5224              		.cfi_offset 14, -4
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5225              		.loc 1 2513 0
 5226 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 5227 0006 012B     		cmp	r3, #1
 5228 0008 01D1     		bne	.L456
 5229 000a 0220     		movs	r0, #2
 5230              	.LVL478:
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5231              		.loc 1 2523 0
 5232 000c 08BD     		pop	{r3, pc}
 5233              	.LVL479:
 5234              	.L456:
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5235              		.loc 1 2513 0 discriminator 2
 5236 000e 0123     		movs	r3, #1
 5237 0010 80F87030 		strb	r3, [r0, #112]
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5238              		.loc 1 2515 0 discriminator 2
 5239 0014 2423     		movs	r3, #36
 5240 0016 4367     		str	r3, [r0, #116]
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5241              		.loc 1 2518 0 discriminator 2
 5242 0018 0268     		ldr	r2, [r0]
 5243 001a 1368     		ldr	r3, [r2]
ARM GAS  /tmp/cc7iiXFd.s 			page 169


 5244 001c 43F40053 		orr	r3, r3, #8192
 5245 0020 1360     		str	r3, [r2]
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5246              		.loc 1 2520 0 discriminator 2
 5247 0022 2023     		movs	r3, #32
 5248 0024 4367     		str	r3, [r0, #116]
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5249              		.loc 1 2522 0 discriminator 2
 5250 0026 FFF7FEFF 		bl	UART_CheckIdleState
 5251              	.LVL480:
 5252 002a 08BD     		pop	{r3, pc}
 5253              		.cfi_endproc
 5254              	.LFE164:
 5256              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 5257              		.align	1
 5258              		.global	HAL_MultiProcessor_DisableMuteMode
 5259              		.syntax unified
 5260              		.thumb
 5261              		.thumb_func
 5262              		.fpu fpv4-sp-d16
 5264              	HAL_MultiProcessor_DisableMuteMode:
 5265              	.LFB165:
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 5266              		.loc 1 2532 0
 5267              		.cfi_startproc
 5268              		@ args = 0, pretend = 0, frame = 0
 5269              		@ frame_needed = 0, uses_anonymous_args = 0
 5270              	.LVL481:
 5271 0000 08B5     		push	{r3, lr}
 5272              	.LCFI56:
 5273              		.cfi_def_cfa_offset 8
 5274              		.cfi_offset 3, -8
 5275              		.cfi_offset 14, -4
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5276              		.loc 1 2533 0
 5277 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 5278 0006 012B     		cmp	r3, #1
 5279 0008 01D1     		bne	.L461
 5280 000a 0220     		movs	r0, #2
 5281              	.LVL482:
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5282              		.loc 1 2543 0
 5283 000c 08BD     		pop	{r3, pc}
 5284              	.LVL483:
 5285              	.L461:
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5286              		.loc 1 2533 0 discriminator 2
 5287 000e 0123     		movs	r3, #1
 5288 0010 80F87030 		strb	r3, [r0, #112]
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5289              		.loc 1 2535 0 discriminator 2
 5290 0014 2423     		movs	r3, #36
 5291 0016 4367     		str	r3, [r0, #116]
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5292              		.loc 1 2538 0 discriminator 2
 5293 0018 0268     		ldr	r2, [r0]
 5294 001a 1368     		ldr	r3, [r2]
ARM GAS  /tmp/cc7iiXFd.s 			page 170


 5295 001c 23F40053 		bic	r3, r3, #8192
 5296 0020 1360     		str	r3, [r2]
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 5297              		.loc 1 2540 0 discriminator 2
 5298 0022 2023     		movs	r3, #32
 5299 0024 4367     		str	r3, [r0, #116]
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 5300              		.loc 1 2542 0 discriminator 2
 5301 0026 FFF7FEFF 		bl	UART_CheckIdleState
 5302              	.LVL484:
 5303 002a 08BD     		pop	{r3, pc}
 5304              		.cfi_endproc
 5305              	.LFE165:
 5307              		.text
 5308              	.Letext0:
 5309              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 5310              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 5311              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 5312              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 5313              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 5314              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 5315              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 5316              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 5317              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 5318              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 5319              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 5320              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart_ex.h"
ARM GAS  /tmp/cc7iiXFd.s 			page 171


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_hal_uart.c
     /tmp/cc7iiXFd.s:18     .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/cc7iiXFd.s:24     .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/cc7iiXFd.s:46     .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/cc7iiXFd.s:52     .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/cc7iiXFd.s:81     .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/cc7iiXFd.s:87     .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/cc7iiXFd.s:139    .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/cc7iiXFd.s:145    .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/cc7iiXFd.s:202    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/cc7iiXFd.s:209    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/cc7iiXFd.s:222    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/cc7iiXFd.s:229    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/cc7iiXFd.s:242    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/cc7iiXFd.s:249    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/cc7iiXFd.s:315    .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/cc7iiXFd.s:322    .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/cc7iiXFd.s:419    .text.HAL_UART_Transmit_IT:0000000000000068 $d
     /tmp/cc7iiXFd.s:425    .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/cc7iiXFd.s:432    .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/cc7iiXFd.s:590    .text.HAL_UART_Receive_IT:00000000000000cc $d
     /tmp/cc7iiXFd.s:1671   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/cc7iiXFd.s:1758   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/cc7iiXFd.s:596    .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/cc7iiXFd.s:603    .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/cc7iiXFd.s:732    .text.HAL_UART_Transmit_DMA:0000000000000098 $d
     /tmp/cc7iiXFd.s:1511   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/cc7iiXFd.s:1621   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/cc7iiXFd.s:1973   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/cc7iiXFd.s:739    .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/cc7iiXFd.s:746    .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/cc7iiXFd.s:879    .text.HAL_UART_Receive_DMA:00000000000000a0 $d
     /tmp/cc7iiXFd.s:1846   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/cc7iiXFd.s:1923   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/cc7iiXFd.s:886    .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/cc7iiXFd.s:893    .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/cc7iiXFd.s:992    .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/cc7iiXFd.s:999    .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/cc7iiXFd.s:1070   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/cc7iiXFd.s:1077   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/cc7iiXFd.s:1197   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/cc7iiXFd.s:1204   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/cc7iiXFd.s:1325   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/cc7iiXFd.s:1332   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
     /tmp/cc7iiXFd.s:1398   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/cc7iiXFd.s:1405   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/cc7iiXFd.s:1485   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:1492   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/cc7iiXFd.s:1505   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/cc7iiXFd.s:1558   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/cc7iiXFd.s:1564   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/cc7iiXFd.s:1595   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:1602   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/cc7iiXFd.s:1615   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/cc7iiXFd.s:1645   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:1652   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
ARM GAS  /tmp/cc7iiXFd.s 			page 172


     /tmp/cc7iiXFd.s:1665   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/cc7iiXFd.s:1752   .text.UART_RxISR_16BIT:0000000000000000 $t
     /tmp/cc7iiXFd.s:1840   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/cc7iiXFd.s:1897   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:1904   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/cc7iiXFd.s:1917   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/cc7iiXFd.s:1947   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:1954   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/cc7iiXFd.s:1967   .text.UART_DMAError:0000000000000000 $t
     /tmp/cc7iiXFd.s:2049   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/cc7iiXFd.s:2056   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/cc7iiXFd.s:2341   .text.HAL_UART_IRQHandler:0000000000000174 $d
     /tmp/cc7iiXFd.s:2352   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/cc7iiXFd.s:2346   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/cc7iiXFd.s:2380   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:2387   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/cc7iiXFd.s:2400   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/cc7iiXFd.s:2407   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/cc7iiXFd.s:2578   .text.HAL_UART_Abort_IT:00000000000000d4 $d
     /tmp/cc7iiXFd.s:2655   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/cc7iiXFd.s:2590   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/cc7iiXFd.s:2584   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:2649   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:2709   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:2716   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/cc7iiXFd.s:2729   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/cc7iiXFd.s:2736   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/cc7iiXFd.s:2819   .text.HAL_UART_AbortTransmit_IT:0000000000000060 $d
     /tmp/cc7iiXFd.s:2830   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/cc7iiXFd.s:2824   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:2859   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:2866   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/cc7iiXFd.s:2879   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/cc7iiXFd.s:2886   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/cc7iiXFd.s:2986   .text.HAL_UART_AbortReceive_IT:0000000000000080 $d
     /tmp/cc7iiXFd.s:2997   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/cc7iiXFd.s:2991   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/cc7iiXFd.s:3035   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 $t
     /tmp/cc7iiXFd.s:3042   .text.HAL_UART_ReceiverTimeout_Config:0000000000000000 HAL_UART_ReceiverTimeout_Config
     /tmp/cc7iiXFd.s:3062   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 $t
     /tmp/cc7iiXFd.s:3069   .text.HAL_UART_EnableReceiverTimeout:0000000000000000 HAL_UART_EnableReceiverTimeout
     /tmp/cc7iiXFd.s:3123   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 $t
     /tmp/cc7iiXFd.s:3130   .text.HAL_UART_DisableReceiverTimeout:0000000000000000 HAL_UART_DisableReceiverTimeout
     /tmp/cc7iiXFd.s:3184   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/cc7iiXFd.s:3191   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/cc7iiXFd.s:3209   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/cc7iiXFd.s:3216   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/cc7iiXFd.s:3265   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/cc7iiXFd.s:3272   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/cc7iiXFd.s:3321   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/cc7iiXFd.s:3328   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/cc7iiXFd.s:3372   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/cc7iiXFd.s:3379   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/cc7iiXFd.s:3401   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/cc7iiXFd.s:3408   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/cc7iiXFd.s:3425   .text.UART_SetConfig:0000000000000000 $t
     /tmp/cc7iiXFd.s:3432   .text.UART_SetConfig:0000000000000000 UART_SetConfig
ARM GAS  /tmp/cc7iiXFd.s 			page 173


     /tmp/cc7iiXFd.s:3521   .text.UART_SetConfig:0000000000000074 $d
     /tmp/cc7iiXFd.s:3531   .text.UART_SetConfig:0000000000000086 $t
     /tmp/cc7iiXFd.s:3541   .text.UART_SetConfig:0000000000000096 $d
     /tmp/cc7iiXFd.s:3545   .text.UART_SetConfig:000000000000009a $t
     /tmp/cc7iiXFd.s:3725   .text.UART_SetConfig:000000000000017e $d
     /tmp/cc7iiXFd.s:3955   .text.UART_SetConfig:000000000000029c $d
     /tmp/cc7iiXFd.s:3966   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/cc7iiXFd.s:3973   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/cc7iiXFd.s:4095   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/cc7iiXFd.s:4102   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/cc7iiXFd.s:4213   .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/cc7iiXFd.s:4220   .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/cc7iiXFd.s:4397   .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/cc7iiXFd.s:4404   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/cc7iiXFd.s:4627   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/cc7iiXFd.s:4634   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/cc7iiXFd.s:4726   .text.HAL_UART_Init:0000000000000000 $t
     /tmp/cc7iiXFd.s:4733   .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/cc7iiXFd.s:4828   .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/cc7iiXFd.s:4835   .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/cc7iiXFd.s:4936   .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/cc7iiXFd.s:4943   .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/cc7iiXFd.s:5076   .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/cc7iiXFd.s:5083   .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/cc7iiXFd.s:5206   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/cc7iiXFd.s:5213   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/cc7iiXFd.s:5257   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/cc7iiXFd.s:5264   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
                     .debug_frame:0000000000000010 $d
     /tmp/cc7iiXFd.s:3734   .text.UART_SetConfig:0000000000000187 $d
     /tmp/cc7iiXFd.s:3734   .text.UART_SetConfig:0000000000000188 $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
