ARM GAS  /tmp/ccpnR8yw.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	MX_GPIO_Init:
  25              	.LFB138:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include <stdio.h>
  24:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  25:Src/main.c    **** /* USER CODE BEGIN Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* USER CODE END Includes */
  28:Src/main.c    **** 
  29:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  30:Src/main.c    **** /* USER CODE BEGIN PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* USER CODE END PTD */
ARM GAS  /tmp/ccpnR8yw.s 			page 2


  33:Src/main.c    **** 
  34:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  35:Src/main.c    **** /* USER CODE BEGIN PD */
  36:Src/main.c    **** /* USER CODE END PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PM */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  44:Src/main.c    **** UART_HandleTypeDef huart2;
  45:Src/main.c    **** 
  46:Src/main.c    **** /* USER CODE BEGIN PV */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE END PV */
  49:Src/main.c    **** extern void initialise_monitor_handles(void);
  50:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  51:Src/main.c    **** void SystemClock_Config(void);
  52:Src/main.c    **** static void MX_GPIO_Init(void);
  53:Src/main.c    **** static void MX_USART2_UART_Init(void);
  54:Src/main.c    **** void EXTI10_15_IRQHandler(void);
  55:Src/main.c    **** /* USER CODE BEGIN PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PFP */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN 0 */
  61:Src/main.c    **** 
  62:Src/main.c    **** extern volatile int mystick;
  63:Src/main.c    **** extern volatile int mycount;
  64:Src/main.c    **** 
  65:Src/main.c    **** int btnPressed();
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /**
  70:Src/main.c    ****   * @brief  The application entry point.
  71:Src/main.c    ****   * @retval int
  72:Src/main.c    ****   */
  73:Src/main.c    **** 
  74:Src/main.c    **** 
  75:Src/main.c    **** 
  76:Src/main.c    **** 
  77:Src/main.c    ****  
  78:Src/main.c    **** void LED_TURNON()
  79:Src/main.c    **** {
  80:Src/main.c    **** 	GPIOA->MODER = (GPIOA->MODER & ~GPIO_MODER_MODER5) |
  81:Src/main.c    **** 				   (0b01 << GPIO_MODER_MODER5_Pos);       // set pin PA5 to output.
  82:Src/main.c    **** 	
  83:Src/main.c    ****   GPIOA->OTYPER &= ~GPIO_OTYPER_OT_5;                   // set pin PA5 to output type to push-pull
  84:Src/main.c    **** 		
  85:Src/main.c    **** }
  86:Src/main.c    **** 
  87:Src/main.c    **** 
  88:Src/main.c    **** int boardButton()
  89:Src/main.c    **** {
ARM GAS  /tmp/ccpnR8yw.s 			page 3


  90:Src/main.c    ****   GPIOC->MODER = (GPIOC->MODER & ~GPIO_MODER_MODER13) |
  91:Src/main.c    ****                   (0b00 << GPIO_MODER_MODER13_Pos);    //set pin to input 
  92:Src/main.c    **** 
  93:Src/main.c    ****                 
  94:Src/main.c    ****   GPIOC->PUPDR = (GPIOC->PUPDR & ~GPIO_PUPDR_PUPDR13) |
  95:Src/main.c    ****                   (0b01 << GPIO_PUPDR_PUPDR13_Pos);
  96:Src/main.c    **** 
  97:Src/main.c    ****   if((GPIOC->IDR & GPIO_IDR_13)== 0)
  98:Src/main.c    ****   {
  99:Src/main.c    ****     return 0;
 100:Src/main.c    ****   }
 101:Src/main.c    ****   return -1; 
 102:Src/main.c    **** }
 103:Src/main.c    **** 
 104:Src/main.c    **** 
 105:Src/main.c    **** 
 106:Src/main.c    **** void Delay(int millisecond)
 107:Src/main.c    **** {
 108:Src/main.c    ****   int time = mystick;
 109:Src/main.c    **** 	while((mystick - time ) < (millisecond));
 110:Src/main.c    **** }
 111:Src/main.c    **** 
 112:Src/main.c    **** 
 113:Src/main.c    **** 
 114:Src/main.c    **** int main(void)
 115:Src/main.c    **** {
 116:Src/main.c    ****    /* USER CODE BEGIN 1 */
 117:Src/main.c    **** 
 118:Src/main.c    ****   /* USER CODE END 1 */
 119:Src/main.c    ****   
 120:Src/main.c    **** 
 121:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 122:Src/main.c    **** 
 123:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 124:Src/main.c    ****   HAL_Init();
 125:Src/main.c    **** 
 126:Src/main.c    ****   /* USER CODE BEGIN Init */
 127:Src/main.c    **** 
 128:Src/main.c    ****   /* USER CODE END Init */
 129:Src/main.c    **** 
 130:Src/main.c    ****   /* Configure the system clock */
 131:Src/main.c    ****   SystemClock_Config();
 132:Src/main.c    **** 	
 133:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 134:Src/main.c    ****   
 135:Src/main.c    ****   
 136:Src/main.c    **** 	
 137:Src/main.c    **** 
 138:Src/main.c    ****   /* USER CODE END SysInit */
 139:Src/main.c    **** 
 140:Src/main.c    ****   /* Initialize all configured peripherals */
 141:Src/main.c    ****   MX_GPIO_Init();
 142:Src/main.c    ****   MX_USART2_UART_Init();
 143:Src/main.c    ****   /* USER CODE BEGIN 2 */
 144:Src/main.c    ****   initialise_monitor_handles();
 145:Src/main.c    ****   
 146:Src/main.c    ****   //TURN ON THE LED 
ARM GAS  /tmp/ccpnR8yw.s 			page 4


 147:Src/main.c    ****   LED_TURNON();
 148:Src/main.c    ****   
 149:Src/main.c    ****   /* USER CODE END 2 */
 150:Src/main.c    ****   
 151:Src/main.c    **** 
 152:Src/main.c    **** 
 153:Src/main.c    **** 
 154:Src/main.c    ****   // 
 155:Src/main.c    **** 
 156:Src/main.c    ****   //it is on place 4                          SYSCFG_EXTICR4_EXTI14
 157:Src/main.c    ****  /* SYSCFG->EXTICR[4]  = (SYSCFG->EXTICR[4]  & ~SYSCFG_EXTICR1_EXTI0_PC)  |
 158:Src/main.c    ****                         (0b0010 << SYSCFG_EXTICR1_EXTI0_Pos);  // pin PC0 to interrupt  EXTI0
 159:Src/main.c    ****   
 160:Src/main.c    ****   EXTI->FTSR  =  EXTI_FTSR_TR13;   
 161:Src/main.c    ****   EXTI->IMR  = EXTI_IMR_MR13;  
 162:Src/main.c    ****   NVIC_EnableIRQ(EXTI15_10_IRQn);  */
 163:Src/main.c    ****   
 164:Src/main.c    ****   while (1)
 165:Src/main.c    ****   {
 166:Src/main.c    ****       if(boardButton() == 0)
 167:Src/main.c    ****       {
 168:Src/main.c    ****         GPIOA->ODR |= GPIO_ODR_5;
 169:Src/main.c    ****         HAL_Delay(1000);
 170:Src/main.c    ****         GPIOA->ODR &= ~GPIO_ODR_5;
 171:Src/main.c    ****         HAL_Delay(300);
 172:Src/main.c    ****       }
 173:Src/main.c    ****   }
 174:Src/main.c    ****   return 0;
 175:Src/main.c    **** }
 176:Src/main.c    **** 
 177:Src/main.c    **** 
 178:Src/main.c    **** void EXTI0_IRQHandler(void)
 179:Src/main.c    **** {
 180:Src/main.c    ****   // printf("am in here \n");
 181:Src/main.c    ****   // mycount++;
 182:Src/main.c    ****   // GPIOA->MODER = (GPIOA->MODER & ~GPIO_MODER_MODER5) |
 183:Src/main.c    ****   // 			   (0b01 << GPIO_MODER_MODER5_Pos);       // set pin PA5 to output.
 184:Src/main.c    ****   // GPIOA->OTYPER &= ~GPIO_OTYPER_OT_5;                // set pin PA5 to output type to push-pull
 185:Src/main.c    ****   // GPIOA->ODR |= GPIO_ODR_5;
 186:Src/main.c    **** 
 187:Src/main.c    ****   EXTI->PR |= EXTI_PR_PR13;
 188:Src/main.c    ****   mycount++;
 189:Src/main.c    **** }
 190:Src/main.c    **** 
 191:Src/main.c    **** /**
 192:Src/main.c    ****   * @brief System Clock Configuration
 193:Src/main.c    ****   * @retval None
 194:Src/main.c    ****   */
 195:Src/main.c    **** void SystemClock_Config(void)
 196:Src/main.c    **** {
 197:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 198:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 199:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 200:Src/main.c    **** 
 201:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 202:Src/main.c    ****   */
 203:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
ARM GAS  /tmp/ccpnR8yw.s 			page 5


 204:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 205:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 209:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 210:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 211:Src/main.c    ****   {
 212:Src/main.c    ****     Error_Handler();
 213:Src/main.c    ****   }
 214:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 215:Src/main.c    ****   */
 216:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 217:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 218:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 219:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 220:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 221:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 222:Src/main.c    **** 
 223:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 224:Src/main.c    ****   {
 225:Src/main.c    ****     Error_Handler();
 226:Src/main.c    ****   }
 227:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 228:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 229:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 230:Src/main.c    ****   {
 231:Src/main.c    ****     Error_Handler();
 232:Src/main.c    ****   }
 233:Src/main.c    **** }
 234:Src/main.c    **** 
 235:Src/main.c    **** /**
 236:Src/main.c    ****   * @brief USART2 Initialization Function
 237:Src/main.c    ****   * @param None
 238:Src/main.c    ****   * @retval None
 239:Src/main.c    ****   */
 240:Src/main.c    **** static void MX_USART2_UART_Init(void)
 241:Src/main.c    **** {
 242:Src/main.c    **** 
 243:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 244:Src/main.c    **** 
 245:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 246:Src/main.c    **** 
 247:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 248:Src/main.c    **** 
 249:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 250:Src/main.c    ****   huart2.Instance = USART2;
 251:Src/main.c    ****   huart2.Init.BaudRate = 38400;
 252:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 253:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 254:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 255:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 256:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 257:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 258:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 259:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 260:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
ARM GAS  /tmp/ccpnR8yw.s 			page 6


 261:Src/main.c    ****   {
 262:Src/main.c    ****     Error_Handler();
 263:Src/main.c    ****   }
 264:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 267:Src/main.c    **** 
 268:Src/main.c    **** }
 269:Src/main.c    **** 
 270:Src/main.c    **** /**
 271:Src/main.c    ****   * @brief GPIO Initialization Function
 272:Src/main.c    ****   * @param None
 273:Src/main.c    ****   * @retval None
 274:Src/main.c    ****   */
 275:Src/main.c    **** static void MX_GPIO_Init(void)
 276:Src/main.c    **** {
  27              		.loc 1 276 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 40
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 8AB0     		sub	sp, sp, #40
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 48
 277:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 277 0
  40 0004 0024     		movs	r4, #0
  41 0006 0594     		str	r4, [sp, #20]
  42 0008 0694     		str	r4, [sp, #24]
  43 000a 0794     		str	r4, [sp, #28]
  44 000c 0894     		str	r4, [sp, #32]
  45 000e 0994     		str	r4, [sp, #36]
  46              	.LBB2:
 278:Src/main.c    **** 
 279:Src/main.c    ****   /* GPIO Ports Clock Enable */
 280:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  47              		.loc 1 280 0
  48 0010 1B4B     		ldr	r3, .L3
  49 0012 5A69     		ldr	r2, [r3, #20]
  50 0014 42F40022 		orr	r2, r2, #524288
  51 0018 5A61     		str	r2, [r3, #20]
  52 001a 5A69     		ldr	r2, [r3, #20]
  53 001c 02F40022 		and	r2, r2, #524288
  54 0020 0192     		str	r2, [sp, #4]
  55 0022 019A     		ldr	r2, [sp, #4]
  56              	.LBE2:
  57              	.LBB3:
 281:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
  58              		.loc 1 281 0
  59 0024 5A69     		ldr	r2, [r3, #20]
  60 0026 42F48002 		orr	r2, r2, #4194304
  61 002a 5A61     		str	r2, [r3, #20]
  62 002c 5A69     		ldr	r2, [r3, #20]
ARM GAS  /tmp/ccpnR8yw.s 			page 7


  63 002e 02F48002 		and	r2, r2, #4194304
  64 0032 0292     		str	r2, [sp, #8]
  65 0034 029A     		ldr	r2, [sp, #8]
  66              	.LBE3:
  67              	.LBB4:
 282:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  68              		.loc 1 282 0
  69 0036 5A69     		ldr	r2, [r3, #20]
  70 0038 42F40032 		orr	r2, r2, #131072
  71 003c 5A61     		str	r2, [r3, #20]
  72 003e 5A69     		ldr	r2, [r3, #20]
  73 0040 02F40032 		and	r2, r2, #131072
  74 0044 0392     		str	r2, [sp, #12]
  75 0046 039A     		ldr	r2, [sp, #12]
  76              	.LBE4:
  77              	.LBB5:
 283:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  78              		.loc 1 283 0
  79 0048 5A69     		ldr	r2, [r3, #20]
  80 004a 42F48022 		orr	r2, r2, #262144
  81 004e 5A61     		str	r2, [r3, #20]
  82 0050 5B69     		ldr	r3, [r3, #20]
  83 0052 03F48023 		and	r3, r3, #262144
  84 0056 0493     		str	r3, [sp, #16]
  85 0058 049B     		ldr	r3, [sp, #16]
  86              	.LBE5:
 284:Src/main.c    **** 
 285:Src/main.c    ****   /*Configure GPIO pin Output Level */
 286:Src/main.c    ****   HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
  87              		.loc 1 286 0
  88 005a 2246     		mov	r2, r4
  89 005c 2021     		movs	r1, #32
  90 005e 4FF09040 		mov	r0, #1207959552
  91 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL0:
 287:Src/main.c    **** 
 288:Src/main.c    ****   /*Configure GPIO pin : LD2_Pin */
 289:Src/main.c    ****   GPIO_InitStruct.Pin = LD2_Pin;
  93              		.loc 1 289 0
  94 0066 2023     		movs	r3, #32
  95 0068 0593     		str	r3, [sp, #20]
 290:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  96              		.loc 1 290 0
  97 006a 0123     		movs	r3, #1
  98 006c 0693     		str	r3, [sp, #24]
 291:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  99              		.loc 1 291 0
 100 006e 0794     		str	r4, [sp, #28]
 292:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 101              		.loc 1 292 0
 102 0070 0894     		str	r4, [sp, #32]
 293:Src/main.c    ****   HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 103              		.loc 1 293 0
 104 0072 05A9     		add	r1, sp, #20
 105 0074 4FF09040 		mov	r0, #1207959552
 106 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
ARM GAS  /tmp/ccpnR8yw.s 			page 8


 294:Src/main.c    **** 
 295:Src/main.c    **** }
 108              		.loc 1 295 0
 109 007c 0AB0     		add	sp, sp, #40
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 8
 112              		@ sp needed
 113 007e 10BD     		pop	{r4, pc}
 114              	.L4:
 115              		.align	2
 116              	.L3:
 117 0080 00100240 		.word	1073876992
 118              		.cfi_endproc
 119              	.LFE138:
 121              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 122              		.align	1
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu fpv4-sp-d16
 128              	MX_USART2_UART_Init:
 129              	.LFB137:
 241:Src/main.c    **** 
 130              		.loc 1 241 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134 0000 08B5     		push	{r3, lr}
 135              	.LCFI3:
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 3, -8
 138              		.cfi_offset 14, -4
 250:Src/main.c    ****   huart2.Init.BaudRate = 38400;
 139              		.loc 1 250 0
 140 0002 0948     		ldr	r0, .L7
 141 0004 094B     		ldr	r3, .L7+4
 142 0006 0360     		str	r3, [r0]
 251:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 143              		.loc 1 251 0
 144 0008 4FF41643 		mov	r3, #38400
 145 000c 4360     		str	r3, [r0, #4]
 252:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 146              		.loc 1 252 0
 147 000e 0023     		movs	r3, #0
 148 0010 8360     		str	r3, [r0, #8]
 253:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 149              		.loc 1 253 0
 150 0012 C360     		str	r3, [r0, #12]
 254:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 151              		.loc 1 254 0
 152 0014 0361     		str	r3, [r0, #16]
 255:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 153              		.loc 1 255 0
 154 0016 0C22     		movs	r2, #12
 155 0018 4261     		str	r2, [r0, #20]
 256:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 156              		.loc 1 256 0
ARM GAS  /tmp/ccpnR8yw.s 			page 9


 157 001a 8361     		str	r3, [r0, #24]
 257:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 158              		.loc 1 257 0
 159 001c C361     		str	r3, [r0, #28]
 258:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 160              		.loc 1 258 0
 161 001e 0362     		str	r3, [r0, #32]
 259:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 162              		.loc 1 259 0
 163 0020 4362     		str	r3, [r0, #36]
 260:Src/main.c    ****   {
 164              		.loc 1 260 0
 165 0022 FFF7FEFF 		bl	HAL_UART_Init
 166              	.LVL2:
 167 0026 08BD     		pop	{r3, pc}
 168              	.L8:
 169              		.align	2
 170              	.L7:
 171 0028 00000000 		.word	huart2
 172 002c 00440040 		.word	1073759232
 173              		.cfi_endproc
 174              	.LFE137:
 176              		.section	.text.LED_TURNON,"ax",%progbits
 177              		.align	1
 178              		.global	LED_TURNON
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv4-sp-d16
 184              	LED_TURNON:
 185              	.LFB131:
  79:Src/main.c    **** 	GPIOA->MODER = (GPIOA->MODER & ~GPIO_MODER_MODER5) |
 186              		.loc 1 79 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
  80:Src/main.c    **** 				   (0b01 << GPIO_MODER_MODER5_Pos);       // set pin PA5 to output.
 191              		.loc 1 80 0
 192 0000 4FF09042 		mov	r2, #1207959552
 193 0004 1368     		ldr	r3, [r2]
 194 0006 23F44063 		bic	r3, r3, #3072
 195 000a 43F48063 		orr	r3, r3, #1024
 196 000e 1360     		str	r3, [r2]
  83:Src/main.c    **** 		
 197              		.loc 1 83 0
 198 0010 5368     		ldr	r3, [r2, #4]
 199 0012 23F02003 		bic	r3, r3, #32
 200 0016 5360     		str	r3, [r2, #4]
 201 0018 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE131:
 205              		.section	.text.boardButton,"ax",%progbits
 206              		.align	1
 207              		.global	boardButton
 208              		.syntax unified
 209              		.thumb
ARM GAS  /tmp/ccpnR8yw.s 			page 10


 210              		.thumb_func
 211              		.fpu fpv4-sp-d16
 213              	boardButton:
 214              	.LFB132:
  89:Src/main.c    ****   GPIOC->MODER = (GPIOC->MODER & ~GPIO_MODER_MODER13) |
 215              		.loc 1 89 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219              		@ link register save eliminated.
  90:Src/main.c    ****                   (0b00 << GPIO_MODER_MODER13_Pos);    //set pin to input 
 220              		.loc 1 90 0
 221 0000 094B     		ldr	r3, .L13
 222 0002 1A68     		ldr	r2, [r3]
 223 0004 22F04062 		bic	r2, r2, #201326592
 224 0008 1A60     		str	r2, [r3]
  94:Src/main.c    ****                   (0b01 << GPIO_PUPDR_PUPDR13_Pos);
 225              		.loc 1 94 0
 226 000a DA68     		ldr	r2, [r3, #12]
 227 000c 22F04062 		bic	r2, r2, #201326592
 228 0010 42F08062 		orr	r2, r2, #67108864
 229 0014 DA60     		str	r2, [r3, #12]
  97:Src/main.c    ****   {
 230              		.loc 1 97 0
 231 0016 1B69     		ldr	r3, [r3, #16]
 232 0018 13F4005F 		tst	r3, #8192
 233 001c 01D1     		bne	.L12
  99:Src/main.c    ****   }
 234              		.loc 1 99 0
 235 001e 0020     		movs	r0, #0
 236 0020 7047     		bx	lr
 237              	.L12:
 101:Src/main.c    **** }
 238              		.loc 1 101 0
 239 0022 4FF0FF30 		mov	r0, #-1
 102:Src/main.c    **** 
 240              		.loc 1 102 0
 241 0026 7047     		bx	lr
 242              	.L14:
 243              		.align	2
 244              	.L13:
 245 0028 00080048 		.word	1207961600
 246              		.cfi_endproc
 247              	.LFE132:
 249              		.section	.text.Delay,"ax",%progbits
 250              		.align	1
 251              		.global	Delay
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	Delay:
 258              	.LFB133:
 107:Src/main.c    ****   int time = mystick;
 259              		.loc 1 107 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccpnR8yw.s 			page 11


 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 264              	.LVL3:
 108:Src/main.c    **** 	while((mystick - time ) < (millisecond));
 265              		.loc 1 108 0
 266 0000 034B     		ldr	r3, .L17
 267 0002 1A68     		ldr	r2, [r3]
 268              	.LVL4:
 269              	.L16:
 109:Src/main.c    **** }
 270              		.loc 1 109 0 discriminator 1
 271 0004 024B     		ldr	r3, .L17
 272 0006 1B68     		ldr	r3, [r3]
 273 0008 9B1A     		subs	r3, r3, r2
 274 000a 8342     		cmp	r3, r0
 275 000c FADB     		blt	.L16
 110:Src/main.c    **** 
 276              		.loc 1 110 0
 277 000e 7047     		bx	lr
 278              	.L18:
 279              		.align	2
 280              	.L17:
 281 0010 00000000 		.word	mystick
 282              		.cfi_endproc
 283              	.LFE133:
 285              		.section	.text.EXTI0_IRQHandler,"ax",%progbits
 286              		.align	1
 287              		.global	EXTI0_IRQHandler
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu fpv4-sp-d16
 293              	EXTI0_IRQHandler:
 294              	.LFB135:
 179:Src/main.c    ****   // printf("am in here \n");
 295              		.loc 1 179 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 187:Src/main.c    ****   mycount++;
 300              		.loc 1 187 0
 301 0000 044A     		ldr	r2, .L20
 302 0002 5369     		ldr	r3, [r2, #20]
 303 0004 43F40053 		orr	r3, r3, #8192
 304 0008 5361     		str	r3, [r2, #20]
 188:Src/main.c    **** }
 305              		.loc 1 188 0
 306 000a 034A     		ldr	r2, .L20+4
 307 000c 1368     		ldr	r3, [r2]
 308 000e 0133     		adds	r3, r3, #1
 309 0010 1360     		str	r3, [r2]
 310 0012 7047     		bx	lr
 311              	.L21:
 312              		.align	2
 313              	.L20:
 314 0014 00040140 		.word	1073808384
ARM GAS  /tmp/ccpnR8yw.s 			page 12


 315 0018 00000000 		.word	mycount
 316              		.cfi_endproc
 317              	.LFE135:
 319              		.section	.text.SystemClock_Config,"ax",%progbits
 320              		.align	1
 321              		.global	SystemClock_Config
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	SystemClock_Config:
 328              	.LFB136:
 196:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 329              		.loc 1 196 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 152
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 30B5     		push	{r4, r5, lr}
 334              	.LCFI4:
 335              		.cfi_def_cfa_offset 12
 336              		.cfi_offset 4, -12
 337              		.cfi_offset 5, -8
 338              		.cfi_offset 14, -4
 339 0002 A7B0     		sub	sp, sp, #156
 340              	.LCFI5:
 341              		.cfi_def_cfa_offset 168
 197:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 342              		.loc 1 197 0
 343 0004 2822     		movs	r2, #40
 344 0006 0021     		movs	r1, #0
 345 0008 1CA8     		add	r0, sp, #112
 346 000a FFF7FEFF 		bl	memset
 347              	.LVL5:
 198:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 348              		.loc 1 198 0
 349 000e 0024     		movs	r4, #0
 350 0010 1794     		str	r4, [sp, #92]
 351 0012 1894     		str	r4, [sp, #96]
 352 0014 1994     		str	r4, [sp, #100]
 353 0016 1A94     		str	r4, [sp, #104]
 354 0018 1B94     		str	r4, [sp, #108]
 199:Src/main.c    **** 
 355              		.loc 1 199 0
 356 001a 5822     		movs	r2, #88
 357 001c 2146     		mov	r1, r4
 358 001e 01A8     		add	r0, sp, #4
 359 0020 FFF7FEFF 		bl	memset
 360              	.LVL6:
 203:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 361              		.loc 1 203 0
 362 0024 0225     		movs	r5, #2
 363 0026 1C95     		str	r5, [sp, #112]
 204:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 364              		.loc 1 204 0
 365 0028 0123     		movs	r3, #1
 366 002a 1F93     		str	r3, [sp, #124]
 205:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
ARM GAS  /tmp/ccpnR8yw.s 			page 13


 367              		.loc 1 205 0
 368 002c 1023     		movs	r3, #16
 369 002e 2093     		str	r3, [sp, #128]
 206:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 370              		.loc 1 206 0
 371 0030 2295     		str	r5, [sp, #136]
 207:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 372              		.loc 1 207 0
 373 0032 4FF40043 		mov	r3, #32768
 374 0036 2393     		str	r3, [sp, #140]
 208:Src/main.c    ****   RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
 375              		.loc 1 208 0
 376 0038 4FF4E013 		mov	r3, #1835008
 377 003c 2493     		str	r3, [sp, #144]
 210:Src/main.c    ****   {
 378              		.loc 1 210 0
 379 003e 1CA8     		add	r0, sp, #112
 380 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
 381              	.LVL7:
 216:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 382              		.loc 1 216 0
 383 0044 0F23     		movs	r3, #15
 384 0046 1793     		str	r3, [sp, #92]
 218:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 385              		.loc 1 218 0
 386 0048 1895     		str	r5, [sp, #96]
 219:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 387              		.loc 1 219 0
 388 004a 1994     		str	r4, [sp, #100]
 220:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 389              		.loc 1 220 0
 390 004c 4FF48063 		mov	r3, #1024
 391 0050 1A93     		str	r3, [sp, #104]
 221:Src/main.c    **** 
 392              		.loc 1 221 0
 393 0052 1B94     		str	r4, [sp, #108]
 223:Src/main.c    ****   {
 394              		.loc 1 223 0
 395 0054 2946     		mov	r1, r5
 396 0056 17A8     		add	r0, sp, #92
 397 0058 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 398              	.LVL8:
 227:Src/main.c    ****   PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 399              		.loc 1 227 0
 400 005c 0195     		str	r5, [sp, #4]
 228:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 401              		.loc 1 228 0
 402 005e 0494     		str	r4, [sp, #16]
 229:Src/main.c    ****   {
 403              		.loc 1 229 0
 404 0060 01A8     		add	r0, sp, #4
 405 0062 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 406              	.LVL9:
 233:Src/main.c    **** 
 407              		.loc 1 233 0
 408 0066 27B0     		add	sp, sp, #156
 409              	.LCFI6:
ARM GAS  /tmp/ccpnR8yw.s 			page 14


 410              		.cfi_def_cfa_offset 12
 411              		@ sp needed
 412 0068 30BD     		pop	{r4, r5, pc}
 413              		.cfi_endproc
 414              	.LFE136:
 416              		.section	.text.main,"ax",%progbits
 417              		.align	1
 418              		.global	main
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu fpv4-sp-d16
 424              	main:
 425              	.LFB134:
 115:Src/main.c    ****    /* USER CODE BEGIN 1 */
 426              		.loc 1 115 0
 427              		.cfi_startproc
 428              		@ Volatile: function does not return.
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431 0000 08B5     		push	{r3, lr}
 432              	.LCFI7:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 3, -8
 435              		.cfi_offset 14, -4
 124:Src/main.c    **** 
 436              		.loc 1 124 0
 437 0002 FFF7FEFF 		bl	HAL_Init
 438              	.LVL10:
 131:Src/main.c    **** 	
 439              		.loc 1 131 0
 440 0006 FFF7FEFF 		bl	SystemClock_Config
 441              	.LVL11:
 141:Src/main.c    ****   MX_USART2_UART_Init();
 442              		.loc 1 141 0
 443 000a FFF7FEFF 		bl	MX_GPIO_Init
 444              	.LVL12:
 142:Src/main.c    ****   /* USER CODE BEGIN 2 */
 445              		.loc 1 142 0
 446 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 447              	.LVL13:
 144:Src/main.c    ****   
 448              		.loc 1 144 0
 449 0012 FFF7FEFF 		bl	initialise_monitor_handles
 450              	.LVL14:
 147:Src/main.c    ****   
 451              		.loc 1 147 0
 452 0016 FFF7FEFF 		bl	LED_TURNON
 453              	.LVL15:
 454              	.L25:
 166:Src/main.c    ****       {
 455              		.loc 1 166 0
 456 001a FFF7FEFF 		bl	boardButton
 457              	.LVL16:
 458 001e 0028     		cmp	r0, #0
 459 0020 FBD1     		bne	.L25
 168:Src/main.c    ****         HAL_Delay(1000);
ARM GAS  /tmp/ccpnR8yw.s 			page 15


 460              		.loc 1 168 0
 461 0022 4FF09044 		mov	r4, #1207959552
 462 0026 6369     		ldr	r3, [r4, #20]
 463 0028 43F02003 		orr	r3, r3, #32
 464 002c 6361     		str	r3, [r4, #20]
 169:Src/main.c    ****         GPIOA->ODR &= ~GPIO_ODR_5;
 465              		.loc 1 169 0
 466 002e 4FF47A70 		mov	r0, #1000
 467 0032 FFF7FEFF 		bl	HAL_Delay
 468              	.LVL17:
 170:Src/main.c    ****         HAL_Delay(300);
 469              		.loc 1 170 0
 470 0036 6369     		ldr	r3, [r4, #20]
 471 0038 23F02003 		bic	r3, r3, #32
 472 003c 6361     		str	r3, [r4, #20]
 171:Src/main.c    ****       }
 473              		.loc 1 171 0
 474 003e 4FF49670 		mov	r0, #300
 475 0042 FFF7FEFF 		bl	HAL_Delay
 476              	.LVL18:
 477 0046 E8E7     		b	.L25
 478              		.cfi_endproc
 479              	.LFE134:
 481              		.section	.text.Error_Handler,"ax",%progbits
 482              		.align	1
 483              		.global	Error_Handler
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 487              		.fpu fpv4-sp-d16
 489              	Error_Handler:
 490              	.LFB139:
 296:Src/main.c    **** 
 297:Src/main.c    **** /* USER CODE BEGIN 4 */
 298:Src/main.c    **** 
 299:Src/main.c    **** /* USER CODE END 4 */
 300:Src/main.c    **** 
 301:Src/main.c    **** /**
 302:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 303:Src/main.c    ****   * @retval None
 304:Src/main.c    ****   */
 305:Src/main.c    **** void Error_Handler(void)
 306:Src/main.c    **** {
 491              		.loc 1 306 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		@ link register save eliminated.
 496 0000 7047     		bx	lr
 497              		.cfi_endproc
 498              	.LFE139:
 500              		.comm	huart2,128,4
 501              		.text
 502              	.Letext0:
 503              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 504              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 505              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  /tmp/ccpnR8yw.s 			page 16


 506              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 507              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303xe.h"
 508              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 509              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 510              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 511              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 512              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 513              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 514              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 515              		.file 14 "/usr/include/newlib/sys/lock.h"
 516              		.file 15 "/usr/include/newlib/sys/_types.h"
 517              		.file 16 "/usr/lib/gcc/arm-none-eabi/6.3.1/include/stddef.h"
 518              		.file 17 "/usr/include/newlib/sys/reent.h"
ARM GAS  /tmp/ccpnR8yw.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccpnR8yw.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccpnR8yw.s:24     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccpnR8yw.s:117    .text.MX_GPIO_Init:0000000000000080 $d
     /tmp/ccpnR8yw.s:122    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccpnR8yw.s:128    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccpnR8yw.s:171    .text.MX_USART2_UART_Init:0000000000000028 $d
                            *COM*:0000000000000080 huart2
     /tmp/ccpnR8yw.s:177    .text.LED_TURNON:0000000000000000 $t
     /tmp/ccpnR8yw.s:184    .text.LED_TURNON:0000000000000000 LED_TURNON
     /tmp/ccpnR8yw.s:206    .text.boardButton:0000000000000000 $t
     /tmp/ccpnR8yw.s:213    .text.boardButton:0000000000000000 boardButton
     /tmp/ccpnR8yw.s:245    .text.boardButton:0000000000000028 $d
     /tmp/ccpnR8yw.s:250    .text.Delay:0000000000000000 $t
     /tmp/ccpnR8yw.s:257    .text.Delay:0000000000000000 Delay
     /tmp/ccpnR8yw.s:281    .text.Delay:0000000000000010 $d
     /tmp/ccpnR8yw.s:286    .text.EXTI0_IRQHandler:0000000000000000 $t
     /tmp/ccpnR8yw.s:293    .text.EXTI0_IRQHandler:0000000000000000 EXTI0_IRQHandler
     /tmp/ccpnR8yw.s:314    .text.EXTI0_IRQHandler:0000000000000014 $d
     /tmp/ccpnR8yw.s:320    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccpnR8yw.s:327    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccpnR8yw.s:417    .text.main:0000000000000000 $t
     /tmp/ccpnR8yw.s:424    .text.main:0000000000000000 main
     /tmp/ccpnR8yw.s:482    .text.Error_Handler:0000000000000000 $t
     /tmp/ccpnR8yw.s:489    .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
mystick
mycount
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
initialise_monitor_handles
HAL_Delay
